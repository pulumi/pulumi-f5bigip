{
    "name": "f5bigip",
    "description": "A Pulumi package for creating and managing F5 BigIP resources.",
    "keywords": [
        "pulumi",
        "f5",
        "bigip"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`bigip` Terraform Provider](https://github.com/F5Networks/terraform-provider-bigip).",
    "repository": "https://github.com/pulumi/pulumi-f5bigip",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "config": {
        "variables": {
            "address": {
                "type": "string",
                "description": "Domain name/IP of the BigIP\n"
            },
            "loginRef": {
                "type": "string",
                "description": "Login reference for token authentication (see BIG-IP REST docs for details)\n"
            },
            "password": {
                "type": "string",
                "description": "The user's password. Leave empty if using token_value\n"
            },
            "port": {
                "type": "string",
                "description": "Management Port to connect to Bigip\n"
            },
            "teemDisable": {
                "type": "boolean",
                "description": "If this flag set to true,sending telemetry data to TEEM will be disabled\n"
            },
            "tokenAuth": {
                "type": "boolean",
                "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
            },
            "tokenValue": {
                "type": "string",
                "description": "A token generated outside the provider, in place of password\n"
            },
            "username": {
                "type": "string",
                "description": "Username with API access to the BigIP\n"
            }
        }
    },
    "types": {
        "f5bigip:cm/DeviceGroupDevice:DeviceGroupDevice": {
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Is the name of the device Group\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "setSyncLeader": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:index/EventServiceDiscoveryNode:EventServiceDiscoveryNode": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ip": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:ltm/DataGroupRecord:DataGroupRecord": {
            "properties": {
                "data": {
                    "type": "string",
                    "description": ", sets the value of the record's `data` attribute, specifying a value here will create a record in the form of `name := data`\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": ", sets the value of the record's `name` attribute, must be of type defined in `type` attribute\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "f5bigip:ltm/NodeFqdn:NodeFqdn": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "Specifies the node's address family. The default is 'unspecified', or IP-agnostic. This needs to be specified inside the fqdn (fully qualified domain name).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autopopulate": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "downinterval": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "description": "Specifies the amount of time before sending the next DNS query. Default is 3600. This needs to be specified inside the fqdn (fully qualified domain name).\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "autopopulate",
                        "downinterval",
                        "interval"
                    ]
                }
            }
        },
        "f5bigip:ltm/PolicyRule:PolicyRule": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/PolicyRuleAction:PolicyRuleAction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/PolicyRuleCondition:PolicyRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy ( policy name should be in full path which is combination of partition and policy name )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "f5bigip:ltm/PolicyRuleAction:PolicyRuleAction": {
            "properties": {
                "appService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "application": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "asm": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "avr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cache": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "carp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "category": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "classify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clonePool": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieHash": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieInsert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookiePassive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieRewrite": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "decompress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationAddress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirySecs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extension": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forward": {
                    "type": "boolean",
                    "description": "This action will affect forwarding.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromProfile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hash": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeader": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHost": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpReferer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpReply": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpSetCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUri": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ifile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalVirtual": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "l7dos": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "length": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "log": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ltmPolicy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "member": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netmask": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nexthop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "node": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offset": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pem": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "persist": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pin": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pool": {
                    "type": "string",
                    "description": "This action will direct the stream to this pool.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rateclass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remove": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replace": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAdapt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reset": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseAdapt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "script": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "select": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSsl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "setVariable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snatpool": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHandshake": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslSessionId": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpNagle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "universal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "virtual": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlanId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wam": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "write": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "appService",
                        "application",
                        "asm",
                        "avr",
                        "cache",
                        "carp",
                        "category",
                        "classify",
                        "clonePool",
                        "code",
                        "compress",
                        "connection",
                        "content",
                        "cookieHash",
                        "cookieInsert",
                        "cookiePassive",
                        "cookieRewrite",
                        "decompress",
                        "defer",
                        "destinationAddress",
                        "disable",
                        "domain",
                        "enable",
                        "expiry",
                        "expirySecs",
                        "expression",
                        "extension",
                        "facility",
                        "fromProfile",
                        "hash",
                        "host",
                        "http",
                        "httpBasicAuth",
                        "httpCookie",
                        "httpHeader",
                        "httpReferer",
                        "httpReply",
                        "httpSetCookie",
                        "httpUri",
                        "ifile",
                        "insert",
                        "internalVirtual",
                        "ipAddress",
                        "key",
                        "l7dos",
                        "length",
                        "location",
                        "log",
                        "ltmPolicy",
                        "member",
                        "message",
                        "netmask",
                        "nexthop",
                        "node",
                        "offset",
                        "path",
                        "pem",
                        "persist",
                        "pin",
                        "policy",
                        "pool",
                        "port",
                        "priority",
                        "profile",
                        "protocol",
                        "queryString",
                        "rateclass",
                        "redirect",
                        "remove",
                        "replace",
                        "request",
                        "requestAdapt",
                        "reset",
                        "response",
                        "responseAdapt",
                        "scheme",
                        "script",
                        "select",
                        "serverSsl",
                        "setVariable",
                        "shutdown",
                        "snat",
                        "snatpool",
                        "sourceAddress",
                        "sslClientHello",
                        "sslServerHandshake",
                        "sslServerHello",
                        "sslSessionId",
                        "status",
                        "tcl",
                        "tcpNagle",
                        "text",
                        "timeout",
                        "tmName",
                        "uie",
                        "universal",
                        "value",
                        "virtual",
                        "vlan",
                        "vlanId",
                        "wam",
                        "write"
                    ]
                }
            }
        },
        "f5bigip:ltm/PolicyRuleCondition:PolicyRuleCondition": {
            "properties": {
                "address": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "all": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserType": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserVersion": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "caseInsensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cipher": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cipherBits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSsl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "code": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contains": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "continent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuUsage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceMake": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceModel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endsWith": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "equals": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiry": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extension": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "external": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "greater": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "greaterOrEqual": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeader": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHost": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMethod": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpReferer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpSetCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpStatus": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUri": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUserAgent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpVersion": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "last15secs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "last1min": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "last5mins": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "less": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lessOrEqual": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "local": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "major": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matches": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minor": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "missing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mss": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "not": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "org": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathSegment": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "present": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryParameter": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryString": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionCode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remote": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeDomain": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rtt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslExtension": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHandshake": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startsWith": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unnamedQueryParameter": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlan": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlanId": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "address",
                        "all",
                        "appService",
                        "browserType",
                        "browserVersion",
                        "caseInsensitive",
                        "caseSensitive",
                        "cipher",
                        "cipherBits",
                        "clientSsl",
                        "code",
                        "commonName",
                        "contains",
                        "continent",
                        "countryCode",
                        "countryName",
                        "cpuUsage",
                        "deviceMake",
                        "deviceModel",
                        "domain",
                        "endsWith",
                        "equals",
                        "expiry",
                        "extension",
                        "external",
                        "geoip",
                        "greater",
                        "greaterOrEqual",
                        "host",
                        "httpBasicAuth",
                        "httpCookie",
                        "httpHeader",
                        "httpHost",
                        "httpMethod",
                        "httpReferer",
                        "httpSetCookie",
                        "httpStatus",
                        "httpUri",
                        "httpUserAgent",
                        "httpVersion",
                        "index",
                        "internal",
                        "isp",
                        "last15secs",
                        "last1min",
                        "last5mins",
                        "less",
                        "lessOrEqual",
                        "local",
                        "major",
                        "matches",
                        "minor",
                        "missing",
                        "mss",
                        "not",
                        "org",
                        "password",
                        "path",
                        "pathSegment",
                        "port",
                        "present",
                        "protocol",
                        "queryParameter",
                        "queryString",
                        "regionCode",
                        "regionName",
                        "remote",
                        "request",
                        "response",
                        "routeDomain",
                        "rtt",
                        "scheme",
                        "serverName",
                        "sslCert",
                        "sslClientHello",
                        "sslExtension",
                        "sslServerHandshake",
                        "sslServerHello",
                        "startsWith",
                        "tcp",
                        "text",
                        "tmName",
                        "unnamedQueryParameter",
                        "userAgentToken",
                        "username",
                        "value",
                        "values",
                        "version",
                        "vlan",
                        "vlanId"
                    ]
                }
            }
        },
        "f5bigip:ltm/ProfileClientSslCertKeyChain:ProfileClientSslCertKeyChain": {
            "properties": {
                "cert": {
                    "type": "string",
                    "description": "Specifies a cert name for use.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "chain": {
                    "type": "string",
                    "description": "Contains a certificate chain that is relevant to the certificate and key mentioned earlier.This key is optional\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "description": "Contains a key name\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the profile.Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-clientssl-profile`.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "passphrase": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:ltm/SnatOrigin:SnatOrigin": {
            "properties": {
                "appService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snat\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:ltm/getDataGroupRecord:getDataGroupRecord": {
            "properties": {
                "data": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the datagroup\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "f5bigip:ltm/getNodeFqdn:getNodeFqdn": {
            "properties": {
                "addressFamily": {
                    "type": "string",
                    "description": "The FQDN node's address family.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autopopulate": {
                    "type": "string",
                    "description": "Specifies if the node should scale to the IP address set returned by DNS.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "downinterval": {
                    "type": "integer",
                    "description": "The number of attempts to resolve a domain name.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "interval": {
                    "type": "string",
                    "description": "The amount of time before sending the next DNS query.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "autopopulate",
                "downinterval",
                "interval"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5bigip:ltm/getPolicyRule:getPolicyRule": {
            "properties": {
                "actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/getPolicyRuleAction:getPolicyRuleAction"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "conditions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/getPolicyRuleCondition:getPolicyRuleCondition"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the policy which includes partion ( /partition/policy-name )\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "name"
            ]
        },
        "f5bigip:ltm/getPolicyRuleAction:getPolicyRuleAction": {
            "properties": {
                "appService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "application": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "asm": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "avr": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cache": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "carp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "category": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "classify": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clonePool": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "code": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "compress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "connection": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "content": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieHash": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieInsert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookiePassive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cookieRewrite": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "decompress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "defer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "destinationAddress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "enable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiry": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expirySecs": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expression": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extension": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "facility": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "forward": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "fromProfile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hash": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "http": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeader": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHost": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpReferer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpReply": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpSetCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUri": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ifile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "insert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internalVirtual": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "key": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "l7dos": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "length": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "location": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "log": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ltmPolicy": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "member": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "netmask": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nexthop": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "node": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "offset": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pem": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "persist": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pin": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "policy": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pool": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "priority": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "profile": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryString": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rateclass": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "redirect": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remove": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "replace": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "requestAdapt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "reset": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "responseAdapt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "script": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "select": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverSsl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "setVariable": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "shutdown": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snat": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "snatpool": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sourceAddress": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHandshake": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslSessionId": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcpNagle": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "timeout": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "uie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "universal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "virtual": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlan": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlanId": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "wam": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "write": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "appService",
                "application",
                "asm",
                "avr",
                "cache",
                "carp",
                "category",
                "classify",
                "clonePool",
                "code",
                "compress",
                "connection",
                "content",
                "cookieHash",
                "cookieInsert",
                "cookiePassive",
                "cookieRewrite",
                "decompress",
                "defer",
                "destinationAddress",
                "disable",
                "domain",
                "enable",
                "expiry",
                "expirySecs",
                "expression",
                "extension",
                "facility",
                "fromProfile",
                "hash",
                "host",
                "http",
                "httpBasicAuth",
                "httpCookie",
                "httpHeader",
                "httpReferer",
                "httpReply",
                "httpSetCookie",
                "httpUri",
                "ifile",
                "insert",
                "internalVirtual",
                "ipAddress",
                "key",
                "l7dos",
                "length",
                "location",
                "log",
                "ltmPolicy",
                "member",
                "message",
                "netmask",
                "nexthop",
                "node",
                "offset",
                "path",
                "pem",
                "persist",
                "pin",
                "policy",
                "pool",
                "port",
                "priority",
                "profile",
                "protocol",
                "queryString",
                "rateclass",
                "redirect",
                "remove",
                "replace",
                "request",
                "requestAdapt",
                "reset",
                "response",
                "responseAdapt",
                "scheme",
                "script",
                "select",
                "serverSsl",
                "setVariable",
                "shutdown",
                "snat",
                "snatpool",
                "sourceAddress",
                "sslClientHello",
                "sslServerHandshake",
                "sslServerHello",
                "sslSessionId",
                "status",
                "tcl",
                "tcpNagle",
                "text",
                "timeout",
                "tmName",
                "uie",
                "universal",
                "value",
                "virtual",
                "vlan",
                "vlanId",
                "wam",
                "write"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5bigip:ltm/getPolicyRuleCondition:getPolicyRuleCondition": {
            "properties": {
                "address": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "all": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "appService": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserType": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "browserVersion": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "caseInsensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "caseSensitive": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cipher": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cipherBits": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "clientSsl": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "code": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "commonName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "contains": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "continent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryCode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "countryName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuUsage": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceMake": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "deviceModel": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "domain": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "endsWith": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "equals": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expiry": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "extension": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "external": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "geoip": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "greater": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "greaterOrEqual": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpBasicAuth": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHeader": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpHost": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpMethod": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpReferer": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpSetCookie": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpStatus": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUri": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpUserAgent": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "httpVersion": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "index": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "internal": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "isp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "last15secs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "last1min": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "last5mins": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "less": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "lessOrEqual": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "local": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "major": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "matches": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "minor": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "missing": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "mss": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "not": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "org": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "password": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "path": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "pathSegment": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "port": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "present": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "protocol": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryParameter": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "queryString": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionCode": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "regionName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "remote": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "request": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "response": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "routeDomain": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rtt": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "scheme": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "serverName": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslCert": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslClientHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslExtension": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHandshake": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "sslServerHello": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startsWith": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tcp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "text": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tmName": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "unnamedQueryParameter": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "userAgentToken": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "username": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "version": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlan": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlanId": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "address",
                "all",
                "appService",
                "browserType",
                "browserVersion",
                "caseInsensitive",
                "caseSensitive",
                "cipher",
                "cipherBits",
                "clientSsl",
                "code",
                "commonName",
                "contains",
                "continent",
                "countryCode",
                "countryName",
                "cpuUsage",
                "deviceMake",
                "deviceModel",
                "domain",
                "endsWith",
                "equals",
                "expiry",
                "extension",
                "external",
                "geoip",
                "greater",
                "greaterOrEqual",
                "host",
                "httpBasicAuth",
                "httpCookie",
                "httpHeader",
                "httpHost",
                "httpMethod",
                "httpReferer",
                "httpSetCookie",
                "httpStatus",
                "httpUri",
                "httpUserAgent",
                "httpVersion",
                "index",
                "internal",
                "isp",
                "last15secs",
                "last1min",
                "last5mins",
                "less",
                "lessOrEqual",
                "local",
                "major",
                "matches",
                "minor",
                "missing",
                "mss",
                "not",
                "org",
                "password",
                "path",
                "pathSegment",
                "port",
                "present",
                "protocol",
                "queryParameter",
                "queryString",
                "regionCode",
                "regionName",
                "remote",
                "request",
                "response",
                "routeDomain",
                "rtt",
                "scheme",
                "serverName",
                "sslCert",
                "sslClientHello",
                "sslExtension",
                "sslServerHandshake",
                "sslServerHello",
                "startsWith",
                "tcp",
                "text",
                "tmName",
                "unnamedQueryParameter",
                "userAgentToken",
                "username",
                "value",
                "values",
                "version",
                "vlan",
                "vlanId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "f5bigip:net/VlanInterface:VlanInterface": {
            "properties": {
                "tagged": {
                    "type": "boolean",
                    "description": "Specifies a list of tagged interfaces or trunks associated with this VLAN. Note that you can associate tagged interfaces or trunks with any number of VLANs.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vlanport": {
                    "type": "string",
                    "description": "Physical or virtual port used for traffic\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:sys/IAppList:IAppList": {
            "properties": {
                "encrypted": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:sys/IAppMetadata:IAppMetadata": {
            "properties": {
                "persists": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:sys/IAppTable:IAppTable": {
            "properties": {
                "columnNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "encryptedColumns": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the iApp.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppTableRow:IAppTableRow"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:sys/IAppTableRow:IAppTableRow": {
            "properties": {
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "f5bigip:sys/IAppVariable:IAppVariable": {
            "properties": {
                "encrypted": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the iApp.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "value": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        }
    },
    "provider": {
        "description": "The provider type for the bigip package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "address": {
                "type": "string",
                "description": "Domain name/IP of the BigIP\n"
            },
            "loginRef": {
                "type": "string",
                "description": "Login reference for token authentication (see BIG-IP REST docs for details)\n"
            },
            "password": {
                "type": "string",
                "description": "The user's password. Leave empty if using token_value\n"
            },
            "port": {
                "type": "string",
                "description": "Management Port to connect to Bigip\n"
            },
            "teemDisable": {
                "type": "boolean",
                "description": "If this flag set to true,sending telemetry data to TEEM will be disabled\n"
            },
            "tokenAuth": {
                "type": "boolean",
                "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
            },
            "tokenValue": {
                "type": "string",
                "description": "A token generated outside the provider, in place of password\n"
            },
            "username": {
                "type": "string",
                "description": "Username with API access to the BigIP\n"
            }
        },
        "inputProperties": {
            "address": {
                "type": "string",
                "description": "Domain name/IP of the BigIP\n"
            },
            "loginRef": {
                "type": "string",
                "description": "Login reference for token authentication (see BIG-IP REST docs for details)\n"
            },
            "password": {
                "type": "string",
                "description": "The user's password. Leave empty if using token_value\n"
            },
            "port": {
                "type": "string",
                "description": "Management Port to connect to Bigip\n"
            },
            "teemDisable": {
                "type": "boolean",
                "description": "If this flag set to true,sending telemetry data to TEEM will be disabled\n"
            },
            "tokenAuth": {
                "type": "boolean",
                "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
            },
            "tokenValue": {
                "type": "string",
                "description": "A token generated outside the provider, in place of password\n"
            },
            "username": {
                "type": "string",
                "description": "Username with API access to the BigIP\n"
            }
        }
    },
    "resources": {
        "f5bigip:cm/device:Device": {
            "description": "`f5bigip.cm.Device` provides details about a specific bigip\n\nThis resource is helpful when configuring the BIG-IP device in cluster or in HA mode.\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst myNewDevice = new f5bigip.cm.Device(\"my_new_device\", {\n    configsyncIp: \"2.2.2.2\",\n    mirrorIp: \"10.10.10.10\",\n    mirrorSecondaryIp: \"11.11.11.11\",\n    name: \"bigip300.f5.com\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmy_new_device = f5bigip.cm.Device(\"myNewDevice\",\n    configsync_ip=\"2.2.2.2\",\n    mirror_ip=\"10.10.10.10\",\n    mirror_secondary_ip=\"11.11.11.11\",\n    name=\"bigip300.f5.com\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myNewDevice = new F5BigIP.CM.Device(\"myNewDevice\", new F5BigIP.CM.DeviceArgs\n        {\n            ConfigsyncIp = \"2.2.2.2\",\n            MirrorIp = \"10.10.10.10\",\n            MirrorSecondaryIp = \"11.11.11.11\",\n            Name = \"bigip300.f5.com\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/cm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cm.NewDevice(ctx, \"myNewDevice\", \u0026cm.DeviceArgs{\n\t\t\tConfigsyncIp:      pulumi.String(\"2.2.2.2\"),\n\t\t\tMirrorIp:          pulumi.String(\"10.10.10.10\"),\n\t\t\tMirrorSecondaryIp: pulumi.String(\"11.11.11.11\"),\n\t\t\tName:              pulumi.String(\"bigip300.f5.com\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "configsyncIp": {
                    "type": "string",
                    "description": "IP address used for config sync\n"
                },
                "mirrorIp": {
                    "type": "string",
                    "description": "IP address used for state mirroring\n"
                },
                "mirrorSecondaryIp": {
                    "type": "string",
                    "description": "Secondary IP address used for state mirroring\n"
                },
                "name": {
                    "type": "string",
                    "description": "Address of the Device which needs to be Deviceensed\n"
                }
            },
            "required": [
                "configsyncIp",
                "name"
            ],
            "inputProperties": {
                "configsyncIp": {
                    "type": "string",
                    "description": "IP address used for config sync\n"
                },
                "mirrorIp": {
                    "type": "string",
                    "description": "IP address used for state mirroring\n"
                },
                "mirrorSecondaryIp": {
                    "type": "string",
                    "description": "Secondary IP address used for state mirroring\n"
                },
                "name": {
                    "type": "string",
                    "description": "Address of the Device which needs to be Deviceensed\n"
                }
            },
            "requiredInputs": [
                "configsyncIp",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Device resources.\n",
                "properties": {
                    "configsyncIp": {
                        "type": "string",
                        "description": "IP address used for config sync\n"
                    },
                    "mirrorIp": {
                        "type": "string",
                        "description": "IP address used for state mirroring\n"
                    },
                    "mirrorSecondaryIp": {
                        "type": "string",
                        "description": "Secondary IP address used for state mirroring\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Address of the Device which needs to be Deviceensed\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:cm/deviceGroup:DeviceGroup": {
            "description": "`f5bigip.cm.DeviceGroup` A device group is a collection of BIG-IP devices that are configured to securely synchronize their BIG-IP configuration data, and fail over when needed.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst myNewDevicegroup = new f5bigip.cm.DeviceGroup(\"my_new_devicegroup\", {\n    autoSync: \"enabled\",\n    devices: [\n        {\n            name: \"bigip1.cisco.com\",\n        },\n        {\n            name: \"bigip200.f5.com\",\n        },\n    ],\n    fullLoadOnSync: \"true\",\n    name: \"sanjose_devicegroup\",\n    type: \"sync-only\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmy_new_devicegroup = f5bigip.cm.DeviceGroup(\"myNewDevicegroup\",\n    auto_sync=\"enabled\",\n    devices=[\n        f5bigip.cm.DeviceGroupDeviceArgs(\n            name=\"bigip1.cisco.com\",\n        ),\n        f5bigip.cm.DeviceGroupDeviceArgs(\n            name=\"bigip200.f5.com\",\n        ),\n    ],\n    full_load_on_sync=\"true\",\n    name=\"sanjose_devicegroup\",\n    type=\"sync-only\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var myNewDevicegroup = new F5BigIP.CM.DeviceGroup(\"myNewDevicegroup\", new F5BigIP.CM.DeviceGroupArgs\n        {\n            AutoSync = \"enabled\",\n            Devices = \n            {\n                new F5BigIP.CM.Inputs.DeviceGroupDeviceArgs\n                {\n                    Name = \"bigip1.cisco.com\",\n                },\n                new F5BigIP.CM.Inputs.DeviceGroupDeviceArgs\n                {\n                    Name = \"bigip200.f5.com\",\n                },\n            },\n            FullLoadOnSync = \"true\",\n            Name = \"sanjose_devicegroup\",\n            Type = \"sync-only\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/cm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := cm.NewDeviceGroup(ctx, \"myNewDevicegroup\", \u0026cm.DeviceGroupArgs{\n\t\t\tAutoSync: pulumi.String(\"enabled\"),\n\t\t\tDevices: cm.DeviceGroupDeviceArray{\n\t\t\t\t\u0026cm.DeviceGroupDeviceArgs{\n\t\t\t\t\tName: pulumi.String(\"bigip1.cisco.com\"),\n\t\t\t\t},\n\t\t\t\t\u0026cm.DeviceGroupDeviceArgs{\n\t\t\t\t\tName: pulumi.String(\"bigip200.f5.com\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tFullLoadOnSync: pulumi.String(\"true\"),\n\t\t\tName:           pulumi.String(\"sanjose_devicegroup\"),\n\t\t\tType:           pulumi.String(\"sync-only\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "autoSync": {
                    "type": "string",
                    "description": "Specifies if the device-group will automatically sync configuration data to its members\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of Device group\n"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:cm/DeviceGroupDevice:DeviceGroupDevice"
                    },
                    "description": "Name of the device to be included in device group, this need to be configured before using devicegroup resource\n"
                },
                "fullLoadOnSync": {
                    "type": "string",
                    "description": "Specifies if the device-group will perform a full-load upon sync\n"
                },
                "incrementalConfig": {
                    "type": "integer",
                    "description": "Specifies the maximum size (in KB) to devote to incremental config sync cached transactions. The default is 1024 KB.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Is the name of the device Group\n"
                },
                "networkFailover": {
                    "type": "string",
                    "description": "Specifies if the device-group will use a network connection for failover\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Device administrative partition\n"
                },
                "saveOnAutoSync": {
                    "type": "string",
                    "description": "Specifies whether the configuration should be saved upon auto-sync.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies if the device-group will be used for failover or resource syncing\n"
                }
            },
            "inputProperties": {
                "autoSync": {
                    "type": "string",
                    "description": "Specifies if the device-group will automatically sync configuration data to its members\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of Device group\n"
                },
                "devices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:cm/DeviceGroupDevice:DeviceGroupDevice"
                    },
                    "description": "Name of the device to be included in device group, this need to be configured before using devicegroup resource\n"
                },
                "fullLoadOnSync": {
                    "type": "string",
                    "description": "Specifies if the device-group will perform a full-load upon sync\n"
                },
                "incrementalConfig": {
                    "type": "integer",
                    "description": "Specifies the maximum size (in KB) to devote to incremental config sync cached transactions. The default is 1024 KB.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Is the name of the device Group\n"
                },
                "networkFailover": {
                    "type": "string",
                    "description": "Specifies if the device-group will use a network connection for failover\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Device administrative partition\n"
                },
                "saveOnAutoSync": {
                    "type": "string",
                    "description": "Specifies whether the configuration should be saved upon auto-sync.\n"
                },
                "type": {
                    "type": "string",
                    "description": "Specifies if the device-group will be used for failover or resource syncing\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DeviceGroup resources.\n",
                "properties": {
                    "autoSync": {
                        "type": "string",
                        "description": "Specifies if the device-group will automatically sync configuration data to its members\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of Device group\n"
                    },
                    "devices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:cm/DeviceGroupDevice:DeviceGroupDevice"
                        },
                        "description": "Name of the device to be included in device group, this need to be configured before using devicegroup resource\n"
                    },
                    "fullLoadOnSync": {
                        "type": "string",
                        "description": "Specifies if the device-group will perform a full-load upon sync\n"
                    },
                    "incrementalConfig": {
                        "type": "integer",
                        "description": "Specifies the maximum size (in KB) to devote to incremental config sync cached transactions. The default is 1024 KB.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Is the name of the device Group\n"
                    },
                    "networkFailover": {
                        "type": "string",
                        "description": "Specifies if the device-group will use a network connection for failover\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Device administrative partition\n"
                    },
                    "saveOnAutoSync": {
                        "type": "string",
                        "description": "Specifies whether the configuration should be saved upon auto-sync.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "Specifies if the device-group will be used for failover or resource syncing\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/as3:As3": {
            "description": "`f5bigip.As3` provides details about bigip as3 resource\n\nThis resource is helpful to configure as3 declarative JSON on BIG-IP.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * from \"fs\";\n\n// Example Usage for json file\nconst as3_example1As3 = new f5bigip.As3(\"as3-example1As3\", {as3Json: fs.readFileSync(\"example1.json\")});\n// Example Usage for json file with tenant filter\nconst as3_example1Index_as3As3 = new f5bigip.As3(\"as3-example1Index/as3As3\", {\n    as3Json: fs.readFileSync(\"example2.json\"),\n    tenantFilter: \"Sample_03\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\n# Example Usage for json file\nas3_example1_as3 = f5bigip.As3(\"as3-example1As3\", as3_json=(lambda path: open(path).read())(\"example1.json\"))\n# Example Usage for json file with tenant filter\nas3_example1_index_as3_as3 = f5bigip.As3(\"as3-example1Index/as3As3\",\n    as3_json=(lambda path: open(path).read())(\"example2.json\"),\n    tenant_filter=\"Sample_03\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Example Usage for json file\n        var as3_example1As3 = new F5BigIP.As3(\"as3-example1As3\", new F5BigIP.As3Args\n        {\n            As3Json = File.ReadAllText(\"example1.json\"),\n        });\n        // Example Usage for json file with tenant filter\n        var as3_example1Index_as3As3 = new F5BigIP.As3(\"as3-example1Index/as3As3\", new F5BigIP.As3Args\n        {\n            As3Json = File.ReadAllText(\"example2.json\"),\n            TenantFilter = \"Sample_03\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewAs3(ctx, \"as3_example1As3\", \u0026f5bigip.As3Args{\n\t\t\tAs3Json: readFileOrPanic(\"example1.json\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = f5bigip.NewAs3(ctx, \"as3_example1Index_as3As3\", \u0026f5bigip.As3Args{\n\t\t\tAs3Json:      readFileOrPanic(\"example2.json\"),\n\t\t\tTenantFilter: pulumi.String(\"Sample_03\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nAs3 resources can be imported using the partition name, e.g., ( use comma separated partition names if there are multiple partitions in as3 deployments )\n\n```sh\n $ pulumi import f5bigip:index/as3:As3 bigip_as3.test Sample_http_01\n```\n\n\n\n```sh\n $ pulumi import f5bigip:index/as3:As3 bigip_as3.test Sample_http_01,Sample_non_http_01\n```\n\n #### Import examples ( single and multiple partitions )\n\n```sh\n $ pulumi import f5bigip:index/as3:As3 test Sample_http_01\n```\n\n bigip_as3.testImporting from ID \"Sample_http_01\"... bigip_as3.testImport prepared!\n\n Prepared bigip_as3 for import bigip_as3.testRefreshing state... [id=Sample_http_01] Import successful! The resources that were imported are shown above. These resources are now in your Terraform state and will henceforth be managed by Terraform. $ terraform show # bigip_as3.testresource \"bigip_as3\" \"test\" {\n\n\n\n as3_json\n\n\n\n\n\n= jsonencode(\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n action\n\n\n\n\n\n= \"deploy\"\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n = \"AS3\"\n\n\n\n\n\n\n\n\n\n\n\n declaration = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Sample_http_01 = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n A1\n\n\n\n= {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n= \"Application\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n jsessionid = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n\n\n = \"Persist\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n cookieMethod\n\n\n\n\n\n= \"hash\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n cookieName\n\n\n\n\n\n\n\n= \"JSESSIONID\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n persistenceMethod = \"cookie\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n service\n\n\n\n= {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n\n\n\n\n= \"Service_HTTP\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n persistenceMethods = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n use = \"jsessionid\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n pool\n\n\n\n\n\n\n\n\n\n\n\n\n\n = \"web_pool\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n virtualAddresses\n\n = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"10.0.2.10\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n web_pool\n\n = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n= \"Pool\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n members\n\n= [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n serverAddresses = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"192.0.2.10\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"192.0.2.11\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n servicePort\n\n\n\n = 80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n monitors = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"http\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class = \"Tenant\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n= \"ADC\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n = \"UDP_DNS_Sample\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n label\n\n\n\n\n\n\n\n\n\n= \"UDP_DNS_Sample\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n remark\n\n\n\n\n\n\n\n = \"Sample of a UDP DNS Load Balancer Service\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n schemaVersion\n\n= \"3.0.0\"\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n persist\n\n\n\n = true\n\n\n\n\n\n\n\n }\n\n\n\n )\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n= \"Sample_http_01\"\n\n\n\n tenant_filter = \"Sample_http_01\"\n\n\n\n tenant_list\n\n = \"Sample_http_01\" }\n\n```sh\n $ pulumi import f5bigip:index/as3:As3 test Sample_http_01,Sample_non_http_01\n```\n\n bigip_as3.testImporting from ID \"Sample_http_01,Sample_non_http_01\"... bigip_as3.testImport prepared!\n\n Prepared bigip_as3 for import bigip_as3.testRefreshing state... [id=Sample_http_01,Sample_non_http_01] Import successful! The resources that were imported are shown above. These resources are now in your Terraform state and will henceforth be managed by Terraform. $ terraform show # bigip_as3.testresource \"bigip_as3\" \"test\" {\n\n\n\n as3_json\n\n\n\n\n\n= jsonencode(\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n action\n\n\n\n\n\n= \"deploy\"\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n = \"AS3\"\n\n\n\n\n\n\n\n\n\n\n\n declaration = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Sample_http_01\n\n\n\n = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n A1\n\n\n\n= {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n= \"Application\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n jsessionid = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n\n\n = \"Persist\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n cookieMethod\n\n\n\n\n\n= \"hash\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n cookieName\n\n\n\n\n\n\n\n= \"JSESSIONID\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n persistenceMethod = \"cookie\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n service\n\n\n\n= {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n\n\n\n\n= \"Service_HTTP\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n persistenceMethods = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n use = \"jsessionid\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n pool\n\n\n\n\n\n\n\n\n\n\n\n\n\n = \"web_pool\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n virtualAddresses\n\n = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"10.0.2.10\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n web_pool\n\n = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n= \"Pool\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n members\n\n= [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n serverAddresses = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"192.0.2.10\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"192.0.2.11\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n servicePort\n\n\n\n = 80\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n monitors = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"http\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class = \"Tenant\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Sample_non_http_01 = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n DNS_Service = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n Pool1\n\n = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n= \"Pool\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n members\n\n= [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n serverAddresses = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"10.1.10.100\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n servicePort\n\n\n\n = 53\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n serverAddresses = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"10.1.10.101\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n servicePort\n\n\n\n = 53\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n },\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n monitors = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"icmp\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n = \"Application\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n service = {\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n\n\n= \"Service_UDP\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n pool\n\n\n\n\n\n\n\n\n\n\n\n = \"Pool1\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n virtualAddresses = [\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n \"10.1.20.121\",\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n ]\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n virtualPort\n\n\n\n\n\n= 53\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n = \"Tenant\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n class\n\n\n\n\n\n\n\n\n\n\n\n\n\n= \"ADC\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n = \"UDP_DNS_Sample\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n label\n\n\n\n\n\n\n\n\n\n\n\n\n\n= \"UDP_DNS_Sample\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n remark\n\n\n\n\n\n\n\n\n\n\n\n = \"Sample of a UDP DNS Load Balancer Service\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n schemaVersion\n\n\n\n\n\n= \"3.0.0\"\n\n\n\n\n\n\n\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n persist\n\n\n\n = true\n\n\n\n\n\n\n\n }\n\n\n\n )\n\n\n\n id\n\n\n\n\n\n\n\n\n\n\n\n= \"Sample_http_01,Sample_non_http_01\"\n\n\n\n tenant_filter = \"Sample_http_01,Sample_non_http_01\"\n\n\n\n tenant_list\n\n = \"Sample_http_01,Sample_non_http_01\" } * `AS3 documentation` - https://clouddocs.f5.com/products/extensions/f5-appsvcs-extension/latest/userguide/composing-a-declaration.html ",
            "properties": {
                "applicationList": {
                    "type": "string",
                    "description": "Name of Application\n"
                },
                "as3Json": {
                    "type": "string",
                    "description": "Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function\n"
                },
                "ignoreMetadata": {
                    "type": "boolean",
                    "description": "Set True if you want to ignore metadata changes during update. By default it is set to false\n"
                },
                "tenantFilter": {
                    "type": "string",
                    "description": "If there are multiple tenants on a BIG-IP, this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified.\n"
                },
                "tenantList": {
                    "type": "string",
                    "description": "Name of Tenant\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Name of Tenant\n",
                    "deprecationMessage": "this attribute is no longer in use"
                }
            },
            "required": [
                "applicationList",
                "as3Json",
                "tenantList"
            ],
            "inputProperties": {
                "applicationList": {
                    "type": "string",
                    "description": "Name of Application\n"
                },
                "as3Json": {
                    "type": "string",
                    "description": "Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function\n"
                },
                "ignoreMetadata": {
                    "type": "boolean",
                    "description": "Set True if you want to ignore metadata changes during update. By default it is set to false\n"
                },
                "tenantFilter": {
                    "type": "string",
                    "description": "If there are multiple tenants on a BIG-IP, this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified.\n"
                },
                "tenantList": {
                    "type": "string",
                    "description": "Name of Tenant\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "Name of Tenant\n",
                    "deprecationMessage": "this attribute is no longer in use"
                }
            },
            "requiredInputs": [
                "as3Json"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering As3 resources.\n",
                "properties": {
                    "applicationList": {
                        "type": "string",
                        "description": "Name of Application\n"
                    },
                    "as3Json": {
                        "type": "string",
                        "description": "Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function\n"
                    },
                    "ignoreMetadata": {
                        "type": "boolean",
                        "description": "Set True if you want to ignore metadata changes during update. By default it is set to false\n"
                    },
                    "tenantFilter": {
                        "type": "string",
                        "description": "If there are multiple tenants on a BIG-IP, this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified.\n"
                    },
                    "tenantList": {
                        "type": "string",
                        "description": "Name of Tenant\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "Name of Tenant\n",
                        "deprecationMessage": "this attribute is no longer in use"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/bigIqAs3:BigIqAs3": {
            "description": "`f5bigip.BigIqAs3` provides details about bigiq as3 resource\n\nThis resource is helpful to configure as3 declarative JSON on BIG-IP through BIG-IQ.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * as fs from \"fs\";\n\n// Example Usage for json file\nconst exampletask = new f5bigip.BigIqAs3(\"exampletask\", {\n    as3Json: fs.readFileSync(\"bigiq_example.json\", \"utf-8\"),\n    bigiqAddress: \"xx.xx.xxx.xx\",\n    bigiqPassword: \"xxxxxxxxx\",\n    bigiqUser: \"xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\n# Example Usage for json file\nexampletask = f5bigip.BigIqAs3(\"exampletask\",\n    as3_json=(lambda path: open(path).read())(\"bigiq_example.json\"),\n    bigiq_address=\"xx.xx.xxx.xx\",\n    bigiq_password=\"xxxxxxxxx\",\n    bigiq_user=\"xxxxx\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // Example Usage for json file\n        var exampletask = new F5BigIP.BigIqAs3(\"exampletask\", new F5BigIP.BigIqAs3Args\n        {\n            As3Json = File.ReadAllText(\"bigiq_example.json\"),\n            BigiqAddress = \"xx.xx.xxx.xx\",\n            BigiqPassword = \"xxxxxxxxx\",\n            BigiqUser = \"xxxxx\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewBigIqAs3(ctx, \"exampletask\", \u0026f5bigip.BigIqAs3Args{\n\t\t\tAs3Json:       readFileOrPanic(\"bigiq_example.json\"),\n\t\t\tBigiqAddress:  pulumi.String(\"xx.xx.xxx.xx\"),\n\t\t\tBigiqPassword: pulumi.String(\"xxxxxxxxx\"),\n\t\t\tBigiqUser:     pulumi.String(\"xxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "as3Json": {
                    "type": "string",
                    "description": "Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function\n"
                },
                "bigiqAddress": {
                    "type": "string",
                    "description": "Address of the BIG-IQ to which your targer BIG-IP is attached\n"
                },
                "bigiqLoginRef": {
                    "type": "string",
                    "description": "Login reference for token authentication (see BIG-IQ REST docs for details)\n"
                },
                "bigiqPassword": {
                    "type": "string",
                    "description": "Password of the BIG-IQ to which your targer BIG-IP is attached\n"
                },
                "bigiqPort": {
                    "type": "string",
                    "description": "The registration key pool to use\n"
                },
                "bigiqTokenAuth": {
                    "type": "boolean",
                    "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
                },
                "bigiqUser": {
                    "type": "string",
                    "description": "User name  of the BIG-IQ to which your targer BIG-IP is attached\n"
                },
                "ignoreMetadata": {
                    "type": "boolean",
                    "description": "Set True if you want to ignore metadata changes during update. By default it is set to `true`\n"
                },
                "tenantList": {
                    "type": "string",
                    "description": "Name of Tenant\n"
                }
            },
            "required": [
                "as3Json",
                "bigiqAddress",
                "bigiqPassword",
                "bigiqUser",
                "tenantList"
            ],
            "inputProperties": {
                "as3Json": {
                    "type": "string",
                    "description": "Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function\n"
                },
                "bigiqAddress": {
                    "type": "string",
                    "description": "Address of the BIG-IQ to which your targer BIG-IP is attached\n"
                },
                "bigiqLoginRef": {
                    "type": "string",
                    "description": "Login reference for token authentication (see BIG-IQ REST docs for details)\n"
                },
                "bigiqPassword": {
                    "type": "string",
                    "description": "Password of the BIG-IQ to which your targer BIG-IP is attached\n"
                },
                "bigiqPort": {
                    "type": "string",
                    "description": "The registration key pool to use\n"
                },
                "bigiqTokenAuth": {
                    "type": "boolean",
                    "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
                },
                "bigiqUser": {
                    "type": "string",
                    "description": "User name  of the BIG-IQ to which your targer BIG-IP is attached\n"
                },
                "ignoreMetadata": {
                    "type": "boolean",
                    "description": "Set True if you want to ignore metadata changes during update. By default it is set to `true`\n"
                },
                "tenantList": {
                    "type": "string",
                    "description": "Name of Tenant\n"
                }
            },
            "requiredInputs": [
                "as3Json",
                "bigiqAddress",
                "bigiqPassword",
                "bigiqUser"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BigIqAs3 resources.\n",
                "properties": {
                    "as3Json": {
                        "type": "string",
                        "description": "Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function\n"
                    },
                    "bigiqAddress": {
                        "type": "string",
                        "description": "Address of the BIG-IQ to which your targer BIG-IP is attached\n"
                    },
                    "bigiqLoginRef": {
                        "type": "string",
                        "description": "Login reference for token authentication (see BIG-IQ REST docs for details)\n"
                    },
                    "bigiqPassword": {
                        "type": "string",
                        "description": "Password of the BIG-IQ to which your targer BIG-IP is attached\n"
                    },
                    "bigiqPort": {
                        "type": "string",
                        "description": "The registration key pool to use\n"
                    },
                    "bigiqTokenAuth": {
                        "type": "boolean",
                        "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
                    },
                    "bigiqUser": {
                        "type": "string",
                        "description": "User name  of the BIG-IQ to which your targer BIG-IP is attached\n"
                    },
                    "ignoreMetadata": {
                        "type": "boolean",
                        "description": "Set True if you want to ignore metadata changes during update. By default it is set to `true`\n"
                    },
                    "tenantList": {
                        "type": "string",
                        "description": "Name of Tenant\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/command:Command": {
            "description": "`f5bigip.Command` Run TMSH commands on F5 devices\n\nThis resource is helpful to send TMSH command to an BIG-IP node and returns the results read from the device\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\n//create ltm node\nconst test_command = new f5bigip.Command(\"test-command\", {\n    commands: [\"delete ltm node 10.10.10.70\"],\n    when: \"destroy\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\n#create ltm node\ntest_command = f5bigip.Command(\"test-command\",\n    commands=[\"delete ltm node 10.10.10.70\"],\n    when=\"destroy\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        //create ltm node\n        var test_command = new F5BigIP.Command(\"test-command\", new F5BigIP.CommandArgs\n        {\n            Commands = \n            {\n                \"delete ltm node 10.10.10.70\",\n            },\n            When = \"destroy\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewCommand(ctx, \"test_command\", \u0026f5bigip.CommandArgs{\n\t\t\tCommands: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"delete ltm node 10.10.10.70\"),\n\t\t\t},\n\t\t\tWhen: pulumi.String(\"destroy\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "commandResults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The resulting output from the `commands` executed\n"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The commands to send to the remote BIG-IP device over the configured provider. The resulting output from the command is returned and added to `command_result`\n"
                },
                "when": {
                    "type": "string"
                }
            },
            "required": [
                "commandResults",
                "commands"
            ],
            "inputProperties": {
                "commandResults": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The resulting output from the `commands` executed\n"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The commands to send to the remote BIG-IP device over the configured provider. The resulting output from the command is returned and added to `command_result`\n"
                },
                "when": {
                    "type": "string"
                }
            },
            "requiredInputs": [
                "commands"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Command resources.\n",
                "properties": {
                    "commandResults": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The resulting output from the `commands` executed\n"
                    },
                    "commands": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The commands to send to the remote BIG-IP device over the configured provider. The resulting output from the command is returned and added to `command_result`\n"
                    },
                    "when": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/commonLicenseManageBigIq:CommonLicenseManageBigIq": {
            "description": "`f5bigip.CommonLicenseManageBigIq` This Resource is used for BIGIP/Provider License Management from BIGIQ\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\n// MANAGED Regkey Pool\nconst testExampleCommonLicenseManageBigIq = new f5bigip.CommonLicenseManageBigIq(\"testExampleCommonLicenseManageBigIq\", {\n    bigiqAddress: _var.bigiq,\n    bigiqUser: _var.bigiq_un,\n    bigiqPassword: _var.bigiq_pw,\n    licensePoolname: \"regkeypool_name\",\n    assignmentType: \"MANAGED\",\n});\n// UNMANAGED Regkey Pool\nconst testExampleIndex_commonLicenseManageBigIqCommonLicenseManageBigIq = new f5bigip.CommonLicenseManageBigIq(\"testExampleIndex/commonLicenseManageBigIqCommonLicenseManageBigIq\", {\n    bigiqAddress: _var.bigiq,\n    bigiqUser: _var.bigiq_un,\n    bigiqPassword: _var.bigiq_pw,\n    licensePoolname: \"regkeypool_name\",\n    assignmentType: \"UNMANAGED\",\n});\n// UNMANAGED Utility Pool\nconst testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq = new f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq\", {\n    bigiqAddress: _var.bigiq,\n    bigiqUser: _var.bigiq_un,\n    bigiqPassword: _var.bigiq_pw,\n    licensePoolname: \"utilitypool_name\",\n    assignmentType: \"UNMANAGED\",\n    unitOfMeasure: \"yearly\",\n    skukeyword1: \"BTHSM200M\",\n});\n// UNREACHABLE Regkey Pool\nconst testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq1 = new f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq1\", {\n    bigiqAddress: \"xxx.xxx.xxx.xxx\",\n    bigiqUser: \"xxxx\",\n    bigiqPassword: \"xxxxx\",\n    licensePoolname: \"regkey_pool_name\",\n    assignmentType: \"UNREACHABLE\",\n    macAddress: \"FA:16:3E:1B:6D:32\",\n    hypervisor: \"azure\",\n});\n// MANAGED Purchased Pool\nconst testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq2 = new f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq2\", {\n    bigiqAddress: _var.bigiq,\n    bigiqUser: _var.bigiq_un,\n    bigiqPassword: _var.bigiq_pw,\n    licensePoolname: \"purchased_pool_name\",\n    assignmentType: \"MANAGED\",\n});\n// UNMANAGED Purchased Pool\nconst testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq3 = new f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq3\", {\n    bigiqAddress: _var.bigiq,\n    bigiqUser: _var.bigiq_un,\n    bigiqPassword: _var.bigiq_pw,\n    licensePoolname: \"purchased_pool_name\",\n    assignmentType: \"UNMANAGED\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\n# MANAGED Regkey Pool\ntest_example_common_license_manage_big_iq = f5bigip.CommonLicenseManageBigIq(\"testExampleCommonLicenseManageBigIq\",\n    bigiq_address=var[\"bigiq\"],\n    bigiq_user=var[\"bigiq_un\"],\n    bigiq_password=var[\"bigiq_pw\"],\n    license_poolname=\"regkeypool_name\",\n    assignment_type=\"MANAGED\")\n# UNMANAGED Regkey Pool\ntest_example_index_common_license_manage_big_iq_common_license_manage_big_iq = f5bigip.CommonLicenseManageBigIq(\"testExampleIndex/commonLicenseManageBigIqCommonLicenseManageBigIq\",\n    bigiq_address=var[\"bigiq\"],\n    bigiq_user=var[\"bigiq_un\"],\n    bigiq_password=var[\"bigiq_pw\"],\n    license_poolname=\"regkeypool_name\",\n    assignment_type=\"UNMANAGED\")\n# UNMANAGED Utility Pool\ntest_example_f5bigip_index_common_license_manage_big_iq_common_license_manage_big_iq = f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq\",\n    bigiq_address=var[\"bigiq\"],\n    bigiq_user=var[\"bigiq_un\"],\n    bigiq_password=var[\"bigiq_pw\"],\n    license_poolname=\"utilitypool_name\",\n    assignment_type=\"UNMANAGED\",\n    unit_of_measure=\"yearly\",\n    skukeyword1=\"BTHSM200M\")\n# UNREACHABLE Regkey Pool\ntest_example_f5bigip_index_common_license_manage_big_iq_common_license_manage_big_iq1 = f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq1\",\n    bigiq_address=\"xxx.xxx.xxx.xxx\",\n    bigiq_user=\"xxxx\",\n    bigiq_password=\"xxxxx\",\n    license_poolname=\"regkey_pool_name\",\n    assignment_type=\"UNREACHABLE\",\n    mac_address=\"FA:16:3E:1B:6D:32\",\n    hypervisor=\"azure\")\n# MANAGED Purchased Pool\ntest_example_f5bigip_index_common_license_manage_big_iq_common_license_manage_big_iq2 = f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq2\",\n    bigiq_address=var[\"bigiq\"],\n    bigiq_user=var[\"bigiq_un\"],\n    bigiq_password=var[\"bigiq_pw\"],\n    license_poolname=\"purchased_pool_name\",\n    assignment_type=\"MANAGED\")\n# UNMANAGED Purchased Pool\ntest_example_f5bigip_index_common_license_manage_big_iq_common_license_manage_big_iq3 = f5bigip.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq3\",\n    bigiq_address=var[\"bigiq\"],\n    bigiq_user=var[\"bigiq_un\"],\n    bigiq_password=var[\"bigiq_pw\"],\n    license_poolname=\"purchased_pool_name\",\n    assignment_type=\"UNMANAGED\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        // MANAGED Regkey Pool\n        var testExampleCommonLicenseManageBigIq = new F5BigIP.CommonLicenseManageBigIq(\"testExampleCommonLicenseManageBigIq\", new F5BigIP.CommonLicenseManageBigIqArgs\n        {\n            BigiqAddress = @var.Bigiq,\n            BigiqUser = @var.Bigiq_un,\n            BigiqPassword = @var.Bigiq_pw,\n            LicensePoolname = \"regkeypool_name\",\n            AssignmentType = \"MANAGED\",\n        });\n        // UNMANAGED Regkey Pool\n        var testExampleIndex_commonLicenseManageBigIqCommonLicenseManageBigIq = new F5BigIP.CommonLicenseManageBigIq(\"testExampleIndex/commonLicenseManageBigIqCommonLicenseManageBigIq\", new F5BigIP.CommonLicenseManageBigIqArgs\n        {\n            BigiqAddress = @var.Bigiq,\n            BigiqUser = @var.Bigiq_un,\n            BigiqPassword = @var.Bigiq_pw,\n            LicensePoolname = \"regkeypool_name\",\n            AssignmentType = \"UNMANAGED\",\n        });\n        // UNMANAGED Utility Pool\n        var testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq = new F5BigIP.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq\", new F5BigIP.CommonLicenseManageBigIqArgs\n        {\n            BigiqAddress = @var.Bigiq,\n            BigiqUser = @var.Bigiq_un,\n            BigiqPassword = @var.Bigiq_pw,\n            LicensePoolname = \"utilitypool_name\",\n            AssignmentType = \"UNMANAGED\",\n            UnitOfMeasure = \"yearly\",\n            Skukeyword1 = \"BTHSM200M\",\n        });\n        // UNREACHABLE Regkey Pool\n        var testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq1 = new F5BigIP.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq1\", new F5BigIP.CommonLicenseManageBigIqArgs\n        {\n            BigiqAddress = \"xxx.xxx.xxx.xxx\",\n            BigiqUser = \"xxxx\",\n            BigiqPassword = \"xxxxx\",\n            LicensePoolname = \"regkey_pool_name\",\n            AssignmentType = \"UNREACHABLE\",\n            MacAddress = \"FA:16:3E:1B:6D:32\",\n            Hypervisor = \"azure\",\n        });\n        // MANAGED Purchased Pool\n        var testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq2 = new F5BigIP.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq2\", new F5BigIP.CommonLicenseManageBigIqArgs\n        {\n            BigiqAddress = @var.Bigiq,\n            BigiqUser = @var.Bigiq_un,\n            BigiqPassword = @var.Bigiq_pw,\n            LicensePoolname = \"purchased_pool_name\",\n            AssignmentType = \"MANAGED\",\n        });\n        // UNMANAGED Purchased Pool\n        var testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq3 = new F5BigIP.CommonLicenseManageBigIq(\"testExampleF5bigipIndex/commonLicenseManageBigIqCommonLicenseManageBigIq3\", new F5BigIP.CommonLicenseManageBigIqArgs\n        {\n            BigiqAddress = @var.Bigiq,\n            BigiqUser = @var.Bigiq_un,\n            BigiqPassword = @var.Bigiq_pw,\n            LicensePoolname = \"purchased_pool_name\",\n            AssignmentType = \"UNMANAGED\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewCommonLicenseManageBigIq(ctx, \"testExampleCommonLicenseManageBigIq\", \u0026f5bigip.CommonLicenseManageBigIqArgs{\n\t\t\tBigiqAddress:    pulumi.Any(_var.Bigiq),\n\t\t\tBigiqUser:       pulumi.Any(_var.Bigiq_un),\n\t\t\tBigiqPassword:   pulumi.Any(_var.Bigiq_pw),\n\t\t\tLicensePoolname: pulumi.String(\"regkeypool_name\"),\n\t\t\tAssignmentType:  pulumi.String(\"MANAGED\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = f5bigip.NewCommonLicenseManageBigIq(ctx, \"testExampleIndex_commonLicenseManageBigIqCommonLicenseManageBigIq\", \u0026f5bigip.CommonLicenseManageBigIqArgs{\n\t\t\tBigiqAddress:    pulumi.Any(_var.Bigiq),\n\t\t\tBigiqUser:       pulumi.Any(_var.Bigiq_un),\n\t\t\tBigiqPassword:   pulumi.Any(_var.Bigiq_pw),\n\t\t\tLicensePoolname: pulumi.String(\"regkeypool_name\"),\n\t\t\tAssignmentType:  pulumi.String(\"UNMANAGED\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = f5bigip.NewCommonLicenseManageBigIq(ctx, \"testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq\", \u0026f5bigip.CommonLicenseManageBigIqArgs{\n\t\t\tBigiqAddress:    pulumi.Any(_var.Bigiq),\n\t\t\tBigiqUser:       pulumi.Any(_var.Bigiq_un),\n\t\t\tBigiqPassword:   pulumi.Any(_var.Bigiq_pw),\n\t\t\tLicensePoolname: pulumi.String(\"utilitypool_name\"),\n\t\t\tAssignmentType:  pulumi.String(\"UNMANAGED\"),\n\t\t\tUnitOfMeasure:   pulumi.String(\"yearly\"),\n\t\t\tSkukeyword1:     pulumi.String(\"BTHSM200M\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = f5bigip.NewCommonLicenseManageBigIq(ctx, \"testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq1\", \u0026f5bigip.CommonLicenseManageBigIqArgs{\n\t\t\tBigiqAddress:    pulumi.String(\"xxx.xxx.xxx.xxx\"),\n\t\t\tBigiqUser:       pulumi.String(\"xxxx\"),\n\t\t\tBigiqPassword:   pulumi.String(\"xxxxx\"),\n\t\t\tLicensePoolname: pulumi.String(\"regkey_pool_name\"),\n\t\t\tAssignmentType:  pulumi.String(\"UNREACHABLE\"),\n\t\t\tMacAddress:      pulumi.String(\"FA:16:3E:1B:6D:32\"),\n\t\t\tHypervisor:      pulumi.String(\"azure\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = f5bigip.NewCommonLicenseManageBigIq(ctx, \"testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq2\", \u0026f5bigip.CommonLicenseManageBigIqArgs{\n\t\t\tBigiqAddress:    pulumi.Any(_var.Bigiq),\n\t\t\tBigiqUser:       pulumi.Any(_var.Bigiq_un),\n\t\t\tBigiqPassword:   pulumi.Any(_var.Bigiq_pw),\n\t\t\tLicensePoolname: pulumi.String(\"purchased_pool_name\"),\n\t\t\tAssignmentType:  pulumi.String(\"MANAGED\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = f5bigip.NewCommonLicenseManageBigIq(ctx, \"testExampleF5bigipIndex_commonLicenseManageBigIqCommonLicenseManageBigIq3\", \u0026f5bigip.CommonLicenseManageBigIqArgs{\n\t\t\tBigiqAddress:    pulumi.Any(_var.Bigiq),\n\t\t\tBigiqUser:       pulumi.Any(_var.Bigiq_un),\n\t\t\tBigiqPassword:   pulumi.Any(_var.Bigiq_pw),\n\t\t\tLicensePoolname: pulumi.String(\"purchased_pool_name\"),\n\t\t\tAssignmentType:  pulumi.String(\"UNMANAGED\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "assignmentType": {
                    "type": "string",
                    "description": "The type of assignment, which is determined by whether the BIG-IP is unreachable, unmanaged, or managed by BIG-IQ. Possible values: “UNREACHABLE”, “UNMANAGED”, or “MANAGED”.\n"
                },
                "bigiqAddress": {
                    "type": "string",
                    "description": "BIGIQ License Manager IP Address, variable type `string`\n"
                },
                "bigiqLoginRef": {
                    "type": "string",
                    "description": "BIGIQ Login reference for token authentication\n"
                },
                "bigiqPassword": {
                    "type": "string",
                    "description": "BIGIQ License Manager password.  variable type `string`\n"
                },
                "bigiqPort": {
                    "type": "string",
                    "description": "type `int`, BIGIQ License Manager Port number, specify if port is other than `443`\n"
                },
                "bigiqTokenAuth": {
                    "type": "boolean",
                    "description": "type `bool`, if set to `true` enables Token based Authentication,default is `false`\n"
                },
                "bigiqUser": {
                    "type": "string",
                    "description": "BIGIQ License Manager username, variable type `string`\n"
                },
                "deviceLicenseStatus": {
                    "type": "string",
                    "description": "Status of Licence Assignment\n"
                },
                "hypervisor": {
                    "type": "string",
                    "description": "Identifies the platform running the BIG-IP VE. Possible values: “aws”, “azure”, “gce”, “vmware”, “hyperv”, “kvm”, or “xen”. type `string`\n"
                },
                "key": {
                    "type": "string",
                    "description": "License Assignment is done with specified `key`, supported only with RegKeypool type License assignement. type `string`\n"
                },
                "licensePoolname": {
                    "type": "string",
                    "description": "A name given to the license pool. type `string`\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of the BIG-IP. type `string`\n"
                },
                "skukeyword1": {
                    "type": "string",
                    "description": "An optional offering name. type `string`\n"
                },
                "skukeyword2": {
                    "type": "string",
                    "description": "An optional offering name. type `string`\n"
                },
                "tenant": {
                    "type": "string",
                    "description": "For an unreachable BIG-IP, you can provide an optional description for the assignment in this field.\n"
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "The units used to measure billing. For example, “hourly” or “daily”. Type `string`\n"
                }
            },
            "required": [
                "assignmentType",
                "bigiqAddress",
                "bigiqPassword",
                "bigiqUser",
                "deviceLicenseStatus",
                "licensePoolname"
            ],
            "inputProperties": {
                "assignmentType": {
                    "type": "string",
                    "description": "The type of assignment, which is determined by whether the BIG-IP is unreachable, unmanaged, or managed by BIG-IQ. Possible values: “UNREACHABLE”, “UNMANAGED”, or “MANAGED”.\n"
                },
                "bigiqAddress": {
                    "type": "string",
                    "description": "BIGIQ License Manager IP Address, variable type `string`\n"
                },
                "bigiqLoginRef": {
                    "type": "string",
                    "description": "BIGIQ Login reference for token authentication\n"
                },
                "bigiqPassword": {
                    "type": "string",
                    "description": "BIGIQ License Manager password.  variable type `string`\n"
                },
                "bigiqPort": {
                    "type": "string",
                    "description": "type `int`, BIGIQ License Manager Port number, specify if port is other than `443`\n"
                },
                "bigiqTokenAuth": {
                    "type": "boolean",
                    "description": "type `bool`, if set to `true` enables Token based Authentication,default is `false`\n"
                },
                "bigiqUser": {
                    "type": "string",
                    "description": "BIGIQ License Manager username, variable type `string`\n"
                },
                "deviceLicenseStatus": {
                    "type": "string",
                    "description": "Status of Licence Assignment\n"
                },
                "hypervisor": {
                    "type": "string",
                    "description": "Identifies the platform running the BIG-IP VE. Possible values: “aws”, “azure”, “gce”, “vmware”, “hyperv”, “kvm”, or “xen”. type `string`\n"
                },
                "key": {
                    "type": "string",
                    "description": "License Assignment is done with specified `key`, supported only with RegKeypool type License assignement. type `string`\n"
                },
                "licensePoolname": {
                    "type": "string",
                    "description": "A name given to the license pool. type `string`\n"
                },
                "macAddress": {
                    "type": "string",
                    "description": "MAC address of the BIG-IP. type `string`\n"
                },
                "skukeyword1": {
                    "type": "string",
                    "description": "An optional offering name. type `string`\n"
                },
                "skukeyword2": {
                    "type": "string",
                    "description": "An optional offering name. type `string`\n"
                },
                "tenant": {
                    "type": "string",
                    "description": "For an unreachable BIG-IP, you can provide an optional description for the assignment in this field.\n"
                },
                "unitOfMeasure": {
                    "type": "string",
                    "description": "The units used to measure billing. For example, “hourly” or “daily”. Type `string`\n"
                }
            },
            "requiredInputs": [
                "assignmentType",
                "bigiqAddress",
                "bigiqPassword",
                "bigiqUser",
                "licensePoolname"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CommonLicenseManageBigIq resources.\n",
                "properties": {
                    "assignmentType": {
                        "type": "string",
                        "description": "The type of assignment, which is determined by whether the BIG-IP is unreachable, unmanaged, or managed by BIG-IQ. Possible values: “UNREACHABLE”, “UNMANAGED”, or “MANAGED”.\n"
                    },
                    "bigiqAddress": {
                        "type": "string",
                        "description": "BIGIQ License Manager IP Address, variable type `string`\n"
                    },
                    "bigiqLoginRef": {
                        "type": "string",
                        "description": "BIGIQ Login reference for token authentication\n"
                    },
                    "bigiqPassword": {
                        "type": "string",
                        "description": "BIGIQ License Manager password.  variable type `string`\n"
                    },
                    "bigiqPort": {
                        "type": "string",
                        "description": "type `int`, BIGIQ License Manager Port number, specify if port is other than `443`\n"
                    },
                    "bigiqTokenAuth": {
                        "type": "boolean",
                        "description": "type `bool`, if set to `true` enables Token based Authentication,default is `false`\n"
                    },
                    "bigiqUser": {
                        "type": "string",
                        "description": "BIGIQ License Manager username, variable type `string`\n"
                    },
                    "deviceLicenseStatus": {
                        "type": "string",
                        "description": "Status of Licence Assignment\n"
                    },
                    "hypervisor": {
                        "type": "string",
                        "description": "Identifies the platform running the BIG-IP VE. Possible values: “aws”, “azure”, “gce”, “vmware”, “hyperv”, “kvm”, or “xen”. type `string`\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "License Assignment is done with specified `key`, supported only with RegKeypool type License assignement. type `string`\n"
                    },
                    "licensePoolname": {
                        "type": "string",
                        "description": "A name given to the license pool. type `string`\n"
                    },
                    "macAddress": {
                        "type": "string",
                        "description": "MAC address of the BIG-IP. type `string`\n"
                    },
                    "skukeyword1": {
                        "type": "string",
                        "description": "An optional offering name. type `string`\n"
                    },
                    "skukeyword2": {
                        "type": "string",
                        "description": "An optional offering name. type `string`\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "For an unreachable BIG-IP, you can provide an optional description for the assignment in this field.\n"
                    },
                    "unitOfMeasure": {
                        "type": "string",
                        "description": "The units used to measure billing. For example, “hourly” or “daily”. Type `string`\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/do:Do": {
            "description": "`f5bigip.Do` provides details about bigip do resource\n\nThis resource is helpful to configure do declarative JSON on BIG-IP.\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * as fs from \"fs\";\n\nconst do_example = new f5bigip.Do(\"do-example\", {\n    doJson: fs.readFileSync(\"example.json\", \"utf-8\"),\n    timeout: 15,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ndo_example = f5bigip.Do(\"do-example\",\n    do_json=(lambda path: open(path).read())(\"example.json\"),\n    timeout=15)\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var do_example = new F5BigIP.Do(\"do-example\", new F5BigIP.DoArgs\n        {\n            DoJson = File.ReadAllText(\"example.json\"),\n            Timeout = 15,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewDo(ctx, \"do_example\", \u0026f5bigip.DoArgs{\n\t\t\tDoJson:  readFileOrPanic(\"example.json\"),\n\t\t\tTimeout: pulumi.Int(15),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "bigipAddress": {
                    "type": "string",
                    "description": "IP Address of BIGIP Host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "bigipPassword": {
                    "type": "string",
                    "description": "Password of  BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "bigipPort": {
                    "type": "string",
                    "description": "Port number of BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "bigipTokenAuth": {
                    "type": "boolean",
                    "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
                },
                "bigipUser": {
                    "type": "string",
                    "description": "UserName of BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "doJson": {
                    "type": "string",
                    "description": "Name of the of the Declarative DO JSON file\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "unique identifier for DO resource\n",
                    "deprecationMessage": "this attribute is no longer in use"
                },
                "timeout": {
                    "type": "integer",
                    "description": "DO json\n"
                }
            },
            "required": [
                "doJson"
            ],
            "inputProperties": {
                "bigipAddress": {
                    "type": "string",
                    "description": "IP Address of BIGIP Host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "bigipPassword": {
                    "type": "string",
                    "description": "Password of  BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "bigipPort": {
                    "type": "string",
                    "description": "Port number of BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "bigipTokenAuth": {
                    "type": "boolean",
                    "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
                },
                "bigipUser": {
                    "type": "string",
                    "description": "UserName of BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                },
                "doJson": {
                    "type": "string",
                    "description": "Name of the of the Declarative DO JSON file\n"
                },
                "tenantName": {
                    "type": "string",
                    "description": "unique identifier for DO resource\n",
                    "deprecationMessage": "this attribute is no longer in use"
                },
                "timeout": {
                    "type": "integer",
                    "description": "DO json\n"
                }
            },
            "requiredInputs": [
                "doJson"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Do resources.\n",
                "properties": {
                    "bigipAddress": {
                        "type": "string",
                        "description": "IP Address of BIGIP Host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                    },
                    "bigipPassword": {
                        "type": "string",
                        "description": "Password of  BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                    },
                    "bigipPort": {
                        "type": "string",
                        "description": "Port number of BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                    },
                    "bigipTokenAuth": {
                        "type": "boolean",
                        "description": "Enable to use an external authentication source (LDAP, TACACS, etc)\n"
                    },
                    "bigipUser": {
                        "type": "string",
                        "description": "UserName of BIGIP host to be used for this resource,this is optional parameter.\nwhenever we specify this parameter it gets overwrite provider configuration\n"
                    },
                    "doJson": {
                        "type": "string",
                        "description": "Name of the of the Declarative DO JSON file\n"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "unique identifier for DO resource\n",
                        "deprecationMessage": "this attribute is no longer in use"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "DO json\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/eventServiceDiscovery:EventServiceDiscovery": {
            "properties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:index/EventServiceDiscoveryNode:EventServiceDiscoveryNode"
                    },
                    "description": "Map of node which will be added to pool which will be having node name(id),node address(ip) and node port(port)\n"
                },
                "taskid": {
                    "type": "string",
                    "description": "servicediscovery endpoint ( Below example shows how to create endpoing using AS3 )\n"
                }
            },
            "required": [
                "taskid"
            ],
            "inputProperties": {
                "nodes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:index/EventServiceDiscoveryNode:EventServiceDiscoveryNode"
                    },
                    "description": "Map of node which will be added to pool which will be having node name(id),node address(ip) and node port(port)\n"
                },
                "taskid": {
                    "type": "string",
                    "description": "servicediscovery endpoint ( Below example shows how to create endpoing using AS3 )\n"
                }
            },
            "requiredInputs": [
                "taskid"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering EventServiceDiscovery resources.\n",
                "properties": {
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:index/EventServiceDiscoveryNode:EventServiceDiscoveryNode"
                        },
                        "description": "Map of node which will be added to pool which will be having node name(id),node address(ip) and node port(port)\n"
                    },
                    "taskid": {
                        "type": "string",
                        "description": "servicediscovery endpoint ( Below example shows how to create endpoing using AS3 )\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/fastApplication:FastApplication": {
            "description": "`f5bigip.FastApplication` This resource will create and manage FAST applications on BIG-IP from provided JSON declaration. \n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * as fs from \"fs\";\n\nconst foo_app = new f5bigip.FastApplication(\"foo-app\", {\n    fastJson: fs.readFileSync(\"new_fast_app.json\", \"utf-8\"),\n    template: \"examples/simple_http\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nfoo_app = f5bigip.FastApplication(\"foo-app\",\n    fast_json=(lambda path: open(path).read())(\"new_fast_app.json\"),\n    template=\"examples/simple_http\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var foo_app = new F5BigIP.FastApplication(\"foo-app\", new F5BigIP.FastApplicationArgs\n        {\n            FastJson = File.ReadAllText(\"new_fast_app.json\"),\n            Template = \"examples/simple_http\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewFastApplication(ctx, \"foo_app\", \u0026f5bigip.FastApplicationArgs{\n\t\t\tFastJson: readFileOrPanic(\"new_fast_app.json\"),\n\t\t\tTemplate: pulumi.String(\"examples/simple_http\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "application": {
                    "type": "string",
                    "description": "A FAST application name.\n"
                },
                "fastJson": {
                    "type": "string",
                    "description": "Path/Filename of Declarative FAST JSON which is a json file used with builtin ```file``` function\n"
                },
                "template": {
                    "type": "string",
                    "description": "Name of installed FAST template used to create FAST application. This parameter is required when creating new resource.\n"
                },
                "tenant": {
                    "type": "string",
                    "description": "A FAST tenant name on which you want to manage application.\n"
                }
            },
            "required": [
                "application",
                "fastJson",
                "tenant"
            ],
            "inputProperties": {
                "fastJson": {
                    "type": "string",
                    "description": "Path/Filename of Declarative FAST JSON which is a json file used with builtin ```file``` function\n"
                },
                "template": {
                    "type": "string",
                    "description": "Name of installed FAST template used to create FAST application. This parameter is required when creating new resource.\n"
                }
            },
            "requiredInputs": [
                "fastJson"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FastApplication resources.\n",
                "properties": {
                    "application": {
                        "type": "string",
                        "description": "A FAST application name.\n"
                    },
                    "fastJson": {
                        "type": "string",
                        "description": "Path/Filename of Declarative FAST JSON which is a json file used with builtin ```file``` function\n"
                    },
                    "template": {
                        "type": "string",
                        "description": "Name of installed FAST template used to create FAST application. This parameter is required when creating new resource.\n"
                    },
                    "tenant": {
                        "type": "string",
                        "description": "A FAST tenant name on which you want to manage application.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/fastTemplate:FastTemplate": {
            "description": "`f5bigip.FastTemplate` This resource will import and create FAST template sets on BIG-IP LTM.\nTemplate set can be imported from zip archive files on the local disk.\n\n",
            "properties": {
                "md5Hash": {
                    "type": "string",
                    "description": "MD5 hash of the zip archive file containing FAST template\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the FAST template set to be created on to BIGIP\n"
                },
                "source": {
                    "type": "string",
                    "description": "Path to the zip archive file containing FAST template set on Local Disk\n"
                }
            },
            "required": [
                "md5Hash",
                "source"
            ],
            "inputProperties": {
                "md5Hash": {
                    "type": "string",
                    "description": "MD5 hash of the zip archive file containing FAST template\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the FAST template set to be created on to BIGIP\n"
                },
                "source": {
                    "type": "string",
                    "description": "Path to the zip archive file containing FAST template set on Local Disk\n"
                }
            },
            "requiredInputs": [
                "md5Hash",
                "source"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering FastTemplate resources.\n",
                "properties": {
                    "md5Hash": {
                        "type": "string",
                        "description": "MD5 hash of the zip archive file containing FAST template\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the FAST template set to be created on to BIGIP\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "Path to the zip archive file containing FAST template set on Local Disk\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/ipsecPolicy:IpsecPolicy": {
            "description": "`f5bigip.IpsecPolicy` Manage IPSec policies on a BIG-IP\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/test-policy)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test_policy = new f5bigip.IpsecPolicy(\"test-policy\", {\n    authAlgorithm: \"sha1\",\n    description: \"created by terraform provider\",\n    encryptAlgorithm: \"3des\",\n    ipcomp: \"deflate\",\n    lifetime: 3,\n    mode: \"tunnel\",\n    name: \"/Common/test-policy\",\n    protocol: \"esp\",\n    tunnelLocalAddress: \"192.168.1.1\",\n    tunnelRemoteAddress: \"10.10.1.1\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_policy = f5bigip.IpsecPolicy(\"test-policy\",\n    auth_algorithm=\"sha1\",\n    description=\"created by terraform provider\",\n    encrypt_algorithm=\"3des\",\n    ipcomp=\"deflate\",\n    lifetime=3,\n    mode=\"tunnel\",\n    name=\"/Common/test-policy\",\n    protocol=\"esp\",\n    tunnel_local_address=\"192.168.1.1\",\n    tunnel_remote_address=\"10.10.1.1\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_policy = new F5BigIP.IpsecPolicy(\"test-policy\", new F5BigIP.IpsecPolicyArgs\n        {\n            AuthAlgorithm = \"sha1\",\n            Description = \"created by terraform provider\",\n            EncryptAlgorithm = \"3des\",\n            Ipcomp = \"deflate\",\n            Lifetime = 3,\n            Mode = \"tunnel\",\n            Name = \"/Common/test-policy\",\n            Protocol = \"esp\",\n            TunnelLocalAddress = \"192.168.1.1\",\n            TunnelRemoteAddress = \"10.10.1.1\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewIpsecPolicy(ctx, \"test_policy\", \u0026f5bigip.IpsecPolicyArgs{\n\t\t\tAuthAlgorithm:       pulumi.String(\"sha1\"),\n\t\t\tDescription:         pulumi.String(\"created by terraform provider\"),\n\t\t\tEncryptAlgorithm:    pulumi.String(\"3des\"),\n\t\t\tIpcomp:              pulumi.String(\"deflate\"),\n\t\t\tLifetime:            pulumi.Int(3),\n\t\t\tMode:                pulumi.String(\"tunnel\"),\n\t\t\tName:                pulumi.String(\"/Common/test-policy\"),\n\t\t\tProtocol:            pulumi.String(\"esp\"),\n\t\t\tTunnelLocalAddress:  pulumi.String(\"192.168.1.1\"),\n\t\t\tTunnelRemoteAddress: pulumi.String(\"10.10.1.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "authAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm to use for IKE authentication. Valid choices are: `sha1, sha256, sha384, sha512, aes-gcm128,\naes-gcm192, aes-gcm256, aes-gmac128, aes-gmac192, aes-gmac256`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IPSec policy.\n"
                },
                "encryptAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm to use for IKE encryption. Valid choices are: `null, 3des, aes128, aes192, aes256, aes-gmac256,\naes-gmac192, aes-gmac128, aes-gcm256, aes-gcm192, aes-gcm256, aes-gcm128`\n"
                },
                "ipcomp": {
                    "type": "string",
                    "description": "Specifies whether to use IPComp encapsulation. Valid choices are: `none\", null\", deflate`\n"
                },
                "kbLifetime": {
                    "type": "integer",
                    "description": "Specifies the length of time before the IKE security association expires, in kilobytes.\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "Specifies the length of time before the IKE security association expires, in minutes.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies the processing mode. Valid choices are: `transport, interface, isession, tunnel`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IPSec policy,it should be \"full path\".The full path is the combination of the partition + name of the IPSec policy.(For example `/Common/test-policy`)\n"
                },
                "perfectForwardSecrecy": {
                    "type": "string",
                    "description": "Specifies the Diffie-Hellman group to use for IKE Phase 2 negotiation. Valid choices are: `none, modp768, modp1024, modp1536, modp2048, modp3072,\nmodp4096, modp6144, modp8192`\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Specifies the IPsec protocol. Valid choices are: `ah, esp`\n"
                },
                "tunnelLocalAddress": {
                    "type": "string",
                    "description": "Specifies the local endpoint IP address of the IPsec tunnel. This parameter is only valid when mode is tunnel.\n"
                },
                "tunnelRemoteAddress": {
                    "type": "string",
                    "description": "Specifies the remote endpoint IP address of the IPsec tunnel. This parameter is only valid when mode is tunnel.\n"
                }
            },
            "required": [
                "authAlgorithm",
                "description",
                "encryptAlgorithm",
                "ipcomp",
                "kbLifetime",
                "lifetime",
                "mode",
                "name",
                "perfectForwardSecrecy",
                "protocol",
                "tunnelLocalAddress",
                "tunnelRemoteAddress"
            ],
            "inputProperties": {
                "authAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm to use for IKE authentication. Valid choices are: `sha1, sha256, sha384, sha512, aes-gcm128,\naes-gcm192, aes-gcm256, aes-gmac128, aes-gmac192, aes-gmac256`\n"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the IPSec policy.\n"
                },
                "encryptAlgorithm": {
                    "type": "string",
                    "description": "Specifies the algorithm to use for IKE encryption. Valid choices are: `null, 3des, aes128, aes192, aes256, aes-gmac256,\naes-gmac192, aes-gmac128, aes-gcm256, aes-gcm192, aes-gcm256, aes-gcm128`\n"
                },
                "ipcomp": {
                    "type": "string",
                    "description": "Specifies whether to use IPComp encapsulation. Valid choices are: `none\", null\", deflate`\n"
                },
                "kbLifetime": {
                    "type": "integer",
                    "description": "Specifies the length of time before the IKE security association expires, in kilobytes.\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "Specifies the length of time before the IKE security association expires, in minutes.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies the processing mode. Valid choices are: `transport, interface, isession, tunnel`\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IPSec policy,it should be \"full path\".The full path is the combination of the partition + name of the IPSec policy.(For example `/Common/test-policy`)\n"
                },
                "perfectForwardSecrecy": {
                    "type": "string",
                    "description": "Specifies the Diffie-Hellman group to use for IKE Phase 2 negotiation. Valid choices are: `none, modp768, modp1024, modp1536, modp2048, modp3072,\nmodp4096, modp6144, modp8192`\n"
                },
                "protocol": {
                    "type": "string",
                    "description": "Specifies the IPsec protocol. Valid choices are: `ah, esp`\n"
                },
                "tunnelLocalAddress": {
                    "type": "string",
                    "description": "Specifies the local endpoint IP address of the IPsec tunnel. This parameter is only valid when mode is tunnel.\n"
                },
                "tunnelRemoteAddress": {
                    "type": "string",
                    "description": "Specifies the remote endpoint IP address of the IPsec tunnel. This parameter is only valid when mode is tunnel.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IpsecPolicy resources.\n",
                "properties": {
                    "authAlgorithm": {
                        "type": "string",
                        "description": "Specifies the algorithm to use for IKE authentication. Valid choices are: `sha1, sha256, sha384, sha512, aes-gcm128,\naes-gcm192, aes-gcm256, aes-gmac128, aes-gmac192, aes-gmac256`\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the IPSec policy.\n"
                    },
                    "encryptAlgorithm": {
                        "type": "string",
                        "description": "Specifies the algorithm to use for IKE encryption. Valid choices are: `null, 3des, aes128, aes192, aes256, aes-gmac256,\naes-gmac192, aes-gmac128, aes-gcm256, aes-gcm192, aes-gcm256, aes-gcm128`\n"
                    },
                    "ipcomp": {
                        "type": "string",
                        "description": "Specifies whether to use IPComp encapsulation. Valid choices are: `none\", null\", deflate`\n"
                    },
                    "kbLifetime": {
                        "type": "integer",
                        "description": "Specifies the length of time before the IKE security association expires, in kilobytes.\n"
                    },
                    "lifetime": {
                        "type": "integer",
                        "description": "Specifies the length of time before the IKE security association expires, in minutes.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Specifies the processing mode. Valid choices are: `transport, interface, isession, tunnel`\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IPSec policy,it should be \"full path\".The full path is the combination of the partition + name of the IPSec policy.(For example `/Common/test-policy`)\n"
                    },
                    "perfectForwardSecrecy": {
                        "type": "string",
                        "description": "Specifies the Diffie-Hellman group to use for IKE Phase 2 negotiation. Valid choices are: `none, modp768, modp1024, modp1536, modp2048, modp3072,\nmodp4096, modp6144, modp8192`\n"
                    },
                    "protocol": {
                        "type": "string",
                        "description": "Specifies the IPsec protocol. Valid choices are: `ah, esp`\n"
                    },
                    "tunnelLocalAddress": {
                        "type": "string",
                        "description": "Specifies the local endpoint IP address of the IPsec tunnel. This parameter is only valid when mode is tunnel.\n"
                    },
                    "tunnelRemoteAddress": {
                        "type": "string",
                        "description": "Specifies the remote endpoint IP address of the IPsec tunnel. This parameter is only valid when mode is tunnel.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/netIkePeer:NetIkePeer": {
            "description": "`f5bigip.NetIkePeer` Manages a ike_peer configuration\n\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst example1 = new f5bigip.NetIkePeer(\"example1\", {\n    localAddress: \"192.16.81.240\",\n    name: \"example1\",\n    profile: \"/Common/dslite\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "appService": {
                    "type": "string",
                    "description": "The application service that the object belongs to\n"
                },
                "caCertFile": {
                    "type": "string",
                    "description": "the trusted root and intermediate certificate authorities\n"
                },
                "crlFile": {
                    "type": "string",
                    "description": "Specifies the file name of the Certificate Revocation List. Only supported in IKEv1\n"
                },
                "description": {
                    "type": "string",
                    "description": "User defined description\n"
                },
                "dpdDelay": {
                    "type": "integer",
                    "description": "Specifies the number of seconds between Dead Peer Detection messages\n"
                },
                "generatePolicy": {
                    "type": "string",
                    "description": "Enable or disable the generation of Security Policy Database entries(SPD) when the device is the responder of the IKE remote node\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "Defines the lifetime in minutes of an IKE SA which will be proposed in the phase 1 negotiations\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Defines the exchange mode for phase 1 when racoon is the initiator, or the acceptable exchange mode when racoon is the responder\n"
                },
                "myCertFile": {
                    "type": "string",
                    "description": "Specifies the name of the certificate file object\n"
                },
                "myCertKeyFile": {
                    "type": "string",
                    "description": "Specifies the name of the certificate key file object\n"
                },
                "myCertKeyPassphrase": {
                    "type": "string",
                    "description": "Specifies the passphrase of the key used for my-cert-key-file\n"
                },
                "myIdType": {
                    "type": "string",
                    "description": "Specifies the identifier type sent to the remote host to use in the phase 1 negotiation\n"
                },
                "myIdValue": {
                    "type": "string",
                    "description": "Specifies the identifier value sent to the remote host in the phase 1 negotiation\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the ike_peer\n"
                },
                "natTraversal": {
                    "type": "string",
                    "description": "Enables use of the NAT-Traversal IPsec extension\n"
                },
                "passive": {
                    "type": "string",
                    "description": "Specifies whether the local IKE agent can be the initiator of the IKE negotiation with this ike-peer\n"
                },
                "peersCertFile": {
                    "type": "string",
                    "description": "Specifies the peer’s certificate for authentication\n"
                },
                "peersCertType": {
                    "type": "string",
                    "description": "Specifies that the only peers-cert-type supported is certfile\n"
                },
                "peersIdType": {
                    "type": "string",
                    "description": "Specifies which of address, fqdn, asn1dn, user-fqdn or keyid-tag types to use as peers-id-type\n"
                },
                "peersIdValue": {
                    "type": "string",
                    "description": "Specifies the peer’s identifier to be received\n"
                },
                "phase1AuthMethod": {
                    "type": "string",
                    "description": "Specifies the authentication method used for phase 1 negotiation\n"
                },
                "phase1EncryptAlgorithm": {
                    "type": "string",
                    "description": "Specifies the encryption algorithm used for the isakmp phase 1 negotiation\n"
                },
                "phase1HashAlgorithm": {
                    "type": "string",
                    "description": "Defines the hash algorithm used for the isakmp phase 1 negotiation\n"
                },
                "phase1PerfectForwardSecrecy": {
                    "type": "string",
                    "description": "Defines the Diffie-Hellman group for key exchange to provide perfect forward secrecy\n"
                },
                "presharedKey": {
                    "type": "string",
                    "description": "Specifies the preshared key for ISAKMP SAs\n"
                },
                "presharedKeyEncrypted": {
                    "type": "string",
                    "description": "Display the encrypted preshared-key for the IKE remote node\n"
                },
                "prf": {
                    "type": "string",
                    "description": "Specifies the pseudo-random function used to derive keying material for all cryptographic operations\n"
                },
                "proxySupport": {
                    "type": "string",
                    "description": "If this value is enabled, both values of ID payloads in the phase 2 exchange are used as the addresses of end-point of IPsec-SAs\n"
                },
                "remoteAddress": {
                    "type": "string",
                    "description": "Specifies the IP address of the IKE remote node\n"
                },
                "replayWindowSize": {
                    "type": "integer",
                    "description": "Specifies the replay window size of the IPsec SAs negotiated with the IKE remote node\n"
                },
                "state": {
                    "type": "string",
                    "description": "Enables or disables this IKE remote node\n"
                },
                "trafficSelectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the names of the traffic-selector objects associated with this ike-peer\n"
                },
                "verifyCert": {
                    "type": "string",
                    "description": "Specifies whether to verify the certificate chain of the remote peer based on the trusted certificates in ca-cert-file\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which version of IKE to be used\n"
                }
            },
            "required": [
                "caCertFile",
                "crlFile",
                "description",
                "dpdDelay",
                "generatePolicy",
                "lifetime",
                "mode",
                "myCertFile",
                "myCertKeyFile",
                "myCertKeyPassphrase",
                "myIdType",
                "myIdValue",
                "name",
                "natTraversal",
                "passive",
                "peersCertFile",
                "peersCertType",
                "peersIdType",
                "peersIdValue",
                "phase1AuthMethod",
                "phase1EncryptAlgorithm",
                "phase1HashAlgorithm",
                "phase1PerfectForwardSecrecy",
                "presharedKeyEncrypted",
                "prf",
                "proxySupport",
                "remoteAddress",
                "replayWindowSize",
                "state",
                "trafficSelectors",
                "verifyCert",
                "versions"
            ],
            "inputProperties": {
                "appService": {
                    "type": "string",
                    "description": "The application service that the object belongs to\n"
                },
                "caCertFile": {
                    "type": "string",
                    "description": "the trusted root and intermediate certificate authorities\n"
                },
                "crlFile": {
                    "type": "string",
                    "description": "Specifies the file name of the Certificate Revocation List. Only supported in IKEv1\n"
                },
                "description": {
                    "type": "string",
                    "description": "User defined description\n"
                },
                "dpdDelay": {
                    "type": "integer",
                    "description": "Specifies the number of seconds between Dead Peer Detection messages\n"
                },
                "generatePolicy": {
                    "type": "string",
                    "description": "Enable or disable the generation of Security Policy Database entries(SPD) when the device is the responder of the IKE remote node\n"
                },
                "lifetime": {
                    "type": "integer",
                    "description": "Defines the lifetime in minutes of an IKE SA which will be proposed in the phase 1 negotiations\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Defines the exchange mode for phase 1 when racoon is the initiator, or the acceptable exchange mode when racoon is the responder\n"
                },
                "myCertFile": {
                    "type": "string",
                    "description": "Specifies the name of the certificate file object\n"
                },
                "myCertKeyFile": {
                    "type": "string",
                    "description": "Specifies the name of the certificate key file object\n"
                },
                "myCertKeyPassphrase": {
                    "type": "string",
                    "description": "Specifies the passphrase of the key used for my-cert-key-file\n"
                },
                "myIdType": {
                    "type": "string",
                    "description": "Specifies the identifier type sent to the remote host to use in the phase 1 negotiation\n"
                },
                "myIdValue": {
                    "type": "string",
                    "description": "Specifies the identifier value sent to the remote host in the phase 1 negotiation\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the ike_peer\n"
                },
                "natTraversal": {
                    "type": "string",
                    "description": "Enables use of the NAT-Traversal IPsec extension\n"
                },
                "passive": {
                    "type": "string",
                    "description": "Specifies whether the local IKE agent can be the initiator of the IKE negotiation with this ike-peer\n"
                },
                "peersCertFile": {
                    "type": "string",
                    "description": "Specifies the peer’s certificate for authentication\n"
                },
                "peersCertType": {
                    "type": "string",
                    "description": "Specifies that the only peers-cert-type supported is certfile\n"
                },
                "peersIdType": {
                    "type": "string",
                    "description": "Specifies which of address, fqdn, asn1dn, user-fqdn or keyid-tag types to use as peers-id-type\n"
                },
                "peersIdValue": {
                    "type": "string",
                    "description": "Specifies the peer’s identifier to be received\n"
                },
                "phase1AuthMethod": {
                    "type": "string",
                    "description": "Specifies the authentication method used for phase 1 negotiation\n"
                },
                "phase1EncryptAlgorithm": {
                    "type": "string",
                    "description": "Specifies the encryption algorithm used for the isakmp phase 1 negotiation\n"
                },
                "phase1HashAlgorithm": {
                    "type": "string",
                    "description": "Defines the hash algorithm used for the isakmp phase 1 negotiation\n"
                },
                "phase1PerfectForwardSecrecy": {
                    "type": "string",
                    "description": "Defines the Diffie-Hellman group for key exchange to provide perfect forward secrecy\n"
                },
                "presharedKey": {
                    "type": "string",
                    "description": "Specifies the preshared key for ISAKMP SAs\n"
                },
                "presharedKeyEncrypted": {
                    "type": "string",
                    "description": "Display the encrypted preshared-key for the IKE remote node\n"
                },
                "prf": {
                    "type": "string",
                    "description": "Specifies the pseudo-random function used to derive keying material for all cryptographic operations\n"
                },
                "proxySupport": {
                    "type": "string",
                    "description": "If this value is enabled, both values of ID payloads in the phase 2 exchange are used as the addresses of end-point of IPsec-SAs\n"
                },
                "remoteAddress": {
                    "type": "string",
                    "description": "Specifies the IP address of the IKE remote node\n"
                },
                "replayWindowSize": {
                    "type": "integer",
                    "description": "Specifies the replay window size of the IPsec SAs negotiated with the IKE remote node\n"
                },
                "state": {
                    "type": "string",
                    "description": "Enables or disables this IKE remote node\n"
                },
                "trafficSelectors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the names of the traffic-selector objects associated with this ike-peer\n"
                },
                "verifyCert": {
                    "type": "string",
                    "description": "Specifies whether to verify the certificate chain of the remote peer based on the trusted certificates in ca-cert-file\n"
                },
                "versions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies which version of IKE to be used\n"
                }
            },
            "requiredInputs": [
                "name",
                "remoteAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetIkePeer resources.\n",
                "properties": {
                    "appService": {
                        "type": "string",
                        "description": "The application service that the object belongs to\n"
                    },
                    "caCertFile": {
                        "type": "string",
                        "description": "the trusted root and intermediate certificate authorities\n"
                    },
                    "crlFile": {
                        "type": "string",
                        "description": "Specifies the file name of the Certificate Revocation List. Only supported in IKEv1\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User defined description\n"
                    },
                    "dpdDelay": {
                        "type": "integer",
                        "description": "Specifies the number of seconds between Dead Peer Detection messages\n"
                    },
                    "generatePolicy": {
                        "type": "string",
                        "description": "Enable or disable the generation of Security Policy Database entries(SPD) when the device is the responder of the IKE remote node\n"
                    },
                    "lifetime": {
                        "type": "integer",
                        "description": "Defines the lifetime in minutes of an IKE SA which will be proposed in the phase 1 negotiations\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Defines the exchange mode for phase 1 when racoon is the initiator, or the acceptable exchange mode when racoon is the responder\n"
                    },
                    "myCertFile": {
                        "type": "string",
                        "description": "Specifies the name of the certificate file object\n"
                    },
                    "myCertKeyFile": {
                        "type": "string",
                        "description": "Specifies the name of the certificate key file object\n"
                    },
                    "myCertKeyPassphrase": {
                        "type": "string",
                        "description": "Specifies the passphrase of the key used for my-cert-key-file\n"
                    },
                    "myIdType": {
                        "type": "string",
                        "description": "Specifies the identifier type sent to the remote host to use in the phase 1 negotiation\n"
                    },
                    "myIdValue": {
                        "type": "string",
                        "description": "Specifies the identifier value sent to the remote host in the phase 1 negotiation\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the ike_peer\n"
                    },
                    "natTraversal": {
                        "type": "string",
                        "description": "Enables use of the NAT-Traversal IPsec extension\n"
                    },
                    "passive": {
                        "type": "string",
                        "description": "Specifies whether the local IKE agent can be the initiator of the IKE negotiation with this ike-peer\n"
                    },
                    "peersCertFile": {
                        "type": "string",
                        "description": "Specifies the peer’s certificate for authentication\n"
                    },
                    "peersCertType": {
                        "type": "string",
                        "description": "Specifies that the only peers-cert-type supported is certfile\n"
                    },
                    "peersIdType": {
                        "type": "string",
                        "description": "Specifies which of address, fqdn, asn1dn, user-fqdn or keyid-tag types to use as peers-id-type\n"
                    },
                    "peersIdValue": {
                        "type": "string",
                        "description": "Specifies the peer’s identifier to be received\n"
                    },
                    "phase1AuthMethod": {
                        "type": "string",
                        "description": "Specifies the authentication method used for phase 1 negotiation\n"
                    },
                    "phase1EncryptAlgorithm": {
                        "type": "string",
                        "description": "Specifies the encryption algorithm used for the isakmp phase 1 negotiation\n"
                    },
                    "phase1HashAlgorithm": {
                        "type": "string",
                        "description": "Defines the hash algorithm used for the isakmp phase 1 negotiation\n"
                    },
                    "phase1PerfectForwardSecrecy": {
                        "type": "string",
                        "description": "Defines the Diffie-Hellman group for key exchange to provide perfect forward secrecy\n"
                    },
                    "presharedKey": {
                        "type": "string",
                        "description": "Specifies the preshared key for ISAKMP SAs\n"
                    },
                    "presharedKeyEncrypted": {
                        "type": "string",
                        "description": "Display the encrypted preshared-key for the IKE remote node\n"
                    },
                    "prf": {
                        "type": "string",
                        "description": "Specifies the pseudo-random function used to derive keying material for all cryptographic operations\n"
                    },
                    "proxySupport": {
                        "type": "string",
                        "description": "If this value is enabled, both values of ID payloads in the phase 2 exchange are used as the addresses of end-point of IPsec-SAs\n"
                    },
                    "remoteAddress": {
                        "type": "string",
                        "description": "Specifies the IP address of the IKE remote node\n"
                    },
                    "replayWindowSize": {
                        "type": "integer",
                        "description": "Specifies the replay window size of the IPsec SAs negotiated with the IKE remote node\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Enables or disables this IKE remote node\n"
                    },
                    "trafficSelectors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the names of the traffic-selector objects associated with this ike-peer\n"
                    },
                    "verifyCert": {
                        "type": "string",
                        "description": "Specifies whether to verify the certificate chain of the remote peer based on the trusted certificates in ca-cert-file\n"
                    },
                    "versions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies which version of IKE to be used\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/netTunnel:NetTunnel": {
            "description": "`f5bigip.NetTunnel` Manages a tunnel configuration\n\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst example1 = new f5bigip.NetTunnel(\"example1\", {\n    localAddress: \"192.16.81.240\",\n    name: \"example1\",\n    profile: \"/Common/dslite\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nexample1 = f5bigip.NetTunnel(\"example1\",\n    local_address=\"192.16.81.240\",\n    name=\"example1\",\n    profile=\"/Common/dslite\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var example1 = new F5BigIP.NetTunnel(\"example1\", new F5BigIP.NetTunnelArgs\n        {\n            LocalAddress = \"192.16.81.240\",\n            Name = \"example1\",\n            Profile = \"/Common/dslite\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewNetTunnel(ctx, \"example1\", \u0026f5bigip.NetTunnelArgs{\n\t\t\tLocalAddress: pulumi.String(\"192.16.81.240\"),\n\t\t\tName:         pulumi.String(\"example1\"),\n\t\t\tProfile:      pulumi.String(\"/Common/dslite\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "appService": {
                    "type": "string",
                    "description": "The application service that the object belongs to\n"
                },
                "autoLastHop": {
                    "type": "string",
                    "description": "Specifies whether auto lasthop is enabled or not\n"
                },
                "description": {
                    "type": "string",
                    "description": "User defined description\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Specifies an idle timeout for wildcard tunnels in seconds\n"
                },
                "key": {
                    "type": "integer",
                    "description": "The key field may represent different values depending on the type of the tunnel\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "Specifies a local IP address. This option is required\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies how the tunnel carries traffic\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Specifies the maximum transmission unit (MTU) of the tunnel\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the tunnel\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the admin-partition within which this component resides\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Specifies the profile that you want to associate with the tunnel\n"
                },
                "remoteAddress": {
                    "type": "string",
                    "description": "Specifies a remote IP address\n"
                },
                "secondaryAddress": {
                    "type": "string",
                    "description": "Specifies a secondary non-floating IP address when the local-address is set to a floating address\n"
                },
                "tos": {
                    "type": "string",
                    "description": "Specifies a value for insertion into the Type of Service (ToS) octet within the IP header of the encapsulating header of transmitted packets\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "Specifies a traffic-group for use with the tunnel\n"
                },
                "transparent": {
                    "type": "string",
                    "description": "Enables or disables the tunnel to be transparent\n"
                },
                "usePmtu": {
                    "type": "string",
                    "description": "Enables or disables the tunnel to use the PMTU (Path MTU) information provided by ICMP NeedFrag error messages\n"
                }
            },
            "required": [
                "localAddress",
                "name",
                "profile"
            ],
            "inputProperties": {
                "appService": {
                    "type": "string",
                    "description": "The application service that the object belongs to\n"
                },
                "autoLastHop": {
                    "type": "string",
                    "description": "Specifies whether auto lasthop is enabled or not\n"
                },
                "description": {
                    "type": "string",
                    "description": "User defined description\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Specifies an idle timeout for wildcard tunnels in seconds\n"
                },
                "key": {
                    "type": "integer",
                    "description": "The key field may represent different values depending on the type of the tunnel\n"
                },
                "localAddress": {
                    "type": "string",
                    "description": "Specifies a local IP address. This option is required\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies how the tunnel carries traffic\n"
                },
                "mtu": {
                    "type": "integer",
                    "description": "Specifies the maximum transmission unit (MTU) of the tunnel\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the tunnel\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the admin-partition within which this component resides\n"
                },
                "profile": {
                    "type": "string",
                    "description": "Specifies the profile that you want to associate with the tunnel\n"
                },
                "remoteAddress": {
                    "type": "string",
                    "description": "Specifies a remote IP address\n"
                },
                "secondaryAddress": {
                    "type": "string",
                    "description": "Specifies a secondary non-floating IP address when the local-address is set to a floating address\n"
                },
                "tos": {
                    "type": "string",
                    "description": "Specifies a value for insertion into the Type of Service (ToS) octet within the IP header of the encapsulating header of transmitted packets\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "Specifies a traffic-group for use with the tunnel\n"
                },
                "transparent": {
                    "type": "string",
                    "description": "Enables or disables the tunnel to be transparent\n"
                },
                "usePmtu": {
                    "type": "string",
                    "description": "Enables or disables the tunnel to use the PMTU (Path MTU) information provided by ICMP NeedFrag error messages\n"
                }
            },
            "requiredInputs": [
                "localAddress",
                "name",
                "profile"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering NetTunnel resources.\n",
                "properties": {
                    "appService": {
                        "type": "string",
                        "description": "The application service that the object belongs to\n"
                    },
                    "autoLastHop": {
                        "type": "string",
                        "description": "Specifies whether auto lasthop is enabled or not\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User defined description\n"
                    },
                    "idleTimeout": {
                        "type": "integer",
                        "description": "Specifies an idle timeout for wildcard tunnels in seconds\n"
                    },
                    "key": {
                        "type": "integer",
                        "description": "The key field may represent different values depending on the type of the tunnel\n"
                    },
                    "localAddress": {
                        "type": "string",
                        "description": "Specifies a local IP address. This option is required\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Specifies how the tunnel carries traffic\n"
                    },
                    "mtu": {
                        "type": "integer",
                        "description": "Specifies the maximum transmission unit (MTU) of the tunnel\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the tunnel\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Displays the admin-partition within which this component resides\n"
                    },
                    "profile": {
                        "type": "string",
                        "description": "Specifies the profile that you want to associate with the tunnel\n"
                    },
                    "remoteAddress": {
                        "type": "string",
                        "description": "Specifies a remote IP address\n"
                    },
                    "secondaryAddress": {
                        "type": "string",
                        "description": "Specifies a secondary non-floating IP address when the local-address is set to a floating address\n"
                    },
                    "tos": {
                        "type": "string",
                        "description": "Specifies a value for insertion into the Type of Service (ToS) octet within the IP header of the encapsulating header of transmitted packets\n"
                    },
                    "trafficGroup": {
                        "type": "string",
                        "description": "Specifies a traffic-group for use with the tunnel\n"
                    },
                    "transparent": {
                        "type": "string",
                        "description": "Enables or disables the tunnel to be transparent\n"
                    },
                    "usePmtu": {
                        "type": "string",
                        "description": "Enables or disables the tunnel to use the PMTU (Path MTU) information provided by ICMP NeedFrag error messages\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:index/trafficSelector:TrafficSelector": {
            "description": "`f5bigip.TrafficSelector` Manage IPSec Traffic Selectors on BIG-IP\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/test-selector)\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test_selector = new f5bigip.TrafficSelector(\"test-selector\", {\n    destinationAddress: \"3.10.11.2/32\",\n    name: \"/Common/test-selector\",\n    sourceAddress: \"2.10.11.12/32\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_selector = f5bigip.TrafficSelector(\"test-selector\",\n    destination_address=\"3.10.11.2/32\",\n    name=\"/Common/test-selector\",\n    source_address=\"2.10.11.12/32\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_selector = new F5BigIP.TrafficSelector(\"test-selector\", new F5BigIP.TrafficSelectorArgs\n        {\n            DestinationAddress = \"3.10.11.2/32\",\n            Name = \"/Common/test-selector\",\n            SourceAddress = \"2.10.11.12/32\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := f5bigip.NewTrafficSelector(ctx, \"test_selector\", \u0026f5bigip.TrafficSelectorArgs{\n\t\t\tDestinationAddress: pulumi.String(\"3.10.11.2/32\"),\n\t\t\tName:               pulumi.String(\"/Common/test-selector\"),\n\t\t\tSourceAddress:      pulumi.String(\"2.10.11.12/32\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Description of the traffic selector.\n"
                },
                "destinationAddress": {
                    "type": "string",
                    "description": "Specifies the host or network IP address to which the application traffic is destined.When creating a new traffic selector, this parameter is required.\n"
                },
                "destinationPort": {
                    "type": "integer",
                    "description": "Specifies the IP port used by the application. The default value is `All Ports (0)`\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies whether the traffic selector applies to inbound or outbound traffic, or both. The default value is `Both`.\n"
                },
                "ipProtocol": {
                    "type": "integer",
                    "description": "Specifies the network protocol to use for this traffic. The default value is `All Protocols (255)`\n"
                },
                "ipsecPolicy": {
                    "type": "string",
                    "description": "Specifies the IPsec policy that tells the BIG-IP system how to handle the packets.When creating a new traffic selector, if this parameter is not specified, the default is `default-ipsec-policy`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IPSec traffic-selector,it should be \"full path\".The full path is the combination of the partition + name of the IPSec traffic-selector.(For example `/Common/test-selector`)\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Specifies the order in which traffic is matched, if traffic can be matched to multiple traffic selectors.Traffic is matched to the traffic selector with the highest priority (lowest order number).\nWhen creating a new traffic selector, if this parameter is not specified, the default is `last`\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "Specifies the host or network IP address from which the application traffic originates.When creating a new traffic selector, this parameter is required.\n"
                },
                "sourcePort": {
                    "type": "integer",
                    "description": "Specifies the IP port used by the application. The default value is `All Ports (0)`.\n"
                }
            },
            "required": [
                "description",
                "destinationAddress",
                "destinationPort",
                "direction",
                "ipProtocol",
                "ipsecPolicy",
                "name",
                "order",
                "sourceAddress",
                "sourcePort"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Description of the traffic selector.\n"
                },
                "destinationAddress": {
                    "type": "string",
                    "description": "Specifies the host or network IP address to which the application traffic is destined.When creating a new traffic selector, this parameter is required.\n"
                },
                "destinationPort": {
                    "type": "integer",
                    "description": "Specifies the IP port used by the application. The default value is `All Ports (0)`\n"
                },
                "direction": {
                    "type": "string",
                    "description": "Specifies whether the traffic selector applies to inbound or outbound traffic, or both. The default value is `Both`.\n"
                },
                "ipProtocol": {
                    "type": "integer",
                    "description": "Specifies the network protocol to use for this traffic. The default value is `All Protocols (255)`\n"
                },
                "ipsecPolicy": {
                    "type": "string",
                    "description": "Specifies the IPsec policy that tells the BIG-IP system how to handle the packets.When creating a new traffic selector, if this parameter is not specified, the default is `default-ipsec-policy`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the IPSec traffic-selector,it should be \"full path\".The full path is the combination of the partition + name of the IPSec traffic-selector.(For example `/Common/test-selector`)\n"
                },
                "order": {
                    "type": "integer",
                    "description": "Specifies the order in which traffic is matched, if traffic can be matched to multiple traffic selectors.Traffic is matched to the traffic selector with the highest priority (lowest order number).\nWhen creating a new traffic selector, if this parameter is not specified, the default is `last`\n"
                },
                "sourceAddress": {
                    "type": "string",
                    "description": "Specifies the host or network IP address from which the application traffic originates.When creating a new traffic selector, this parameter is required.\n"
                },
                "sourcePort": {
                    "type": "integer",
                    "description": "Specifies the IP port used by the application. The default value is `All Ports (0)`.\n"
                }
            },
            "requiredInputs": [
                "destinationAddress",
                "name",
                "sourceAddress"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TrafficSelector resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Description of the traffic selector.\n"
                    },
                    "destinationAddress": {
                        "type": "string",
                        "description": "Specifies the host or network IP address to which the application traffic is destined.When creating a new traffic selector, this parameter is required.\n"
                    },
                    "destinationPort": {
                        "type": "integer",
                        "description": "Specifies the IP port used by the application. The default value is `All Ports (0)`\n"
                    },
                    "direction": {
                        "type": "string",
                        "description": "Specifies whether the traffic selector applies to inbound or outbound traffic, or both. The default value is `Both`.\n"
                    },
                    "ipProtocol": {
                        "type": "integer",
                        "description": "Specifies the network protocol to use for this traffic. The default value is `All Protocols (255)`\n"
                    },
                    "ipsecPolicy": {
                        "type": "string",
                        "description": "Specifies the IPsec policy that tells the BIG-IP system how to handle the packets.When creating a new traffic selector, if this parameter is not specified, the default is `default-ipsec-policy`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the IPSec traffic-selector,it should be \"full path\".The full path is the combination of the partition + name of the IPSec traffic-selector.(For example `/Common/test-selector`)\n"
                    },
                    "order": {
                        "type": "integer",
                        "description": "Specifies the order in which traffic is matched, if traffic can be matched to multiple traffic selectors.Traffic is matched to the traffic selector with the highest priority (lowest order number).\nWhen creating a new traffic selector, if this parameter is not specified, the default is `last`\n"
                    },
                    "sourceAddress": {
                        "type": "string",
                        "description": "Specifies the host or network IP address from which the application traffic originates.When creating a new traffic selector, this parameter is required.\n"
                    },
                    "sourcePort": {
                        "type": "integer",
                        "description": "Specifies the IP port used by the application. The default value is `All Ports (0)`.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/dataGroup:DataGroup": {
            "description": "`f5bigip.ltm.DataGroup` Manages internal (in-line) datagroup configuration\n\nResource should be named with their \"full path\". The full path is the combination of the partition + name of the resource, for example /Common/my-datagroup.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst datagroup = new f5bigip.ltm.DataGroup(\"datagroup\", {\n    name: \"/Common/dgx2\",\n    records: [\n        {\n            data: \"pool1\",\n            name: \"abc.com\",\n        },\n        {\n            data: \"123\",\n            name: \"test\",\n        },\n    ],\n    type: \"string\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ndatagroup = f5bigip.ltm.DataGroup(\"datagroup\",\n    name=\"/Common/dgx2\",\n    records=[\n        f5bigip.ltm.DataGroupRecordArgs(\n            data=\"pool1\",\n            name=\"abc.com\",\n        ),\n        f5bigip.ltm.DataGroupRecordArgs(\n            data=\"123\",\n            name=\"test\",\n        ),\n    ],\n    type=\"string\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var datagroup = new F5BigIP.Ltm.DataGroup(\"datagroup\", new F5BigIP.Ltm.DataGroupArgs\n        {\n            Name = \"/Common/dgx2\",\n            Records = \n            {\n                new F5BigIP.Ltm.Inputs.DataGroupRecordArgs\n                {\n                    Data = \"pool1\",\n                    Name = \"abc.com\",\n                },\n                new F5BigIP.Ltm.Inputs.DataGroupRecordArgs\n                {\n                    Data = \"123\",\n                    Name = \"test\",\n                },\n            },\n            Type = \"string\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewDataGroup(ctx, \"datagroup\", \u0026ltm.DataGroupArgs{\n\t\t\tName: pulumi.String(\"/Common/dgx2\"),\n\t\t\tRecords: ltm.DataGroupRecordArray{\n\t\t\t\t\u0026ltm.DataGroupRecordArgs{\n\t\t\t\t\tData: pulumi.String(\"pool1\"),\n\t\t\t\t\tName: pulumi.String(\"abc.com\"),\n\t\t\t\t},\n\t\t\t\t\u0026ltm.DataGroupRecordArgs{\n\t\t\t\t\tData: pulumi.String(\"123\"),\n\t\t\t\t\tName: pulumi.String(\"test\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tType: pulumi.String(\"string\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "name": {
                    "type": "string",
                    "description": ", sets the value of the record's `name` attribute, must be of type defined in `type` attribute\n"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/DataGroupRecord:DataGroupRecord"
                    },
                    "description": "a set of `name` and `data` attributes, name must be of type specified by the `type` attributed (`string`, `ip` and `integer`), data is optional and can take any value, multiple `record` sets can be specified as needed.\n"
                },
                "type": {
                    "type": "string",
                    "description": "datagroup type (applies to the `name` field of the record), supports: `string`, `ip` or `integer`\n"
                }
            },
            "required": [
                "name",
                "type"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "description": ", sets the value of the record's `name` attribute, must be of type defined in `type` attribute\n"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/DataGroupRecord:DataGroupRecord"
                    },
                    "description": "a set of `name` and `data` attributes, name must be of type specified by the `type` attributed (`string`, `ip` and `integer`), data is optional and can take any value, multiple `record` sets can be specified as needed.\n"
                },
                "type": {
                    "type": "string",
                    "description": "datagroup type (applies to the `name` field of the record), supports: `string`, `ip` or `integer`\n"
                }
            },
            "requiredInputs": [
                "name",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering DataGroup resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": ", sets the value of the record's `name` attribute, must be of type defined in `type` attribute\n"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/DataGroupRecord:DataGroupRecord"
                        },
                        "description": "a set of `name` and `data` attributes, name must be of type specified by the `type` attributed (`string`, `ip` and `integer`), data is optional and can take any value, multiple `record` sets can be specified as needed.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "datagroup type (applies to the `name` field of the record), supports: `string`, `ip` or `integer`\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/iRule:IRule": {
            "description": "`f5bigip.ltm.IRule` Creates iRule on BIG-IP F5 device\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n",
            "properties": {
                "irule": {
                    "type": "string",
                    "description": "Body of the iRule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the iRule\n"
                }
            },
            "required": [
                "irule",
                "name"
            ],
            "inputProperties": {
                "irule": {
                    "type": "string",
                    "description": "Body of the iRule\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the iRule\n"
                }
            },
            "requiredInputs": [
                "irule",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IRule resources.\n",
                "properties": {
                    "irule": {
                        "type": "string",
                        "description": "Body of the iRule\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the iRule\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/monitor:Monitor": {
            "description": "`f5bigip.ltm.Monitor` Configures a custom monitor for use by health checks.\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst monitor = new f5bigip.ltm.Monitor(\"monitor\", {\n    destination: \"1.2.3.4:1234\",\n    interval: 999,\n    name: \"/Common/terraform_monitor\",\n    parent: \"/Common/http\",\n    send: \"GET /some/path\r\\n\",\n    timeout: 999,\n});\nconst test_ftp_monitor = new f5bigip.ltm.Monitor(\"test-ftp-monitor\", {\n    destination: \"*:8008\",\n    filename: \"somefile\",\n    interval: 5,\n    name: \"/Common/ftp-test\",\n    parent: \"/Common/ftp\",\n    timeUntilUp: 0,\n    timeout: 16,\n});\nconst test_postgresql_monitor = new f5bigip.ltm.Monitor(\"test-postgresql-monitor\", {\n    interval: 5,\n    name: \"/Common/test-postgresql-monitor\",\n    parent: \"/Common/postgresql\",\n    password: \"abcd1234\",\n    receive: \"Test\",\n    send: \"SELECT 'Test';\",\n    timeout: 16,\n    username: \"abcd\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmonitor = f5bigip.ltm.Monitor(\"monitor\",\n    destination=\"1.2.3.4:1234\",\n    interval=999,\n    name=\"/Common/terraform_monitor\",\n    parent=\"/Common/http\",\n    send=\"\"\"GET /some/path\r\n\n\"\"\",\n    timeout=999)\ntest_ftp_monitor = f5bigip.ltm.Monitor(\"test-ftp-monitor\",\n    destination=\"*:8008\",\n    filename=\"somefile\",\n    interval=5,\n    name=\"/Common/ftp-test\",\n    parent=\"/Common/ftp\",\n    time_until_up=0,\n    timeout=16)\ntest_postgresql_monitor = f5bigip.ltm.Monitor(\"test-postgresql-monitor\",\n    interval=5,\n    name=\"/Common/test-postgresql-monitor\",\n    parent=\"/Common/postgresql\",\n    password=\"abcd1234\",\n    receive=\"Test\",\n    send=\"SELECT 'Test';\",\n    timeout=16,\n    username=\"abcd\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var monitor = new F5BigIP.Ltm.Monitor(\"monitor\", new F5BigIP.Ltm.MonitorArgs\n        {\n            Destination = \"1.2.3.4:1234\",\n            Interval = 999,\n            Name = \"/Common/terraform_monitor\",\n            Parent = \"/Common/http\",\n            Send = @\"GET /some/path\r\n\n\",\n            Timeout = 999,\n        });\n        var test_ftp_monitor = new F5BigIP.Ltm.Monitor(\"test-ftp-monitor\", new F5BigIP.Ltm.MonitorArgs\n        {\n            Destination = \"*:8008\",\n            Filename = \"somefile\",\n            Interval = 5,\n            Name = \"/Common/ftp-test\",\n            Parent = \"/Common/ftp\",\n            TimeUntilUp = 0,\n            Timeout = 16,\n        });\n        var test_postgresql_monitor = new F5BigIP.Ltm.Monitor(\"test-postgresql-monitor\", new F5BigIP.Ltm.MonitorArgs\n        {\n            Interval = 5,\n            Name = \"/Common/test-postgresql-monitor\",\n            Parent = \"/Common/postgresql\",\n            Password = \"abcd1234\",\n            Receive = \"Test\",\n            Send = \"SELECT 'Test';\",\n            Timeout = 16,\n            Username = \"abcd\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewMonitor(ctx, \"monitor\", \u0026ltm.MonitorArgs{\n\t\t\tDestination: pulumi.String(\"1.2.3.4:1234\"),\n\t\t\tInterval:    pulumi.Int(999),\n\t\t\tName:        pulumi.String(\"/Common/terraform_monitor\"),\n\t\t\tParent:      pulumi.String(\"/Common/http\"),\n\t\t\tSend: pulumi.String(fmt.Sprintf(\"%v%v\", \"GET /some/path\r\\n\", \"\\n\")),\n\t\t\tTimeout: pulumi.Int(999),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewMonitor(ctx, \"test_ftp_monitor\", \u0026ltm.MonitorArgs{\n\t\t\tDestination: pulumi.String(\"*:8008\"),\n\t\t\tFilename:    pulumi.String(\"somefile\"),\n\t\t\tInterval:    pulumi.Int(5),\n\t\t\tName:        pulumi.String(\"/Common/ftp-test\"),\n\t\t\tParent:      pulumi.String(\"/Common/ftp\"),\n\t\t\tTimeUntilUp: pulumi.Int(0),\n\t\t\tTimeout:     pulumi.Int(16),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewMonitor(ctx, \"test_postgresql_monitor\", \u0026ltm.MonitorArgs{\n\t\t\tInterval: pulumi.Int(5),\n\t\t\tName:     pulumi.String(\"/Common/test-postgresql-monitor\"),\n\t\t\tParent:   pulumi.String(\"/Common/postgresql\"),\n\t\t\tPassword: pulumi.String(\"abcd1234\"),\n\t\t\tReceive:  pulumi.String(\"Test\"),\n\t\t\tSend:     pulumi.String(\"SELECT 'Test';\"),\n\t\t\tTimeout:  pulumi.Int(16),\n\t\t\tUsername: pulumi.String(\"abcd\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "adaptive": {
                    "type": "string",
                    "description": "Specifies whether adaptive response time monitoring is enabled for this monitor. The default is `disabled`.\n"
                },
                "adaptiveLimit": {
                    "type": "integer",
                    "description": "Specifies the absolute number of milliseconds that may not be exceeded by a monitor probe, regardless of Allowed Divergence.\n"
                },
                "compatibility": {
                    "type": "string",
                    "description": "Specifies, when enabled, that the SSL options setting (in OpenSSL) is set to ALL. Accepts 'enabled' or 'disabled' values, the default value is 'enabled'.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Specifies the database in which the user is created\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Specify an alias address for monitoring\n"
                },
                "filename": {
                    "type": "string",
                    "description": "Specifies the full path and file name of the file that the system attempts to download. The health check is successful if the system can download the file.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown. The default is `5`\n"
                },
                "ipDscp": {
                    "type": "integer",
                    "description": "Displays the differentiated services code point (DSCP).The default is `0 (zero)`.\n"
                },
                "manualResume": {
                    "type": "string",
                    "description": "Specifies whether the system automatically changes the status of a resource to Enabled at the next successful monitor check.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies the data transfer process (DTP) mode. The default value is passive. The options are passive (Specifies that the monitor sends a data transfer request to the FTP server. When the FTP server receives the request, the FTP server then initiates and establishes the data connection.) and active (Specifies that the monitor initiates and establishes the data connection with the FTP server.).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the Name of the LTM Monitor.Name of Monitor should be full path,full path is the combination of the `partition + monitor name`,For ex:`/Common/test-ltm-monitor`.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "Parent monitor for the system to use for setting initial values for the new monitor.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password if the monitored target requires authentication\n"
                },
                "receive": {
                    "type": "string",
                    "description": "Specifies the regular expression representing the text string that the monitor looks for in the returned resource.\n"
                },
                "receiveDisable": {
                    "type": "string",
                    "description": "The system marks the node or pool member disabled when its response matches Receive Disable String but not Receive String.\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "Instructs the system to mark the target resource down when the test is successful.\n"
                },
                "send": {
                    "type": "string",
                    "description": "Specifies the text string that the monitor sends to the target object.\n"
                },
                "timeUntilUp": {
                    "type": "integer",
                    "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to up.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds the target has in which to respond to the monitor request. The default is `16` seconds\n"
                },
                "transparent": {
                    "type": "string",
                    "description": "Specifies whether the monitor operates in transparent mode.\n"
                },
                "upInterval": {
                    "type": "integer",
                    "description": "Specifies the interval for the system to use to perform the health check when a resource is up. The default is `0(Disabled)`\n"
                },
                "username": {
                    "type": "string",
                    "description": "Specifies the user name if the monitored target requires authentication\n"
                }
            },
            "required": [
                "adaptive",
                "adaptiveLimit",
                "destination",
                "interval",
                "ipDscp",
                "manualResume",
                "mode",
                "name",
                "parent",
                "reverse",
                "send",
                "timeUntilUp",
                "timeout",
                "transparent",
                "upInterval"
            ],
            "inputProperties": {
                "adaptive": {
                    "type": "string",
                    "description": "Specifies whether adaptive response time monitoring is enabled for this monitor. The default is `disabled`.\n"
                },
                "adaptiveLimit": {
                    "type": "integer",
                    "description": "Specifies the absolute number of milliseconds that may not be exceeded by a monitor probe, regardless of Allowed Divergence.\n"
                },
                "compatibility": {
                    "type": "string",
                    "description": "Specifies, when enabled, that the SSL options setting (in OpenSSL) is set to ALL. Accepts 'enabled' or 'disabled' values, the default value is 'enabled'.\n"
                },
                "database": {
                    "type": "string",
                    "description": "Specifies the database in which the user is created\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Specify an alias address for monitoring\n"
                },
                "filename": {
                    "type": "string",
                    "description": "Specifies the full path and file name of the file that the system attempts to download. The health check is successful if the system can download the file.\n"
                },
                "interval": {
                    "type": "integer",
                    "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown. The default is `5`\n"
                },
                "ipDscp": {
                    "type": "integer",
                    "description": "Displays the differentiated services code point (DSCP).The default is `0 (zero)`.\n"
                },
                "manualResume": {
                    "type": "string",
                    "description": "Specifies whether the system automatically changes the status of a resource to Enabled at the next successful monitor check.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Specifies the data transfer process (DTP) mode. The default value is passive. The options are passive (Specifies that the monitor sends a data transfer request to the FTP server. When the FTP server receives the request, the FTP server then initiates and establishes the data connection.) and active (Specifies that the monitor initiates and establishes the data connection with the FTP server.).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the Name of the LTM Monitor.Name of Monitor should be full path,full path is the combination of the `partition + monitor name`,For ex:`/Common/test-ltm-monitor`.\n"
                },
                "parent": {
                    "type": "string",
                    "description": "Parent monitor for the system to use for setting initial values for the new monitor.\n"
                },
                "password": {
                    "type": "string",
                    "description": "Specifies the password if the monitored target requires authentication\n"
                },
                "receive": {
                    "type": "string",
                    "description": "Specifies the regular expression representing the text string that the monitor looks for in the returned resource.\n"
                },
                "receiveDisable": {
                    "type": "string",
                    "description": "The system marks the node or pool member disabled when its response matches Receive Disable String but not Receive String.\n"
                },
                "reverse": {
                    "type": "string",
                    "description": "Instructs the system to mark the target resource down when the test is successful.\n"
                },
                "send": {
                    "type": "string",
                    "description": "Specifies the text string that the monitor sends to the target object.\n"
                },
                "timeUntilUp": {
                    "type": "integer",
                    "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to up.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds the target has in which to respond to the monitor request. The default is `16` seconds\n"
                },
                "transparent": {
                    "type": "string",
                    "description": "Specifies whether the monitor operates in transparent mode.\n"
                },
                "upInterval": {
                    "type": "integer",
                    "description": "Specifies the interval for the system to use to perform the health check when a resource is up. The default is `0(Disabled)`\n"
                },
                "username": {
                    "type": "string",
                    "description": "Specifies the user name if the monitored target requires authentication\n"
                }
            },
            "requiredInputs": [
                "name",
                "parent"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Monitor resources.\n",
                "properties": {
                    "adaptive": {
                        "type": "string",
                        "description": "Specifies whether adaptive response time monitoring is enabled for this monitor. The default is `disabled`.\n"
                    },
                    "adaptiveLimit": {
                        "type": "integer",
                        "description": "Specifies the absolute number of milliseconds that may not be exceeded by a monitor probe, regardless of Allowed Divergence.\n"
                    },
                    "compatibility": {
                        "type": "string",
                        "description": "Specifies, when enabled, that the SSL options setting (in OpenSSL) is set to ALL. Accepts 'enabled' or 'disabled' values, the default value is 'enabled'.\n"
                    },
                    "database": {
                        "type": "string",
                        "description": "Specifies the database in which the user is created\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Specify an alias address for monitoring\n"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Specifies the full path and file name of the file that the system attempts to download. The health check is successful if the system can download the file.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown. The default is `5`\n"
                    },
                    "ipDscp": {
                        "type": "integer",
                        "description": "Displays the differentiated services code point (DSCP).The default is `0 (zero)`.\n"
                    },
                    "manualResume": {
                        "type": "string",
                        "description": "Specifies whether the system automatically changes the status of a resource to Enabled at the next successful monitor check.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "Specifies the data transfer process (DTP) mode. The default value is passive. The options are passive (Specifies that the monitor sends a data transfer request to the FTP server. When the FTP server receives the request, the FTP server then initiates and establishes the data connection.) and active (Specifies that the monitor initiates and establishes the data connection with the FTP server.).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the Name of the LTM Monitor.Name of Monitor should be full path,full path is the combination of the `partition + monitor name`,For ex:`/Common/test-ltm-monitor`.\n"
                    },
                    "parent": {
                        "type": "string",
                        "description": "Parent monitor for the system to use for setting initial values for the new monitor.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "Specifies the password if the monitored target requires authentication\n"
                    },
                    "receive": {
                        "type": "string",
                        "description": "Specifies the regular expression representing the text string that the monitor looks for in the returned resource.\n"
                    },
                    "receiveDisable": {
                        "type": "string",
                        "description": "The system marks the node or pool member disabled when its response matches Receive Disable String but not Receive String.\n"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "Instructs the system to mark the target resource down when the test is successful.\n"
                    },
                    "send": {
                        "type": "string",
                        "description": "Specifies the text string that the monitor sends to the target object.\n"
                    },
                    "timeUntilUp": {
                        "type": "integer",
                        "description": "Specifies the number of seconds to wait after a resource first responds correctly to the monitor before setting the resource to up.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Specifies the number of seconds the target has in which to respond to the monitor request. The default is `16` seconds\n"
                    },
                    "transparent": {
                        "type": "string",
                        "description": "Specifies whether the monitor operates in transparent mode.\n"
                    },
                    "upInterval": {
                        "type": "integer",
                        "description": "Specifies the interval for the system to use to perform the health check when a resource is up. The default is `0(Disabled)`\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "Specifies the user name if the monitored target requires authentication\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/node:Node": {
            "description": "`f5bigip.ltm.Node` Manages a node configuration\n\nFor resources should be named with their \"full path\".The full path is the combination of the partition + name of the resource( example: /Common/my-node ) or partition + Direcroty + nameof the resource ( example: /Common/test/my-node ).When including directory in fullpath we have to make sure it is created in the given partition before using it.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst node = new f5bigip.ltm.Node(\"node\", {\n    address: \"192.168.30.1\",\n    connectionLimit: 0,\n    description: \"Test-Node\",\n    dynamicRatio: 1,\n    fqdn: {\n        addressFamily: \"ipv4\",\n        interval: \"3000\",\n    },\n    monitor: \"/Common/icmp\",\n    name: \"/Common/terraform_node1\",\n    rateLimit: \"disabled\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nnode = f5bigip.ltm.Node(\"node\",\n    address=\"192.168.30.1\",\n    connection_limit=0,\n    description=\"Test-Node\",\n    dynamic_ratio=1,\n    fqdn=f5bigip.ltm.NodeFqdnArgs(\n        address_family=\"ipv4\",\n        interval=\"3000\",\n    ),\n    monitor=\"/Common/icmp\",\n    name=\"/Common/terraform_node1\",\n    rate_limit=\"disabled\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var node = new F5BigIP.Ltm.Node(\"node\", new F5BigIP.Ltm.NodeArgs\n        {\n            Address = \"192.168.30.1\",\n            ConnectionLimit = 0,\n            Description = \"Test-Node\",\n            DynamicRatio = 1,\n            Fqdn = new F5BigIP.Ltm.Inputs.NodeFqdnArgs\n            {\n                AddressFamily = \"ipv4\",\n                Interval = \"3000\",\n            },\n            Monitor = \"/Common/icmp\",\n            Name = \"/Common/terraform_node1\",\n            RateLimit = \"disabled\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewNode(ctx, \"node\", \u0026ltm.NodeArgs{\n\t\t\tAddress:         pulumi.String(\"192.168.30.1\"),\n\t\t\tConnectionLimit: pulumi.Int(0),\n\t\t\tDescription:     pulumi.String(\"Test-Node\"),\n\t\t\tDynamicRatio:    pulumi.Int(1),\n\t\t\tFqdn: \u0026ltm.NodeFqdnArgs{\n\t\t\t\tAddressFamily: pulumi.String(\"ipv4\"),\n\t\t\t\tInterval:      pulumi.String(\"3000\"),\n\t\t\t},\n\t\t\tMonitor:   pulumi.String(\"/Common/icmp\"),\n\t\t\tName:      pulumi.String(\"/Common/terraform_node1\"),\n\t\t\tRateLimit: pulumi.String(\"disabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "IP or hostname of the node\n"
                },
                "connectionLimit": {
                    "type": "integer",
                    "description": "Specifies the maximum number of connections allowed for the node or node address.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User-defined description give ltm_node\n"
                },
                "dynamicRatio": {
                    "type": "integer",
                    "description": "Specifies the fixed ratio value used for a node during ratio load balancing.\n"
                },
                "fqdn": {
                    "$ref": "#/types/f5bigip:ltm/NodeFqdn:NodeFqdn"
                },
                "monitor": {
                    "type": "string",
                    "description": "specifies the name of the monitor or monitor rule that you want to associate with the node.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node\n"
                },
                "rateLimit": {
                    "type": "string",
                    "description": "Specifies the maximum number of connections per second allowed for a node or node address. The default value is 'disabled'.\n"
                },
                "ratio": {
                    "type": "integer",
                    "description": "Sets the ratio number for the node.\n"
                },
                "session": {
                    "type": "string",
                    "description": "Enables or disables the node for new sessions. The default value is user-enabled.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Default is \"user-up\" you can set to \"user-down\" if you want to disable\n"
                }
            },
            "required": [
                "address",
                "connectionLimit",
                "dynamicRatio",
                "name",
                "rateLimit",
                "ratio",
                "session"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "IP or hostname of the node\n"
                },
                "connectionLimit": {
                    "type": "integer",
                    "description": "Specifies the maximum number of connections allowed for the node or node address.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User-defined description give ltm_node\n"
                },
                "dynamicRatio": {
                    "type": "integer",
                    "description": "Specifies the fixed ratio value used for a node during ratio load balancing.\n"
                },
                "fqdn": {
                    "$ref": "#/types/f5bigip:ltm/NodeFqdn:NodeFqdn"
                },
                "monitor": {
                    "type": "string",
                    "description": "specifies the name of the monitor or monitor rule that you want to associate with the node.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the node\n"
                },
                "rateLimit": {
                    "type": "string",
                    "description": "Specifies the maximum number of connections per second allowed for a node or node address. The default value is 'disabled'.\n"
                },
                "ratio": {
                    "type": "integer",
                    "description": "Sets the ratio number for the node.\n"
                },
                "session": {
                    "type": "string",
                    "description": "Enables or disables the node for new sessions. The default value is user-enabled.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Default is \"user-up\" you can set to \"user-down\" if you want to disable\n"
                }
            },
            "requiredInputs": [
                "address",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Node resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "IP or hostname of the node\n"
                    },
                    "connectionLimit": {
                        "type": "integer",
                        "description": "Specifies the maximum number of connections allowed for the node or node address.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User-defined description give ltm_node\n"
                    },
                    "dynamicRatio": {
                        "type": "integer",
                        "description": "Specifies the fixed ratio value used for a node during ratio load balancing.\n"
                    },
                    "fqdn": {
                        "$ref": "#/types/f5bigip:ltm/NodeFqdn:NodeFqdn"
                    },
                    "monitor": {
                        "type": "string",
                        "description": "specifies the name of the monitor or monitor rule that you want to associate with the node.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the node\n"
                    },
                    "rateLimit": {
                        "type": "string",
                        "description": "Specifies the maximum number of connections per second allowed for a node or node address. The default value is 'disabled'.\n"
                    },
                    "ratio": {
                        "type": "integer",
                        "description": "Sets the ratio number for the node.\n"
                    },
                    "session": {
                        "type": "string",
                        "description": "Enables or disables the node for new sessions. The default value is user-enabled.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Default is \"user-up\" you can set to \"user-down\" if you want to disable\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/persistenceProfileCookie:PersistenceProfileCookie": {
            "description": "Configures a cookie persistence profile\n\n## Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst testPpcookie = new f5bigip.ltm.PersistenceProfileCookie(\"testPpcookie\", {\n    name: \"/Common/terraform_cookie\",\n    defaultsFrom: \"/Common/cookie\",\n    matchAcrossPools: \"enabled\",\n    matchAcrossServices: \"enabled\",\n    matchAcrossVirtuals: \"enabled\",\n    timeout: 3600,\n    overrideConnLimit: \"enabled\",\n    alwaysSend: \"enabled\",\n    cookieEncryption: \"required\",\n    cookieEncryptionPassphrase: \"iam\",\n    cookieName: \"ham\",\n    expiration: \"1:0:0\",\n    hashLength: 0,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_ppcookie = f5bigip.ltm.PersistenceProfileCookie(\"testPpcookie\",\n    name=\"/Common/terraform_cookie\",\n    defaults_from=\"/Common/cookie\",\n    match_across_pools=\"enabled\",\n    match_across_services=\"enabled\",\n    match_across_virtuals=\"enabled\",\n    timeout=3600,\n    override_conn_limit=\"enabled\",\n    always_send=\"enabled\",\n    cookie_encryption=\"required\",\n    cookie_encryption_passphrase=\"iam\",\n    cookie_name=\"ham\",\n    expiration=\"1:0:0\",\n    hash_length=0)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var testPpcookie = new F5BigIP.Ltm.PersistenceProfileCookie(\"testPpcookie\", new F5BigIP.Ltm.PersistenceProfileCookieArgs\n        {\n            Name = \"/Common/terraform_cookie\",\n            DefaultsFrom = \"/Common/cookie\",\n            MatchAcrossPools = \"enabled\",\n            MatchAcrossServices = \"enabled\",\n            MatchAcrossVirtuals = \"enabled\",\n            Timeout = 3600,\n            OverrideConnLimit = \"enabled\",\n            AlwaysSend = \"enabled\",\n            CookieEncryption = \"required\",\n            CookieEncryptionPassphrase = \"iam\",\n            CookieName = \"ham\",\n            Expiration = \"1:0:0\",\n            HashLength = 0,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewPersistenceProfileCookie(ctx, \"testPpcookie\", \u0026ltm.PersistenceProfileCookieArgs{\n\t\t\tName:                       pulumi.String(\"/Common/terraform_cookie\"),\n\t\t\tDefaultsFrom:               pulumi.String(\"/Common/cookie\"),\n\t\t\tMatchAcrossPools:           pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossServices:        pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossVirtuals:        pulumi.String(\"enabled\"),\n\t\t\tTimeout:                    pulumi.Int(3600),\n\t\t\tOverrideConnLimit:          pulumi.String(\"enabled\"),\n\t\t\tAlwaysSend:                 pulumi.String(\"enabled\"),\n\t\t\tCookieEncryption:           pulumi.String(\"required\"),\n\t\t\tCookieEncryptionPassphrase: pulumi.String(\"iam\"),\n\t\t\tCookieName:                 pulumi.String(\"ham\"),\n\t\t\tExpiration:                 pulumi.String(\"1:0:0\"),\n\t\t\tHashLength:                 pulumi.Int(0),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n## Reference\n\n`name` - (Required) Name of the virtual address\n\n`defaults_from` - (Required) Parent cookie persistence profile\n\n`match_across_pools` (Optional) (enabled or disabled) match across pools with given persistence record\n\n`match_across_services` (Optional) (enabled or disabled) match across services with given persistence record\n\n`match_across_virtuals` (Optional) (enabled or disabled) match across virtual servers with given persistence record\n\n`method` (Optional) Specifies the type of cookie processing that the system uses. The default value is insert\n\n`mirror` (Optional) (enabled or disabled) mirror persistence record\n\n`timeout` (Optional) (enabled or disabled) Timeout for persistence of the session in seconds\n\n`override_conn_limit` (Optional) (enabled or disabled) Enable or dissable pool member connection limits are overridden for persisted clients. Per-virtual connection limits remain hard limits and are not overridden.\n\n`always_send` (Optional) (enabled or disabled) always send cookies\n\n`cookie_encryption` (Optional) (required, preferred, or disabled) To required, preferred, or disabled policy for cookie encryption\n\n`cookie_encryption_passphrase` (Optional) (required, preferred, or disabled) Passphrase for encrypted cookies. The field is encrypted on the server and will always return differently then set.\nIf this is configured specify `ignore_changes` under the `lifecycle` block to ignore returned encrypted value.\n\n`cookie_name` (Optional) Name of the cookie to track persistence\n\n`expiration` (Optional) Expiration TTL for cookie specified in DAY:HOUR:MIN:SECONDS (Examples: 1:0:0:0 one day, 1:0:0 one hour, 30:0 thirty minutes)\n\n`hash_length` (Optional) (Integer) Length of hash to apply to cookie\n\n`hash_offset` (Optional) (Integer) Number of characters to skip in the cookie for the hash\n\n`httponly` (Optional) (enabled or disabled) Sending only over http\n",
            "properties": {
                "alwaysSend": {
                    "type": "string",
                    "description": "To enable _ disable always sending cookies\n"
                },
                "appService": {
                    "type": "string"
                },
                "cookieEncryption": {
                    "type": "string",
                    "description": "To required, preferred, or disabled policy for cookie encryption\n"
                },
                "cookieEncryptionPassphrase": {
                    "type": "string",
                    "description": "Passphrase for encrypted cookies\n"
                },
                "cookieName": {
                    "type": "string",
                    "description": "Name of the cookie to track persistence\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "expiration": {
                    "type": "string",
                    "description": "Expiration TTL for cookie specified in D:H:M:S or in seconds\n"
                },
                "hashLength": {
                    "type": "integer",
                    "description": "Length of hash to apply to cookie\n"
                },
                "hashOffset": {
                    "type": "integer",
                    "description": "Number of characters to skip in the cookie for the hash\n"
                },
                "httponly": {
                    "type": "string",
                    "description": "To enable _ disable sending only over http\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across virtual servers with given persistence record\n"
                },
                "method": {
                    "type": "string",
                    "description": "Specifies the type of cookie processing that the system uses\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "required": [
                "alwaysSend",
                "appService",
                "cookieEncryption",
                "cookieEncryptionPassphrase",
                "cookieName",
                "defaultsFrom",
                "expiration",
                "hashLength",
                "hashOffset",
                "httponly",
                "matchAcrossPools",
                "matchAcrossServices",
                "matchAcrossVirtuals",
                "method",
                "mirror",
                "name",
                "overrideConnLimit",
                "timeout"
            ],
            "inputProperties": {
                "alwaysSend": {
                    "type": "string",
                    "description": "To enable _ disable always sending cookies\n"
                },
                "appService": {
                    "type": "string"
                },
                "cookieEncryption": {
                    "type": "string",
                    "description": "To required, preferred, or disabled policy for cookie encryption\n"
                },
                "cookieEncryptionPassphrase": {
                    "type": "string",
                    "description": "Passphrase for encrypted cookies\n"
                },
                "cookieName": {
                    "type": "string",
                    "description": "Name of the cookie to track persistence\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "expiration": {
                    "type": "string",
                    "description": "Expiration TTL for cookie specified in D:H:M:S or in seconds\n"
                },
                "hashLength": {
                    "type": "integer",
                    "description": "Length of hash to apply to cookie\n"
                },
                "hashOffset": {
                    "type": "integer",
                    "description": "Number of characters to skip in the cookie for the hash\n"
                },
                "httponly": {
                    "type": "string",
                    "description": "To enable _ disable sending only over http\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across virtual servers with given persistence record\n"
                },
                "method": {
                    "type": "string",
                    "description": "Specifies the type of cookie processing that the system uses\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "requiredInputs": [
                "defaultsFrom",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PersistenceProfileCookie resources.\n",
                "properties": {
                    "alwaysSend": {
                        "type": "string",
                        "description": "To enable _ disable always sending cookies\n"
                    },
                    "appService": {
                        "type": "string"
                    },
                    "cookieEncryption": {
                        "type": "string",
                        "description": "To required, preferred, or disabled policy for cookie encryption\n"
                    },
                    "cookieEncryptionPassphrase": {
                        "type": "string",
                        "description": "Passphrase for encrypted cookies\n"
                    },
                    "cookieName": {
                        "type": "string",
                        "description": "Name of the cookie to track persistence\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Inherit defaults from parent profile\n"
                    },
                    "expiration": {
                        "type": "string",
                        "description": "Expiration TTL for cookie specified in D:H:M:S or in seconds\n"
                    },
                    "hashLength": {
                        "type": "integer",
                        "description": "Length of hash to apply to cookie\n"
                    },
                    "hashOffset": {
                        "type": "integer",
                        "description": "Number of characters to skip in the cookie for the hash\n"
                    },
                    "httponly": {
                        "type": "string",
                        "description": "To enable _ disable sending only over http\n"
                    },
                    "matchAcrossPools": {
                        "type": "string",
                        "description": "To enable _ disable match across pools with given persistence record\n"
                    },
                    "matchAcrossServices": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "matchAcrossVirtuals": {
                        "type": "string",
                        "description": "To enable _ disable match across virtual servers with given persistence record\n"
                    },
                    "method": {
                        "type": "string",
                        "description": "Specifies the type of cookie processing that the system uses\n"
                    },
                    "mirror": {
                        "type": "string",
                        "description": "To enable _ disable\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the persistence profile\n"
                    },
                    "overrideConnLimit": {
                        "type": "string",
                        "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Timeout for persistence of the session\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/persistenceProfileDstAddr:PersistenceProfileDstAddr": {
            "description": "Configures a cookie persistence profile\n\n## Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst dstaddr = new f5bigip.ltm.PersistenceProfileDstAddr(\"dstaddr\", {\n    defaultsFrom: \"/Common/dest_addr\",\n    hashAlgorithm: \"carp\",\n    mask: \"255.255.255.255\",\n    matchAcrossPools: \"enabled\",\n    matchAcrossServices: \"enabled\",\n    matchAcrossVirtuals: \"enabled\",\n    mirror: \"enabled\",\n    name: \"/Common/terraform_ppdstaddr\",\n    overrideConnLimit: \"enabled\",\n    timeout: 3600,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ndstaddr = f5bigip.ltm.PersistenceProfileDstAddr(\"dstaddr\",\n    defaults_from=\"/Common/dest_addr\",\n    hash_algorithm=\"carp\",\n    mask=\"255.255.255.255\",\n    match_across_pools=\"enabled\",\n    match_across_services=\"enabled\",\n    match_across_virtuals=\"enabled\",\n    mirror=\"enabled\",\n    name=\"/Common/terraform_ppdstaddr\",\n    override_conn_limit=\"enabled\",\n    timeout=3600)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var dstaddr = new F5BigIP.Ltm.PersistenceProfileDstAddr(\"dstaddr\", new F5BigIP.Ltm.PersistenceProfileDstAddrArgs\n        {\n            DefaultsFrom = \"/Common/dest_addr\",\n            HashAlgorithm = \"carp\",\n            Mask = \"255.255.255.255\",\n            MatchAcrossPools = \"enabled\",\n            MatchAcrossServices = \"enabled\",\n            MatchAcrossVirtuals = \"enabled\",\n            Mirror = \"enabled\",\n            Name = \"/Common/terraform_ppdstaddr\",\n            OverrideConnLimit = \"enabled\",\n            Timeout = 3600,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewPersistenceProfileDstAddr(ctx, \"dstaddr\", \u0026ltm.PersistenceProfileDstAddrArgs{\n\t\t\tDefaultsFrom:        pulumi.String(\"/Common/dest_addr\"),\n\t\t\tHashAlgorithm:       pulumi.String(\"carp\"),\n\t\t\tMask:                pulumi.String(\"255.255.255.255\"),\n\t\t\tMatchAcrossPools:    pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossServices: pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossVirtuals: pulumi.String(\"enabled\"),\n\t\t\tMirror:              pulumi.String(\"enabled\"),\n\t\t\tName:                pulumi.String(\"/Common/terraform_ppdstaddr\"),\n\t\t\tOverrideConnLimit:   pulumi.String(\"enabled\"),\n\t\t\tTimeout:             pulumi.Int(3600),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n## Reference\n\n`name` - (Required) Name of the virtual address\n\n`defaults_from` - (Optional) Specifies the existing profile from which the system imports settings for the new profile.\n\n`match_across_pools` (Optional) (enabled or disabled) match across pools with given persistence record\n\n`match_across_services` (Optional) (enabled or disabled) match across services with given persistence record\n\n`match_across_virtuals` (Optional) (enabled or disabled) match across virtual servers with given persistence record\n\n`mirror` (Optional) (enabled or disabled) mirror persistence record\n\n`timeout` (Optional) (enabled or disabled) Timeout for persistence of the session in seconds\n\n`override_conn_limit` (Optional) (enabled or disabled) Enable or dissable pool member connection limits are overridden for persisted clients. Per-virtual connection limits remain hard limits and are not overridden.\n",
            "properties": {
                "appService": {
                    "type": "string"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "hashAlgorithm": {
                    "type": "string",
                    "description": "Specify the hash algorithm\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Identify a range of source IP addresses to manage together as a single source address affinity persistent connection\nwhen connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "required": [
                "appService",
                "defaultsFrom",
                "hashAlgorithm",
                "mask",
                "matchAcrossPools",
                "matchAcrossServices",
                "matchAcrossVirtuals",
                "mirror",
                "name",
                "overrideConnLimit",
                "timeout"
            ],
            "inputProperties": {
                "appService": {
                    "type": "string"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "hashAlgorithm": {
                    "type": "string",
                    "description": "Specify the hash algorithm\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Identify a range of source IP addresses to manage together as a single source address affinity persistent connection\nwhen connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "requiredInputs": [
                "defaultsFrom",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PersistenceProfileDstAddr resources.\n",
                "properties": {
                    "appService": {
                        "type": "string"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Inherit defaults from parent profile\n"
                    },
                    "hashAlgorithm": {
                        "type": "string",
                        "description": "Specify the hash algorithm\n"
                    },
                    "mask": {
                        "type": "string",
                        "description": "Identify a range of source IP addresses to manage together as a single source address affinity persistent connection\nwhen connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n"
                    },
                    "matchAcrossPools": {
                        "type": "string",
                        "description": "To enable _ disable match across pools with given persistence record\n"
                    },
                    "matchAcrossServices": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "matchAcrossVirtuals": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "mirror": {
                        "type": "string",
                        "description": "To enable _ disable\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the persistence profile\n"
                    },
                    "overrideConnLimit": {
                        "type": "string",
                        "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Timeout for persistence of the session\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/persistenceProfileSrcAddr:PersistenceProfileSrcAddr": {
            "description": "Configures a source address persistence profile\n\n## Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst srcaddr = new f5bigip.ltm.PersistenceProfileSrcAddr(\"srcaddr\", {\n    defaultsFrom: \"/Common/source_addr\",\n    hashAlgorithm: \"carp\",\n    mapProxies: \"enabled\",\n    mask: \"255.255.255.255\",\n    matchAcrossPools: \"enabled\",\n    matchAcrossServices: \"enabled\",\n    matchAcrossVirtuals: \"enabled\",\n    mirror: \"enabled\",\n    name: \"/Common/terraform_srcaddr\",\n    overrideConnLimit: \"enabled\",\n    timeout: 3600,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsrcaddr = f5bigip.ltm.PersistenceProfileSrcAddr(\"srcaddr\",\n    defaults_from=\"/Common/source_addr\",\n    hash_algorithm=\"carp\",\n    map_proxies=\"enabled\",\n    mask=\"255.255.255.255\",\n    match_across_pools=\"enabled\",\n    match_across_services=\"enabled\",\n    match_across_virtuals=\"enabled\",\n    mirror=\"enabled\",\n    name=\"/Common/terraform_srcaddr\",\n    override_conn_limit=\"enabled\",\n    timeout=3600)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var srcaddr = new F5BigIP.Ltm.PersistenceProfileSrcAddr(\"srcaddr\", new F5BigIP.Ltm.PersistenceProfileSrcAddrArgs\n        {\n            DefaultsFrom = \"/Common/source_addr\",\n            HashAlgorithm = \"carp\",\n            MapProxies = \"enabled\",\n            Mask = \"255.255.255.255\",\n            MatchAcrossPools = \"enabled\",\n            MatchAcrossServices = \"enabled\",\n            MatchAcrossVirtuals = \"enabled\",\n            Mirror = \"enabled\",\n            Name = \"/Common/terraform_srcaddr\",\n            OverrideConnLimit = \"enabled\",\n            Timeout = 3600,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewPersistenceProfileSrcAddr(ctx, \"srcaddr\", \u0026ltm.PersistenceProfileSrcAddrArgs{\n\t\t\tDefaultsFrom:        pulumi.String(\"/Common/source_addr\"),\n\t\t\tHashAlgorithm:       pulumi.String(\"carp\"),\n\t\t\tMapProxies:          pulumi.String(\"enabled\"),\n\t\t\tMask:                pulumi.String(\"255.255.255.255\"),\n\t\t\tMatchAcrossPools:    pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossServices: pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossVirtuals: pulumi.String(\"enabled\"),\n\t\t\tMirror:              pulumi.String(\"enabled\"),\n\t\t\tName:                pulumi.String(\"/Common/terraform_srcaddr\"),\n\t\t\tOverrideConnLimit:   pulumi.String(\"enabled\"),\n\t\t\tTimeout:             pulumi.Int(3600),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n## Reference\n\n`name` - (Required) Name of the virtual address\n\n`defaults_from` - (Required) Parent cookie persistence profile\n\n`match_across_pools` (Optional) (enabled or disabled) match across pools with given persistence record\n\n`match_across_services` (Optional) (enabled or disabled) match across services with given persistence record\n\n`match_across_virtuals` (Optional) (enabled or disabled) match across virtual servers with given persistence record\n\n`mirror` (Optional) (enabled or disabled) mirror persistence record\n\n`timeout` (Optional) (enabled or disabled) Timeout for persistence of the session in seconds\n\n`override_conn_limit` (Optional) (enabled or disabled) Enable or dissable pool member connection limits are overridden for persisted clients. Per-virtual connection limits remain hard limits and are not overridden.\n\n`hash_algorithm` (Optional) Specify the hash algorithm\n\n`mask` (Optional) Identify a range of source IP addresses to manage together as a single source address affinity persistent connection when connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n\n`map_proxies` (Optional) (enabled or disabled) Directs all to the same single pool member\n",
            "properties": {
                "appService": {
                    "type": "string"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "hashAlgorithm": {
                    "type": "string",
                    "description": "Specify the hash algorithm\n"
                },
                "mapProxies": {
                    "type": "string",
                    "description": "To enable _ disable directs all to the same single pool member\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Identify a range of source IP addresses to manage together as a single source address affinity persistent connection\nwhen connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "required": [
                "appService",
                "defaultsFrom",
                "hashAlgorithm",
                "mapProxies",
                "mask",
                "matchAcrossPools",
                "matchAcrossServices",
                "matchAcrossVirtuals",
                "mirror",
                "name",
                "overrideConnLimit",
                "timeout"
            ],
            "inputProperties": {
                "appService": {
                    "type": "string"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "hashAlgorithm": {
                    "type": "string",
                    "description": "Specify the hash algorithm\n"
                },
                "mapProxies": {
                    "type": "string",
                    "description": "To enable _ disable directs all to the same single pool member\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Identify a range of source IP addresses to manage together as a single source address affinity persistent connection\nwhen connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "requiredInputs": [
                "defaultsFrom",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PersistenceProfileSrcAddr resources.\n",
                "properties": {
                    "appService": {
                        "type": "string"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Inherit defaults from parent profile\n"
                    },
                    "hashAlgorithm": {
                        "type": "string",
                        "description": "Specify the hash algorithm\n"
                    },
                    "mapProxies": {
                        "type": "string",
                        "description": "To enable _ disable directs all to the same single pool member\n"
                    },
                    "mask": {
                        "type": "string",
                        "description": "Identify a range of source IP addresses to manage together as a single source address affinity persistent connection\nwhen connecting to the pool. Must be a valid IPv4 or IPv6 mask.\n"
                    },
                    "matchAcrossPools": {
                        "type": "string",
                        "description": "To enable _ disable match across pools with given persistence record\n"
                    },
                    "matchAcrossServices": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "matchAcrossVirtuals": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "mirror": {
                        "type": "string",
                        "description": "To enable _ disable\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the persistence profile\n"
                    },
                    "overrideConnLimit": {
                        "type": "string",
                        "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Timeout for persistence of the session\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/persistenceProfileSsl:PersistenceProfileSsl": {
            "description": "Configures an SSL persistence profile\n\n## Example\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst ppssl = new f5bigip.ltm.PersistenceProfileSsl(\"ppssl\", {\n    defaultsFrom: \"/Common/ssl\",\n    matchAcrossPools: \"enabled\",\n    matchAcrossServices: \"enabled\",\n    matchAcrossVirtuals: \"enabled\",\n    mirror: \"enabled\",\n    name: \"/Common/terraform_ssl\",\n    overrideConnLimit: \"enabled\",\n    timeout: 3600,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nppssl = f5bigip.ltm.PersistenceProfileSsl(\"ppssl\",\n    defaults_from=\"/Common/ssl\",\n    match_across_pools=\"enabled\",\n    match_across_services=\"enabled\",\n    match_across_virtuals=\"enabled\",\n    mirror=\"enabled\",\n    name=\"/Common/terraform_ssl\",\n    override_conn_limit=\"enabled\",\n    timeout=3600)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ppssl = new F5BigIP.Ltm.PersistenceProfileSsl(\"ppssl\", new F5BigIP.Ltm.PersistenceProfileSslArgs\n        {\n            DefaultsFrom = \"/Common/ssl\",\n            MatchAcrossPools = \"enabled\",\n            MatchAcrossServices = \"enabled\",\n            MatchAcrossVirtuals = \"enabled\",\n            Mirror = \"enabled\",\n            Name = \"/Common/terraform_ssl\",\n            OverrideConnLimit = \"enabled\",\n            Timeout = 3600,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewPersistenceProfileSsl(ctx, \"ppssl\", \u0026ltm.PersistenceProfileSslArgs{\n\t\t\tDefaultsFrom:        pulumi.String(\"/Common/ssl\"),\n\t\t\tMatchAcrossPools:    pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossServices: pulumi.String(\"enabled\"),\n\t\t\tMatchAcrossVirtuals: pulumi.String(\"enabled\"),\n\t\t\tMirror:              pulumi.String(\"enabled\"),\n\t\t\tName:                pulumi.String(\"/Common/terraform_ssl\"),\n\t\t\tOverrideConnLimit:   pulumi.String(\"enabled\"),\n\t\t\tTimeout:             pulumi.Int(3600),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n## Reference\n\n`name` - (Required) Name of the virtual address\n\n`defaults_from` - (Required) Parent cookie persistence profile\n\n`match_across_pools` (Optional) (enabled or disabled) match across pools with given persistence record\n\n`match_across_services` (Optional) (enabled or disabled) match across services with given persistence record\n\n`match_across_virtuals` (Optional) (enabled or disabled) match across virtual servers with given persistence record\n\n`mirror` (Optional) (enabled or disabled) mirror persistence record\n\n`timeout` (Optional) (enabled or disabled) Timeout for persistence of the session in seconds\n\n`override_conn_limit` (Optional) (enabled or disabled) Enable or dissable pool member connection limits are overridden for persisted clients. Per-virtual connection limits remain hard limits and are not overridden.\n",
            "properties": {
                "appService": {
                    "type": "string"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "required": [
                "defaultsFrom",
                "matchAcrossPools",
                "matchAcrossServices",
                "matchAcrossVirtuals",
                "mirror",
                "name",
                "overrideConnLimit"
            ],
            "inputProperties": {
                "appService": {
                    "type": "string"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Inherit defaults from parent profile\n"
                },
                "matchAcrossPools": {
                    "type": "string",
                    "description": "To enable _ disable match across pools with given persistence record\n"
                },
                "matchAcrossServices": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "matchAcrossVirtuals": {
                    "type": "string",
                    "description": "To enable _ disable match across services with given persistence record\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "To enable _ disable\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the persistence profile\n"
                },
                "overrideConnLimit": {
                    "type": "string",
                    "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout for persistence of the session\n"
                }
            },
            "requiredInputs": [
                "defaultsFrom",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PersistenceProfileSsl resources.\n",
                "properties": {
                    "appService": {
                        "type": "string"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Inherit defaults from parent profile\n"
                    },
                    "matchAcrossPools": {
                        "type": "string",
                        "description": "To enable _ disable match across pools with given persistence record\n"
                    },
                    "matchAcrossServices": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "matchAcrossVirtuals": {
                        "type": "string",
                        "description": "To enable _ disable match across services with given persistence record\n"
                    },
                    "mirror": {
                        "type": "string",
                        "description": "To enable _ disable\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the persistence profile\n"
                    },
                    "overrideConnLimit": {
                        "type": "string",
                        "description": "To enable _ disable that pool member connection limits are overridden for persisted clients. Per-virtual connection\nlimits remain hard limits and are not overridden.\n"
                    },
                    "timeout": {
                        "type": "integer",
                        "description": "Timeout for persistence of the session\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/policy:Policy": {
            "description": "`f5bigip.ltm.Policy` Configures ltm policies to manage traffic assigned to a virtual server\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst mypool = new f5bigip.ltm.Pool(\"mypool\", {\n    name: \"/Common/test-pool\",\n    allowNat: \"yes\",\n    allowSnat: \"yes\",\n    loadBalancingMode: \"round-robin\",\n});\nconst test_policy = new f5bigip.ltm.Policy(\"test-policy\", {\n    name: \"/Common/test-policy\",\n    strategy: \"first-match\",\n    requires: [\"http\"],\n    controls: [\"forwarding\"],\n    rules: [{\n        name: \"rule6\",\n        actions: [{\n            forward: true,\n            pool: mypool.name,\n        }],\n    }],\n}, {\n    dependsOn: [mypool],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmypool = f5bigip.ltm.Pool(\"mypool\",\n    name=\"/Common/test-pool\",\n    allow_nat=\"yes\",\n    allow_snat=\"yes\",\n    load_balancing_mode=\"round-robin\")\ntest_policy = f5bigip.ltm.Policy(\"test-policy\",\n    name=\"/Common/test-policy\",\n    strategy=\"first-match\",\n    requires=[\"http\"],\n    controls=[\"forwarding\"],\n    rules=[f5bigip.ltm.PolicyRuleArgs(\n        name=\"rule6\",\n        actions=[f5bigip.ltm.PolicyRuleActionArgs(\n            forward=True,\n            pool=mypool.name,\n        )],\n    )],\n    opts=pulumi.ResourceOptions(depends_on=[mypool]))\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var mypool = new F5BigIP.Ltm.Pool(\"mypool\", new F5BigIP.Ltm.PoolArgs\n        {\n            Name = \"/Common/test-pool\",\n            AllowNat = \"yes\",\n            AllowSnat = \"yes\",\n            LoadBalancingMode = \"round-robin\",\n        });\n        var test_policy = new F5BigIP.Ltm.Policy(\"test-policy\", new F5BigIP.Ltm.PolicyArgs\n        {\n            Name = \"/Common/test-policy\",\n            Strategy = \"first-match\",\n            Requires = \n            {\n                \"http\",\n            },\n            Controls = \n            {\n                \"forwarding\",\n            },\n            Rules = \n            {\n                new F5BigIP.Ltm.Inputs.PolicyRuleArgs\n                {\n                    Name = \"rule6\",\n                    Actions = \n                    {\n                        new F5BigIP.Ltm.Inputs.PolicyRuleActionArgs\n                        {\n                            Forward = true,\n                            Pool = mypool.Name,\n                        },\n                    },\n                },\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                mypool,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmypool, err := ltm.NewPool(ctx, \"mypool\", \u0026ltm.PoolArgs{\n\t\t\tName:              pulumi.String(\"/Common/test-pool\"),\n\t\t\tAllowNat:          pulumi.String(\"yes\"),\n\t\t\tAllowSnat:         pulumi.String(\"yes\"),\n\t\t\tLoadBalancingMode: pulumi.String(\"round-robin\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewPolicy(ctx, \"test_policy\", \u0026ltm.PolicyArgs{\n\t\t\tName:     pulumi.String(\"/Common/test-policy\"),\n\t\t\tStrategy: pulumi.String(\"first-match\"),\n\t\t\tRequires: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"http\"),\n\t\t\t},\n\t\t\tControls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"forwarding\"),\n\t\t\t},\n\t\t\tRules: ltm.PolicyRuleArray{\n\t\t\t\t\u0026ltm.PolicyRuleArgs{\n\t\t\t\t\tName: pulumi.String(\"rule6\"),\n\t\t\t\t\tActions: ltm.PolicyRuleActionArray{\n\t\t\t\t\t\t\u0026ltm.PolicyRuleActionArgs{\n\t\t\t\t\t\t\tForward: pulumi.Bool(true),\n\t\t\t\t\t\t\tPool:    mypool.Name,\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tmypool,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "controls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the controls\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy ( policy name should be in full path which is combination of partition and policy name )\n"
                },
                "publishedCopy": {
                    "type": "string",
                    "description": "If you want to publish the policy else it will be deployed in Drafts mode.\n"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the protocol\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/PolicyRule:PolicyRule"
                    },
                    "description": "Rules can be applied using the policy\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Specifies the match strategy\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "controls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the controls\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the Policy ( policy name should be in full path which is combination of partition and policy name )\n"
                },
                "publishedCopy": {
                    "type": "string",
                    "description": "If you want to publish the policy else it will be deployed in Drafts mode.\n"
                },
                "requires": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the protocol\n"
                },
                "rules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/PolicyRule:PolicyRule"
                    },
                    "description": "Rules can be applied using the policy\n"
                },
                "strategy": {
                    "type": "string",
                    "description": "Specifies the match strategy\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Policy resources.\n",
                "properties": {
                    "controls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the controls\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the Policy ( policy name should be in full path which is combination of partition and policy name )\n"
                    },
                    "publishedCopy": {
                        "type": "string",
                        "description": "If you want to publish the policy else it will be deployed in Drafts mode.\n"
                    },
                    "requires": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the protocol\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/PolicyRule:PolicyRule"
                        },
                        "description": "Rules can be applied using the policy\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Specifies the match strategy\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/pool:Pool": {
            "description": "`f5bigip.ltm.Pool` Manages F5 BIG-IP LTM pools via iControl REST API.\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst monitor = new f5bigip.ltm.Monitor(\"monitor\", {\n    name: \"/Common/terraform_monitor\",\n    parent: \"/Common/http\",\n});\nconst pool = new f5bigip.ltm.Pool(\"pool\", {\n    name: \"/Common/Axiom_Environment_APP1_Pool\",\n    loadBalancingMode: \"round-robin\",\n    minimumActiveMembers: 1,\n    monitors: [monitor.name],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmonitor = f5bigip.ltm.Monitor(\"monitor\",\n    name=\"/Common/terraform_monitor\",\n    parent=\"/Common/http\")\npool = f5bigip.ltm.Pool(\"pool\",\n    name=\"/Common/Axiom_Environment_APP1_Pool\",\n    load_balancing_mode=\"round-robin\",\n    minimum_active_members=1,\n    monitors=[monitor.name])\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var monitor = new F5BigIP.Ltm.Monitor(\"monitor\", new F5BigIP.Ltm.MonitorArgs\n        {\n            Name = \"/Common/terraform_monitor\",\n            Parent = \"/Common/http\",\n        });\n        var pool = new F5BigIP.Ltm.Pool(\"pool\", new F5BigIP.Ltm.PoolArgs\n        {\n            Name = \"/Common/Axiom_Environment_APP1_Pool\",\n            LoadBalancingMode = \"round-robin\",\n            MinimumActiveMembers = 1,\n            Monitors = \n            {\n                monitor.Name,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmonitor, err := ltm.NewMonitor(ctx, \"monitor\", \u0026ltm.MonitorArgs{\n\t\t\tName:   pulumi.String(\"/Common/terraform_monitor\"),\n\t\t\tParent: pulumi.String(\"/Common/http\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewPool(ctx, \"pool\", \u0026ltm.PoolArgs{\n\t\t\tName:                 pulumi.String(\"/Common/Axiom_Environment_APP1_Pool\"),\n\t\t\tLoadBalancingMode:    pulumi.String(\"round-robin\"),\n\t\t\tMinimumActiveMembers: pulumi.Int(1),\n\t\t\tMonitors: pulumi.StringArray{\n\t\t\t\tmonitor.Name,\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowNat": {
                    "type": "string",
                    "description": "Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].\n"
                },
                "allowSnat": {
                    "type": "string",
                    "description": "Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies descriptive text that identifies the pool.\n"
                },
                "loadBalancingMode": {
                    "type": "string",
                    "description": "Specifies the load balancing method. The default is Round Robin.\n"
                },
                "minimumActiveMembers": {
                    "type": "integer",
                    "description": "Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.\n"
                },
                "monitors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of monitor names to associate with the pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the pool,it should be \"full path\".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)\n"
                },
                "reselectTries": {
                    "type": "integer",
                    "description": "Specifies the number of times the system tries to contact a new pool member after a passive failure.\n"
                },
                "serviceDownAction": {
                    "type": "string",
                    "description": "Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.\n"
                },
                "slowRampTime": {
                    "type": "integer",
                    "description": "Specifies the duration during which the system sends less traffic to a newly-enabled pool member.\n"
                }
            },
            "required": [
                "allowNat",
                "allowSnat",
                "loadBalancingMode",
                "minimumActiveMembers",
                "monitors",
                "name",
                "reselectTries",
                "serviceDownAction",
                "slowRampTime"
            ],
            "inputProperties": {
                "allowNat": {
                    "type": "string",
                    "description": "Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].\n"
                },
                "allowSnat": {
                    "type": "string",
                    "description": "Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies descriptive text that identifies the pool.\n"
                },
                "loadBalancingMode": {
                    "type": "string",
                    "description": "Specifies the load balancing method. The default is Round Robin.\n"
                },
                "minimumActiveMembers": {
                    "type": "integer",
                    "description": "Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.\n"
                },
                "monitors": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of monitor names to associate with the pool\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the pool,it should be \"full path\".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)\n"
                },
                "reselectTries": {
                    "type": "integer",
                    "description": "Specifies the number of times the system tries to contact a new pool member after a passive failure.\n"
                },
                "serviceDownAction": {
                    "type": "string",
                    "description": "Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.\n"
                },
                "slowRampTime": {
                    "type": "integer",
                    "description": "Specifies the duration during which the system sends less traffic to a newly-enabled pool member.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Pool resources.\n",
                "properties": {
                    "allowNat": {
                        "type": "string",
                        "description": "Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].\n"
                    },
                    "allowSnat": {
                        "type": "string",
                        "description": "Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies descriptive text that identifies the pool.\n"
                    },
                    "loadBalancingMode": {
                        "type": "string",
                        "description": "Specifies the load balancing method. The default is Round Robin.\n"
                    },
                    "minimumActiveMembers": {
                        "type": "integer",
                        "description": "Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.\n"
                    },
                    "monitors": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of monitor names to associate with the pool\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the pool,it should be \"full path\".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)\n"
                    },
                    "reselectTries": {
                        "type": "integer",
                        "description": "Specifies the number of times the system tries to contact a new pool member after a passive failure.\n"
                    },
                    "serviceDownAction": {
                        "type": "string",
                        "description": "Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.\n"
                    },
                    "slowRampTime": {
                        "type": "integer",
                        "description": "Specifies the duration during which the system sends less traffic to a newly-enabled pool member.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/poolAttachment:PoolAttachment": {
            "description": "`f5bigip.ltm.PoolAttachment` Manages nodes membership in pools\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\nThere are two ways to use ltm_pool_attachment resource, where we can take node reference from ltm_node or we can specify node directly with ip:port/fqdn:port which will also create node and atach to pool.\n\n\nPool attachment with node directly taking ip:port/fqdn:port\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst monitor = new f5bigip.ltm.Monitor(\"monitor\", {\n    name: \"/Common/terraform_monitor\",\n    parent: \"/Common/http\",\n    send: \"GET /some/path\r\\n\",\n    timeout: \"999\",\n    interval: \"998\",\n});\nconst pool = new f5bigip.ltm.Pool(\"pool\", {\n    name: \"/Common/terraform-pool\",\n    loadBalancingMode: \"round-robin\",\n    monitors: [monitor.name],\n    allowSnat: \"yes\",\n    allowNat: \"yes\",\n});\nconst attachNode = new f5bigip.ltm.PoolAttachment(\"attachNode\", {\n    pool: pool.name,\n    node: \"1.1.1.1:80\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmonitor = f5bigip.ltm.Monitor(\"monitor\",\n    name=\"/Common/terraform_monitor\",\n    parent=\"/Common/http\",\n    send=\"GET /some/path\r\\n\",\n    timeout=999,\n    interval=998)\npool = f5bigip.ltm.Pool(\"pool\",\n    name=\"/Common/terraform-pool\",\n    load_balancing_mode=\"round-robin\",\n    monitors=[monitor.name],\n    allow_snat=\"yes\",\n    allow_nat=\"yes\")\nattach_node = f5bigip.ltm.PoolAttachment(\"attachNode\",\n    pool=pool.name,\n    node=\"1.1.1.1:80\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var monitor = new F5BigIP.Ltm.Monitor(\"monitor\", new F5BigIP.Ltm.MonitorArgs\n        {\n            Name = \"/Common/terraform_monitor\",\n            Parent = \"/Common/http\",\n            Send = @\"GET /some/path\r\n\",\n            Timeout = 999,\n            Interval = 998,\n        });\n        var pool = new F5BigIP.Ltm.Pool(\"pool\", new F5BigIP.Ltm.PoolArgs\n        {\n            Name = \"/Common/terraform-pool\",\n            LoadBalancingMode = \"round-robin\",\n            Monitors = \n            {\n                monitor.Name,\n            },\n            AllowSnat = \"yes\",\n            AllowNat = \"yes\",\n        });\n        var attachNode = new F5BigIP.Ltm.PoolAttachment(\"attachNode\", new F5BigIP.Ltm.PoolAttachmentArgs\n        {\n            Pool = pool.Name,\n            Node = \"1.1.1.1:80\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmonitor, err := ltm.NewMonitor(ctx, \"monitor\", \u0026ltm.MonitorArgs{\n\t\t\tName:   pulumi.String(\"/Common/terraform_monitor\"),\n\t\t\tParent: pulumi.String(\"/Common/http\"),\n\t\t\tSend: pulumi.String(\"GET /some/path\r\\n\"),\n\t\t\tTimeout:  pulumi.Int(999),\n\t\t\tInterval: pulumi.Int(998),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpool, err := ltm.NewPool(ctx, \"pool\", \u0026ltm.PoolArgs{\n\t\t\tName:              pulumi.String(\"/Common/terraform-pool\"),\n\t\t\tLoadBalancingMode: pulumi.String(\"round-robin\"),\n\t\t\tMonitors: pulumi.StringArray{\n\t\t\t\tmonitor.Name,\n\t\t\t},\n\t\t\tAllowSnat: pulumi.String(\"yes\"),\n\t\t\tAllowNat:  pulumi.String(\"yes\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewPoolAttachment(ctx, \"attachNode\", \u0026ltm.PoolAttachmentArgs{\n\t\t\tPool: pool.Name,\n\t\t\tNode: pulumi.String(\"1.1.1.1:80\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\nPool attachment with node reference from ltm_node\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst monitor = new f5bigip.ltm.Monitor(\"monitor\", {\n    name: \"/Common/terraform_monitor\",\n    parent: \"/Common/http\",\n    send: \"GET /some/path\r\\n\",\n    timeout: \"999\",\n    interval: \"998\",\n});\nconst pool = new f5bigip.ltm.Pool(\"pool\", {\n    name: \"/Common/terraform-pool\",\n    loadBalancingMode: \"round-robin\",\n    monitors: [monitor.name],\n    allowSnat: \"yes\",\n    allowNat: \"yes\",\n});\nconst node = new f5bigip.ltm.Node(\"node\", {\n    name: \"/Common/terraform_node\",\n    address: \"192.168.30.2\",\n});\nconst attachNode = new f5bigip.ltm.PoolAttachment(\"attachNode\", {\n    pool: pool.name,\n    node: pulumi.interpolate`${node.name}:80`,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmonitor = f5bigip.ltm.Monitor(\"monitor\",\n    name=\"/Common/terraform_monitor\",\n    parent=\"/Common/http\",\n    send=\"GET /some/path\r\\n\",\n    timeout=999,\n    interval=998)\npool = f5bigip.ltm.Pool(\"pool\",\n    name=\"/Common/terraform-pool\",\n    load_balancing_mode=\"round-robin\",\n    monitors=[monitor.name],\n    allow_snat=\"yes\",\n    allow_nat=\"yes\")\nnode = f5bigip.ltm.Node(\"node\",\n    name=\"/Common/terraform_node\",\n    address=\"192.168.30.2\")\nattach_node = f5bigip.ltm.PoolAttachment(\"attachNode\",\n    pool=pool.name,\n    node=node.name.apply(lambda name: f\"{name}:80\"))\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var monitor = new F5BigIP.Ltm.Monitor(\"monitor\", new F5BigIP.Ltm.MonitorArgs\n        {\n            Name = \"/Common/terraform_monitor\",\n            Parent = \"/Common/http\",\n            Send = @\"GET /some/path\r\n\",\n            Timeout = 999,\n            Interval = 998,\n        });\n        var pool = new F5BigIP.Ltm.Pool(\"pool\", new F5BigIP.Ltm.PoolArgs\n        {\n            Name = \"/Common/terraform-pool\",\n            LoadBalancingMode = \"round-robin\",\n            Monitors = \n            {\n                monitor.Name,\n            },\n            AllowSnat = \"yes\",\n            AllowNat = \"yes\",\n        });\n        var node = new F5BigIP.Ltm.Node(\"node\", new F5BigIP.Ltm.NodeArgs\n        {\n            Name = \"/Common/terraform_node\",\n            Address = \"192.168.30.2\",\n        });\n        var attachNode = new F5BigIP.Ltm.PoolAttachment(\"attachNode\", new F5BigIP.Ltm.PoolAttachmentArgs\n        {\n            Pool = pool.Name,\n            Node = node.Name.Apply(name =\u003e $\"{name}:80\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"fmt\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tmonitor, err := ltm.NewMonitor(ctx, \"monitor\", \u0026ltm.MonitorArgs{\n\t\t\tName:   pulumi.String(\"/Common/terraform_monitor\"),\n\t\t\tParent: pulumi.String(\"/Common/http\"),\n\t\t\tSend: pulumi.String(\"GET /some/path\r\\n\"),\n\t\t\tTimeout:  pulumi.Int(999),\n\t\t\tInterval: pulumi.Int(998),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpool, err := ltm.NewPool(ctx, \"pool\", \u0026ltm.PoolArgs{\n\t\t\tName:              pulumi.String(\"/Common/terraform-pool\"),\n\t\t\tLoadBalancingMode: pulumi.String(\"round-robin\"),\n\t\t\tMonitors: pulumi.StringArray{\n\t\t\t\tmonitor.Name,\n\t\t\t},\n\t\t\tAllowSnat: pulumi.String(\"yes\"),\n\t\t\tAllowNat:  pulumi.String(\"yes\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tnode, err := ltm.NewNode(ctx, \"node\", \u0026ltm.NodeArgs{\n\t\t\tName:    pulumi.String(\"/Common/terraform_node\"),\n\t\t\tAddress: pulumi.String(\"192.168.30.2\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewPoolAttachment(ctx, \"attachNode\", \u0026ltm.PoolAttachmentArgs{\n\t\t\tPool: pool.Name,\n\t\t\tNode: node.Name.ApplyT(func(name string) (string, error) {\n\t\t\t\treturn fmt.Sprintf(\"%v%v\", name, \":80\"), nil\n\t\t\t}).(pulumi.StringOutput),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "connectionLimit": {
                    "type": "integer",
                    "description": "Specifies a maximum established connection limit for a pool member or node.The default is 0, meaning that there is no limit to the number of connections.\n"
                },
                "connectionRateLimit": {
                    "type": "string",
                    "description": "Specifies the maximum number of connections-per-second allowed for a pool member,The default is 0.\n"
                },
                "dynamicRatio": {
                    "type": "integer",
                    "description": "Specifies the fixed ratio value used for a node during ratio load balancing.\n"
                },
                "fqdnAutopopulate": {
                    "type": "string",
                    "description": "Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN. The default is enabled\n"
                },
                "node": {
                    "type": "string",
                    "description": "Pool member address/fqdn with service port, (ex: `1.1.1.1:80/www.google.com:80`). (Note: Member will be in same partition of Pool)\n"
                },
                "pool": {
                    "type": "string",
                    "description": "Name of the pool to which members should be attached,it should be \"full path\".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`) or partition + directory + name of the pool (For example `/Common/test/my-pool`).When including directory in fullpath we have to make sure it is created in the given partition before using it.\n"
                },
                "priorityGroup": {
                    "type": "integer",
                    "description": "Specifies a number representing the priority group for the pool member. The default is 0, meaning that the member has no priority\n"
                },
                "ratio": {
                    "type": "integer",
                    "description": "\"Specifies the ratio weight to assign to the pool member. Valid values range from 1 through 65535. The default is 1, which means that each pool member has an equal ratio proportion.\".\n"
                }
            },
            "required": [
                "connectionLimit",
                "connectionRateLimit",
                "dynamicRatio",
                "node",
                "pool",
                "priorityGroup",
                "ratio"
            ],
            "inputProperties": {
                "connectionLimit": {
                    "type": "integer",
                    "description": "Specifies a maximum established connection limit for a pool member or node.The default is 0, meaning that there is no limit to the number of connections.\n"
                },
                "connectionRateLimit": {
                    "type": "string",
                    "description": "Specifies the maximum number of connections-per-second allowed for a pool member,The default is 0.\n"
                },
                "dynamicRatio": {
                    "type": "integer",
                    "description": "Specifies the fixed ratio value used for a node during ratio load balancing.\n"
                },
                "fqdnAutopopulate": {
                    "type": "string",
                    "description": "Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN. The default is enabled\n"
                },
                "node": {
                    "type": "string",
                    "description": "Pool member address/fqdn with service port, (ex: `1.1.1.1:80/www.google.com:80`). (Note: Member will be in same partition of Pool)\n"
                },
                "pool": {
                    "type": "string",
                    "description": "Name of the pool to which members should be attached,it should be \"full path\".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`) or partition + directory + name of the pool (For example `/Common/test/my-pool`).When including directory in fullpath we have to make sure it is created in the given partition before using it.\n"
                },
                "priorityGroup": {
                    "type": "integer",
                    "description": "Specifies a number representing the priority group for the pool member. The default is 0, meaning that the member has no priority\n"
                },
                "ratio": {
                    "type": "integer",
                    "description": "\"Specifies the ratio weight to assign to the pool member. Valid values range from 1 through 65535. The default is 1, which means that each pool member has an equal ratio proportion.\".\n"
                }
            },
            "requiredInputs": [
                "node",
                "pool"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PoolAttachment resources.\n",
                "properties": {
                    "connectionLimit": {
                        "type": "integer",
                        "description": "Specifies a maximum established connection limit for a pool member or node.The default is 0, meaning that there is no limit to the number of connections.\n"
                    },
                    "connectionRateLimit": {
                        "type": "string",
                        "description": "Specifies the maximum number of connections-per-second allowed for a pool member,The default is 0.\n"
                    },
                    "dynamicRatio": {
                        "type": "integer",
                        "description": "Specifies the fixed ratio value used for a node during ratio load balancing.\n"
                    },
                    "fqdnAutopopulate": {
                        "type": "string",
                        "description": "Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN. The default is enabled\n"
                    },
                    "node": {
                        "type": "string",
                        "description": "Pool member address/fqdn with service port, (ex: `1.1.1.1:80/www.google.com:80`). (Note: Member will be in same partition of Pool)\n"
                    },
                    "pool": {
                        "type": "string",
                        "description": "Name of the pool to which members should be attached,it should be \"full path\".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`) or partition + directory + name of the pool (For example `/Common/test/my-pool`).When including directory in fullpath we have to make sure it is created in the given partition before using it.\n"
                    },
                    "priorityGroup": {
                        "type": "integer",
                        "description": "Specifies a number representing the priority group for the pool member. The default is 0, meaning that the member has no priority\n"
                    },
                    "ratio": {
                        "type": "integer",
                        "description": "\"Specifies the ratio weight to assign to the pool member. Valid values range from 1 through 65535. The default is 1, which means that each pool member has an equal ratio proportion.\".\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileClientSsl:ProfileClientSsl": {
            "description": "`f5bigip.ltm.ProfileClientSsl` Manages client SSL profiles on a BIG-IP\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test_ClientSsl = new f5bigip.ltm.ProfileClientSsl(\"test-ClientSsl\", {\n    authenticate: \"always\",\n    ciphers: \"DEFAULT\",\n    defaultsFrom: \"/Common/clientssl\",\n    name: \"/Common/test-ClientSsl\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest__client_ssl = f5bigip.ltm.ProfileClientSsl(\"test-ClientSsl\",\n    authenticate=\"always\",\n    ciphers=\"DEFAULT\",\n    defaults_from=\"/Common/clientssl\",\n    name=\"/Common/test-ClientSsl\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_ClientSsl = new F5BigIP.Ltm.ProfileClientSsl(\"test-ClientSsl\", new F5BigIP.Ltm.ProfileClientSslArgs\n        {\n            Authenticate = \"always\",\n            Ciphers = \"DEFAULT\",\n            DefaultsFrom = \"/Common/clientssl\",\n            Name = \"/Common/test-ClientSsl\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileClientSsl(ctx, \"test_ClientSsl\", \u0026ltm.ProfileClientSslArgs{\n\t\t\tAuthenticate: pulumi.String(\"always\"),\n\t\t\tCiphers:      pulumi.String(\"DEFAULT\"),\n\t\t\tDefaultsFrom: pulumi.String(\"/Common/clientssl\"),\n\t\t\tName:         pulumi.String(\"/Common/test-ClientSsl\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "alertTimeout": {
                    "type": "string",
                    "description": "Alert time out\n"
                },
                "allowNonSsl": {
                    "type": "string",
                    "description": "Enables or disables acceptance of non-SSL connections, When creating a new profile, the setting is provided by the parent profile\n"
                },
                "authenticate": {
                    "type": "string",
                    "description": "Specifies the frequency of client authentication for an SSL session.When `once`,specifies that the system authenticates the client once for an SSL session.\nWhen `always`, specifies that the system authenticates the client once for an SSL session and also upon reuse of that session.\n"
                },
                "authenticateDepth": {
                    "type": "integer",
                    "description": "Specifies the maximum number of certificates to be traversed in a client certificate chain\n"
                },
                "c3dClientFallbackCert": {
                    "type": "string",
                    "description": "Specifies the client certificate to use in SSL client certificate constrained delegation. This certificate will be used if client does not provide a cert during the SSL handshake. The default value is none.\n"
                },
                "c3dDropUnknownOcspStatus": {
                    "type": "string",
                    "description": "Specifies the BIG-IP action when the OCSP responder returns unknown status. The default value is drop, which causes the onnection to be dropped. Conversely, you can specify ignore, which causes the connection to ignore the unknown status and continue.\n"
                },
                "c3dOcsp": {
                    "type": "string",
                    "description": "Specifies the SSL client certificate constrained delegation OCSP object that the BIG-IP SSL should use to connect to the OCSP responder and check the client certificate status.\n"
                },
                "caFile": {
                    "type": "string",
                    "description": "Client certificate file path. Default None.\n"
                },
                "cacheSize": {
                    "type": "integer",
                    "description": "Cache size (sessions).\n"
                },
                "cacheTimeout": {
                    "type": "integer",
                    "description": "Cache time out\n"
                },
                "cert": {
                    "type": "string",
                    "description": "Specifies a cert name for use.\n"
                },
                "certExtensionIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cert extension includes for ssl forward proxy\n"
                },
                "certKeyChains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/ProfileClientSslCertKeyChain:ProfileClientSslCertKeyChain"
                    }
                },
                "certLifeSpan": {
                    "type": "integer",
                    "description": "Life span of the certificate in days for ssl forward proxy\n"
                },
                "certLookupByIpaddrPort": {
                    "type": "string",
                    "description": "Cert lookup by ip address and port enabled / disabled\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Contains a certificate chain that is relevant to the certificate and key mentioned earlier.This key is optional\n"
                },
                "ciphers": {
                    "type": "string",
                    "description": "Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\n"
                },
                "clientCertCa": {
                    "type": "string",
                    "description": "client certificate name\n"
                },
                "crlFile": {
                    "type": "string",
                    "description": "Certificate revocation file name\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Parent profile for this clientssl profile.Once this value has been set, it cannot be changed. Default value is `/Common/clientssl`. It Should Full path `/partition/profile_name`\n"
                },
                "forwardProxyBypassDefaultAction": {
                    "type": "string",
                    "description": "Forward proxy bypass default action. (enabled / disabled)\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "full path of the profile\n"
                },
                "generation": {
                    "type": "integer",
                    "description": "generation\n"
                },
                "genericAlert": {
                    "type": "string",
                    "description": "Generic alerts enabled / disabled.\n"
                },
                "handshakeTimeout": {
                    "type": "string",
                    "description": "Handshake time out (seconds)\n"
                },
                "inheritCertKeychain": {
                    "type": "string",
                    "description": "Inherit cert key chain\n"
                },
                "key": {
                    "type": "string",
                    "description": "Contains a key name\n"
                },
                "modSslMethods": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the profile.Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-clientssl-profile`.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "name of partition\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Client Certificate Constrained Delegation CA passphrase\n"
                },
                "peerCertMode": {
                    "type": "string",
                    "description": "Specifies the way the system handles client certificates.When ignore, specifies that the system ignores certificates from client systems.When require, specifies that the system requires a client to present a valid certificate.When request, specifies that the system requests a valid certificate from a client but always authenticate the client.\n"
                },
                "proxyCaCert": {
                    "type": "string",
                    "description": "Proxy CA Cert\n"
                },
                "proxyCaKey": {
                    "type": "string",
                    "description": "Proxy CA Key\n"
                },
                "proxyCaPassphrase": {
                    "type": "string",
                    "description": "Proxy CA Passphrase\n"
                },
                "proxySsl": {
                    "type": "string",
                    "description": "Proxy SSL enabled / disabled. Default is disabled.\n"
                },
                "proxySslPassthrough": {
                    "type": "string",
                    "description": "Proxy SSL passthrough enabled / disabled. Default is disabled.\n"
                },
                "renegotiatePeriod": {
                    "type": "string",
                    "description": "Renogotiate Period (seconds)\n"
                },
                "renegotiateSize": {
                    "type": "string",
                    "description": "Renogotiate Size\n"
                },
                "renegotiation": {
                    "type": "string",
                    "description": "Enables or disables SSL renegotiation.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "retainCertificate": {
                    "type": "string",
                    "description": "When `true`, client certificate is retained in SSL session.\n"
                },
                "secureRenegotiation": {
                    "type": "string",
                    "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen `request` is set the system request secure renegotation of SSL connections.\n`require` is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nThe `require-strict` setting the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.The server name can also be a wildcard string containing the asterisk `*` character.\n"
                },
                "sessionMirroring": {
                    "type": "string",
                    "description": "Session Mirroring (enabled / disabled)\n"
                },
                "sessionTicket": {
                    "type": "string",
                    "description": "Session Ticket (enabled / disabled)\n"
                },
                "sniDefault": {
                    "type": "string",
                    "description": "Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.When creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.\n"
                },
                "sniRequire": {
                    "type": "string",
                    "description": "Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default` is set to `true`.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "sslC3d": {
                    "type": "string",
                    "description": "Enables or disables SSL client certificate constrained delegation. The default option is disabled. Conversely, you can specify enabled to use the SSL client certificate constrained delegation.\n"
                },
                "sslForwardProxy": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.\n"
                },
                "sslForwardProxyBypass": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.\n"
                },
                "sslSignHash": {
                    "type": "string",
                    "description": "SSL sign hash (any, sha1, sha256, sha384)\n"
                },
                "strictResume": {
                    "type": "string",
                    "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.When creating a new profile, the setting is provided by the parent profile.\n"
                },
                "tmOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Enabled selection from a set of industry standard options for handling SSL processing.By default,\nDon't insert empty fragments and No TLSv1.3 are listed as Enabled Options. `Usage` : tm_options    = [\"dont-insert-empty-fragments\",\"no-tlsv1.3\"]\n"
                },
                "uncleanShutdown": {
                    "type": "string",
                    "description": "Unclean Shutdown (enabled / disabled)\n"
                }
            },
            "required": [
                "alertTimeout",
                "allowNonSsl",
                "authenticate",
                "authenticateDepth",
                "c3dClientFallbackCert",
                "c3dDropUnknownOcspStatus",
                "c3dOcsp",
                "caFile",
                "cacheSize",
                "cacheTimeout",
                "cert",
                "certExtensionIncludes",
                "certKeyChains",
                "certLifeSpan",
                "certLookupByIpaddrPort",
                "chain",
                "ciphers",
                "clientCertCa",
                "crlFile",
                "forwardProxyBypassDefaultAction",
                "fullPath",
                "generation",
                "genericAlert",
                "handshakeTimeout",
                "inheritCertKeychain",
                "key",
                "modSslMethods",
                "mode",
                "name",
                "partition",
                "passphrase",
                "peerCertMode",
                "proxyCaCert",
                "proxyCaKey",
                "proxyCaPassphrase",
                "proxySsl",
                "proxySslPassthrough",
                "renegotiatePeriod",
                "renegotiateSize",
                "renegotiation",
                "retainCertificate",
                "secureRenegotiation",
                "serverName",
                "sessionMirroring",
                "sessionTicket",
                "sniDefault",
                "sniRequire",
                "sslC3d",
                "sslForwardProxy",
                "sslForwardProxyBypass",
                "sslSignHash",
                "strictResume",
                "tmOptions",
                "uncleanShutdown"
            ],
            "inputProperties": {
                "alertTimeout": {
                    "type": "string",
                    "description": "Alert time out\n"
                },
                "allowNonSsl": {
                    "type": "string",
                    "description": "Enables or disables acceptance of non-SSL connections, When creating a new profile, the setting is provided by the parent profile\n"
                },
                "authenticate": {
                    "type": "string",
                    "description": "Specifies the frequency of client authentication for an SSL session.When `once`,specifies that the system authenticates the client once for an SSL session.\nWhen `always`, specifies that the system authenticates the client once for an SSL session and also upon reuse of that session.\n"
                },
                "authenticateDepth": {
                    "type": "integer",
                    "description": "Specifies the maximum number of certificates to be traversed in a client certificate chain\n"
                },
                "c3dClientFallbackCert": {
                    "type": "string",
                    "description": "Specifies the client certificate to use in SSL client certificate constrained delegation. This certificate will be used if client does not provide a cert during the SSL handshake. The default value is none.\n"
                },
                "c3dDropUnknownOcspStatus": {
                    "type": "string",
                    "description": "Specifies the BIG-IP action when the OCSP responder returns unknown status. The default value is drop, which causes the onnection to be dropped. Conversely, you can specify ignore, which causes the connection to ignore the unknown status and continue.\n"
                },
                "c3dOcsp": {
                    "type": "string",
                    "description": "Specifies the SSL client certificate constrained delegation OCSP object that the BIG-IP SSL should use to connect to the OCSP responder and check the client certificate status.\n"
                },
                "caFile": {
                    "type": "string",
                    "description": "Client certificate file path. Default None.\n"
                },
                "cacheSize": {
                    "type": "integer",
                    "description": "Cache size (sessions).\n"
                },
                "cacheTimeout": {
                    "type": "integer",
                    "description": "Cache time out\n"
                },
                "cert": {
                    "type": "string",
                    "description": "Specifies a cert name for use.\n"
                },
                "certExtensionIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Cert extension includes for ssl forward proxy\n"
                },
                "certKeyChains": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/ProfileClientSslCertKeyChain:ProfileClientSslCertKeyChain"
                    }
                },
                "certLifeSpan": {
                    "type": "integer",
                    "description": "Life span of the certificate in days for ssl forward proxy\n"
                },
                "certLookupByIpaddrPort": {
                    "type": "string",
                    "description": "Cert lookup by ip address and port enabled / disabled\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Contains a certificate chain that is relevant to the certificate and key mentioned earlier.This key is optional\n"
                },
                "ciphers": {
                    "type": "string",
                    "description": "Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\n"
                },
                "clientCertCa": {
                    "type": "string",
                    "description": "client certificate name\n"
                },
                "crlFile": {
                    "type": "string",
                    "description": "Certificate revocation file name\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Parent profile for this clientssl profile.Once this value has been set, it cannot be changed. Default value is `/Common/clientssl`. It Should Full path `/partition/profile_name`\n"
                },
                "forwardProxyBypassDefaultAction": {
                    "type": "string",
                    "description": "Forward proxy bypass default action. (enabled / disabled)\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "full path of the profile\n"
                },
                "generation": {
                    "type": "integer",
                    "description": "generation\n"
                },
                "genericAlert": {
                    "type": "string",
                    "description": "Generic alerts enabled / disabled.\n"
                },
                "handshakeTimeout": {
                    "type": "string",
                    "description": "Handshake time out (seconds)\n"
                },
                "inheritCertKeychain": {
                    "type": "string",
                    "description": "Inherit cert key chain\n"
                },
                "key": {
                    "type": "string",
                    "description": "Contains a key name\n"
                },
                "modSslMethods": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the profile.Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-clientssl-profile`.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "name of partition\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Client Certificate Constrained Delegation CA passphrase\n"
                },
                "peerCertMode": {
                    "type": "string",
                    "description": "Specifies the way the system handles client certificates.When ignore, specifies that the system ignores certificates from client systems.When require, specifies that the system requires a client to present a valid certificate.When request, specifies that the system requests a valid certificate from a client but always authenticate the client.\n"
                },
                "proxyCaCert": {
                    "type": "string",
                    "description": "Proxy CA Cert\n"
                },
                "proxyCaKey": {
                    "type": "string",
                    "description": "Proxy CA Key\n"
                },
                "proxyCaPassphrase": {
                    "type": "string",
                    "description": "Proxy CA Passphrase\n"
                },
                "proxySsl": {
                    "type": "string",
                    "description": "Proxy SSL enabled / disabled. Default is disabled.\n"
                },
                "proxySslPassthrough": {
                    "type": "string",
                    "description": "Proxy SSL passthrough enabled / disabled. Default is disabled.\n"
                },
                "renegotiatePeriod": {
                    "type": "string",
                    "description": "Renogotiate Period (seconds)\n"
                },
                "renegotiateSize": {
                    "type": "string",
                    "description": "Renogotiate Size\n"
                },
                "renegotiation": {
                    "type": "string",
                    "description": "Enables or disables SSL renegotiation.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "retainCertificate": {
                    "type": "string",
                    "description": "When `true`, client certificate is retained in SSL session.\n"
                },
                "secureRenegotiation": {
                    "type": "string",
                    "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen `request` is set the system request secure renegotation of SSL connections.\n`require` is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nThe `require-strict` setting the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.The server name can also be a wildcard string containing the asterisk `*` character.\n"
                },
                "sessionMirroring": {
                    "type": "string",
                    "description": "Session Mirroring (enabled / disabled)\n"
                },
                "sessionTicket": {
                    "type": "string",
                    "description": "Session Ticket (enabled / disabled)\n"
                },
                "sniDefault": {
                    "type": "string",
                    "description": "Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.When creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.\n"
                },
                "sniRequire": {
                    "type": "string",
                    "description": "Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default` is set to `true`.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "sslC3d": {
                    "type": "string",
                    "description": "Enables or disables SSL client certificate constrained delegation. The default option is disabled. Conversely, you can specify enabled to use the SSL client certificate constrained delegation.\n"
                },
                "sslForwardProxy": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.\n"
                },
                "sslForwardProxyBypass": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.\n"
                },
                "sslSignHash": {
                    "type": "string",
                    "description": "SSL sign hash (any, sha1, sha256, sha384)\n"
                },
                "strictResume": {
                    "type": "string",
                    "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.When creating a new profile, the setting is provided by the parent profile.\n"
                },
                "tmOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Enabled selection from a set of industry standard options for handling SSL processing.By default,\nDon't insert empty fragments and No TLSv1.3 are listed as Enabled Options. `Usage` : tm_options    = [\"dont-insert-empty-fragments\",\"no-tlsv1.3\"]\n"
                },
                "uncleanShutdown": {
                    "type": "string",
                    "description": "Unclean Shutdown (enabled / disabled)\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileClientSsl resources.\n",
                "properties": {
                    "alertTimeout": {
                        "type": "string",
                        "description": "Alert time out\n"
                    },
                    "allowNonSsl": {
                        "type": "string",
                        "description": "Enables or disables acceptance of non-SSL connections, When creating a new profile, the setting is provided by the parent profile\n"
                    },
                    "authenticate": {
                        "type": "string",
                        "description": "Specifies the frequency of client authentication for an SSL session.When `once`,specifies that the system authenticates the client once for an SSL session.\nWhen `always`, specifies that the system authenticates the client once for an SSL session and also upon reuse of that session.\n"
                    },
                    "authenticateDepth": {
                        "type": "integer",
                        "description": "Specifies the maximum number of certificates to be traversed in a client certificate chain\n"
                    },
                    "c3dClientFallbackCert": {
                        "type": "string",
                        "description": "Specifies the client certificate to use in SSL client certificate constrained delegation. This certificate will be used if client does not provide a cert during the SSL handshake. The default value is none.\n"
                    },
                    "c3dDropUnknownOcspStatus": {
                        "type": "string",
                        "description": "Specifies the BIG-IP action when the OCSP responder returns unknown status. The default value is drop, which causes the onnection to be dropped. Conversely, you can specify ignore, which causes the connection to ignore the unknown status and continue.\n"
                    },
                    "c3dOcsp": {
                        "type": "string",
                        "description": "Specifies the SSL client certificate constrained delegation OCSP object that the BIG-IP SSL should use to connect to the OCSP responder and check the client certificate status.\n"
                    },
                    "caFile": {
                        "type": "string",
                        "description": "Client certificate file path. Default None.\n"
                    },
                    "cacheSize": {
                        "type": "integer",
                        "description": "Cache size (sessions).\n"
                    },
                    "cacheTimeout": {
                        "type": "integer",
                        "description": "Cache time out\n"
                    },
                    "cert": {
                        "type": "string",
                        "description": "Specifies a cert name for use.\n"
                    },
                    "certExtensionIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Cert extension includes for ssl forward proxy\n"
                    },
                    "certKeyChains": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/ProfileClientSslCertKeyChain:ProfileClientSslCertKeyChain"
                        }
                    },
                    "certLifeSpan": {
                        "type": "integer",
                        "description": "Life span of the certificate in days for ssl forward proxy\n"
                    },
                    "certLookupByIpaddrPort": {
                        "type": "string",
                        "description": "Cert lookup by ip address and port enabled / disabled\n"
                    },
                    "chain": {
                        "type": "string",
                        "description": "Contains a certificate chain that is relevant to the certificate and key mentioned earlier.This key is optional\n"
                    },
                    "ciphers": {
                        "type": "string",
                        "description": "Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\n"
                    },
                    "clientCertCa": {
                        "type": "string",
                        "description": "client certificate name\n"
                    },
                    "crlFile": {
                        "type": "string",
                        "description": "Certificate revocation file name\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Parent profile for this clientssl profile.Once this value has been set, it cannot be changed. Default value is `/Common/clientssl`. It Should Full path `/partition/profile_name`\n"
                    },
                    "forwardProxyBypassDefaultAction": {
                        "type": "string",
                        "description": "Forward proxy bypass default action. (enabled / disabled)\n"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "full path of the profile\n"
                    },
                    "generation": {
                        "type": "integer",
                        "description": "generation\n"
                    },
                    "genericAlert": {
                        "type": "string",
                        "description": "Generic alerts enabled / disabled.\n"
                    },
                    "handshakeTimeout": {
                        "type": "string",
                        "description": "Handshake time out (seconds)\n"
                    },
                    "inheritCertKeychain": {
                        "type": "string",
                        "description": "Inherit cert key chain\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Contains a key name\n"
                    },
                    "modSslMethods": {
                        "type": "string",
                        "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the profile.Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-clientssl-profile`.\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "name of partition\n"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "Client Certificate Constrained Delegation CA passphrase\n"
                    },
                    "peerCertMode": {
                        "type": "string",
                        "description": "Specifies the way the system handles client certificates.When ignore, specifies that the system ignores certificates from client systems.When require, specifies that the system requires a client to present a valid certificate.When request, specifies that the system requests a valid certificate from a client but always authenticate the client.\n"
                    },
                    "proxyCaCert": {
                        "type": "string",
                        "description": "Proxy CA Cert\n"
                    },
                    "proxyCaKey": {
                        "type": "string",
                        "description": "Proxy CA Key\n"
                    },
                    "proxyCaPassphrase": {
                        "type": "string",
                        "description": "Proxy CA Passphrase\n"
                    },
                    "proxySsl": {
                        "type": "string",
                        "description": "Proxy SSL enabled / disabled. Default is disabled.\n"
                    },
                    "proxySslPassthrough": {
                        "type": "string",
                        "description": "Proxy SSL passthrough enabled / disabled. Default is disabled.\n"
                    },
                    "renegotiatePeriod": {
                        "type": "string",
                        "description": "Renogotiate Period (seconds)\n"
                    },
                    "renegotiateSize": {
                        "type": "string",
                        "description": "Renogotiate Size\n"
                    },
                    "renegotiation": {
                        "type": "string",
                        "description": "Enables or disables SSL renegotiation.When creating a new profile, the setting is provided by the parent profile\n"
                    },
                    "retainCertificate": {
                        "type": "string",
                        "description": "When `true`, client certificate is retained in SSL session.\n"
                    },
                    "secureRenegotiation": {
                        "type": "string",
                        "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen `request` is set the system request secure renegotation of SSL connections.\n`require` is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nThe `require-strict` setting the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers\n"
                    },
                    "serverName": {
                        "type": "string",
                        "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.The server name can also be a wildcard string containing the asterisk `*` character.\n"
                    },
                    "sessionMirroring": {
                        "type": "string",
                        "description": "Session Mirroring (enabled / disabled)\n"
                    },
                    "sessionTicket": {
                        "type": "string",
                        "description": "Session Ticket (enabled / disabled)\n"
                    },
                    "sniDefault": {
                        "type": "string",
                        "description": "Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.When creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.\n"
                    },
                    "sniRequire": {
                        "type": "string",
                        "description": "Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default` is set to `true`.When creating a new profile, the setting is provided by the parent profile\n"
                    },
                    "sslC3d": {
                        "type": "string",
                        "description": "Enables or disables SSL client certificate constrained delegation. The default option is disabled. Conversely, you can specify enabled to use the SSL client certificate constrained delegation.\n"
                    },
                    "sslForwardProxy": {
                        "type": "string",
                        "description": "Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.\n"
                    },
                    "sslForwardProxyBypass": {
                        "type": "string",
                        "description": "Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.\n"
                    },
                    "sslSignHash": {
                        "type": "string",
                        "description": "SSL sign hash (any, sha1, sha256, sha384)\n"
                    },
                    "strictResume": {
                        "type": "string",
                        "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.When creating a new profile, the setting is provided by the parent profile.\n"
                    },
                    "tmOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Enabled selection from a set of industry standard options for handling SSL processing.By default,\nDon't insert empty fragments and No TLSv1.3 are listed as Enabled Options. `Usage` : tm_options    = [\"dont-insert-empty-fragments\",\"no-tlsv1.3\"]\n"
                    },
                    "uncleanShutdown": {
                        "type": "string",
                        "description": "Unclean Shutdown (enabled / disabled)\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileFastHttp:ProfileFastHttp": {
            "description": "`f5bigip.ltm.ProfileFastHttp` Configures a custom profile_fasthttp for use by health checks.\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst sjfasthttpprofile = new f5bigip.ltm.ProfileFastHttp(\"sjfasthttpprofile\", {\n    connpoolMaxreuse: 2,\n    connpoolMaxsize: 2048,\n    connpoolMinsize: 0,\n    connpoolReplenish: \"enabled\",\n    connpoolStep: 4,\n    connpoolidleTimeoutoverride: 0,\n    defaultsFrom: \"/Common/fasthttp\",\n    forcehttp10response: \"disabled\",\n    idleTimeout: 300,\n    maxheaderSize: 32768,\n    name: \"/Common/sjfasthttpprofile\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsjfasthttpprofile = f5bigip.ltm.ProfileFastHttp(\"sjfasthttpprofile\",\n    connpool_maxreuse=2,\n    connpool_maxsize=2048,\n    connpool_minsize=0,\n    connpool_replenish=\"enabled\",\n    connpool_step=4,\n    connpoolidle_timeoutoverride=0,\n    defaults_from=\"/Common/fasthttp\",\n    forcehttp10response=\"disabled\",\n    idle_timeout=300,\n    maxheader_size=32768,\n    name=\"/Common/sjfasthttpprofile\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sjfasthttpprofile = new F5BigIP.Ltm.ProfileFastHttp(\"sjfasthttpprofile\", new F5BigIP.Ltm.ProfileFastHttpArgs\n        {\n            ConnpoolMaxreuse = 2,\n            ConnpoolMaxsize = 2048,\n            ConnpoolMinsize = 0,\n            ConnpoolReplenish = \"enabled\",\n            ConnpoolStep = 4,\n            ConnpoolidleTimeoutoverride = 0,\n            DefaultsFrom = \"/Common/fasthttp\",\n            Forcehttp10response = \"disabled\",\n            IdleTimeout = 300,\n            MaxheaderSize = 32768,\n            Name = \"/Common/sjfasthttpprofile\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileFastHttp(ctx, \"sjfasthttpprofile\", \u0026ltm.ProfileFastHttpArgs{\n\t\t\tConnpoolMaxreuse:            pulumi.Int(2),\n\t\t\tConnpoolMaxsize:             pulumi.Int(2048),\n\t\t\tConnpoolMinsize:             pulumi.Int(0),\n\t\t\tConnpoolReplenish:           pulumi.String(\"enabled\"),\n\t\t\tConnpoolStep:                pulumi.Int(4),\n\t\t\tConnpoolidleTimeoutoverride: pulumi.Int(0),\n\t\t\tDefaultsFrom:                pulumi.String(\"/Common/fasthttp\"),\n\t\t\tForcehttp10response:         pulumi.String(\"disabled\"),\n\t\t\tIdleTimeout:                 pulumi.Int(300),\n\t\t\tMaxheaderSize:               pulumi.Int(32768),\n\t\t\tName:                        pulumi.String(\"/Common/sjfasthttpprofile\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "connpoolMaxreuse": {
                    "type": "integer",
                    "description": "Specifies the maximum number of times that the system can re-use a current connection. The default value is 0 (zero).\n"
                },
                "connpoolMaxsize": {
                    "type": "integer",
                    "description": "Specifies the maximum number of connections to a load balancing pool. A setting of 0 specifies that a pool can accept an unlimited number of connections. The default value is 2048.\n"
                },
                "connpoolMinsize": {
                    "type": "integer",
                    "description": "Specifies the minimum number of connections to a load balancing pool. A setting of 0 specifies that there is no minimum. The default value is 10.\n"
                },
                "connpoolReplenish": {
                    "type": "string",
                    "description": "The default value is enabled. When this option is enabled, the system replenishes the number of connections to a load balancing pool to the number of connections that existed when the server closed the connection to the pool. When disabled, the system replenishes the connection that was closed by the server, only when there are fewer connections to the pool than the number of connections set in the connpool-min-size connections option. Also see the connpool-min-size option..\n"
                },
                "connpoolStep": {
                    "type": "integer",
                    "description": "Specifies the increment in which the system makes additional connections available, when all available connections are in use. The default value is 4.\n"
                },
                "connpoolidleTimeoutoverride": {
                    "type": "integer",
                    "description": "Specifies the number of seconds after which a server-side connection in a OneConnect pool is eligible for deletion, when the connection has no traffic.The value of this option overrides the idle-timeout value that you specify. The default value is 0 (zero) seconds, which disables the override setting.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "forcehttp10response": {
                    "type": "string",
                    "description": "Specifies whether to rewrite the HTTP version in the status line of the server to HTTP 1.0 to discourage the client from pipelining or chunking data. The default value is disabled.\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.When you specify an idle timeout for the Fast L4 profile, the value must be greater than the bigdb database variable Pva.Scrub time in msec for it to work properly.The default value is 300 seconds.\n"
                },
                "maxheaderSize": {
                    "type": "integer",
                    "description": "Specifies the maximum amount of HTTP header data that the system buffers before making a load balancing decision. The default setting is 32768.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_fasthttp\n"
                }
            },
            "required": [
                "connpoolMaxreuse",
                "connpoolMaxsize",
                "connpoolMinsize",
                "connpoolReplenish",
                "connpoolStep",
                "connpoolidleTimeoutoverride",
                "forcehttp10response",
                "idleTimeout",
                "maxheaderSize",
                "name"
            ],
            "inputProperties": {
                "connpoolMaxreuse": {
                    "type": "integer",
                    "description": "Specifies the maximum number of times that the system can re-use a current connection. The default value is 0 (zero).\n"
                },
                "connpoolMaxsize": {
                    "type": "integer",
                    "description": "Specifies the maximum number of connections to a load balancing pool. A setting of 0 specifies that a pool can accept an unlimited number of connections. The default value is 2048.\n"
                },
                "connpoolMinsize": {
                    "type": "integer",
                    "description": "Specifies the minimum number of connections to a load balancing pool. A setting of 0 specifies that there is no minimum. The default value is 10.\n"
                },
                "connpoolReplenish": {
                    "type": "string",
                    "description": "The default value is enabled. When this option is enabled, the system replenishes the number of connections to a load balancing pool to the number of connections that existed when the server closed the connection to the pool. When disabled, the system replenishes the connection that was closed by the server, only when there are fewer connections to the pool than the number of connections set in the connpool-min-size connections option. Also see the connpool-min-size option..\n"
                },
                "connpoolStep": {
                    "type": "integer",
                    "description": "Specifies the increment in which the system makes additional connections available, when all available connections are in use. The default value is 4.\n"
                },
                "connpoolidleTimeoutoverride": {
                    "type": "integer",
                    "description": "Specifies the number of seconds after which a server-side connection in a OneConnect pool is eligible for deletion, when the connection has no traffic.The value of this option overrides the idle-timeout value that you specify. The default value is 0 (zero) seconds, which disables the override setting.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "forcehttp10response": {
                    "type": "string",
                    "description": "Specifies whether to rewrite the HTTP version in the status line of the server to HTTP 1.0 to discourage the client from pipelining or chunking data. The default value is disabled.\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.When you specify an idle timeout for the Fast L4 profile, the value must be greater than the bigdb database variable Pva.Scrub time in msec for it to work properly.The default value is 300 seconds.\n"
                },
                "maxheaderSize": {
                    "type": "integer",
                    "description": "Specifies the maximum amount of HTTP header data that the system buffers before making a load balancing decision. The default setting is 32768.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_fasthttp\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileFastHttp resources.\n",
                "properties": {
                    "connpoolMaxreuse": {
                        "type": "integer",
                        "description": "Specifies the maximum number of times that the system can re-use a current connection. The default value is 0 (zero).\n"
                    },
                    "connpoolMaxsize": {
                        "type": "integer",
                        "description": "Specifies the maximum number of connections to a load balancing pool. A setting of 0 specifies that a pool can accept an unlimited number of connections. The default value is 2048.\n"
                    },
                    "connpoolMinsize": {
                        "type": "integer",
                        "description": "Specifies the minimum number of connections to a load balancing pool. A setting of 0 specifies that there is no minimum. The default value is 10.\n"
                    },
                    "connpoolReplenish": {
                        "type": "string",
                        "description": "The default value is enabled. When this option is enabled, the system replenishes the number of connections to a load balancing pool to the number of connections that existed when the server closed the connection to the pool. When disabled, the system replenishes the connection that was closed by the server, only when there are fewer connections to the pool than the number of connections set in the connpool-min-size connections option. Also see the connpool-min-size option..\n"
                    },
                    "connpoolStep": {
                        "type": "integer",
                        "description": "Specifies the increment in which the system makes additional connections available, when all available connections are in use. The default value is 4.\n"
                    },
                    "connpoolidleTimeoutoverride": {
                        "type": "integer",
                        "description": "Specifies the number of seconds after which a server-side connection in a OneConnect pool is eligible for deletion, when the connection has no traffic.The value of this option overrides the idle-timeout value that you specify. The default value is 0 (zero) seconds, which disables the override setting.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "forcehttp10response": {
                        "type": "string",
                        "description": "Specifies whether to rewrite the HTTP version in the status line of the server to HTTP 1.0 to discourage the client from pipelining or chunking data. The default value is disabled.\n"
                    },
                    "idleTimeout": {
                        "type": "integer",
                        "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.When you specify an idle timeout for the Fast L4 profile, the value must be greater than the bigdb database variable Pva.Scrub time in msec for it to work properly.The default value is 300 seconds.\n"
                    },
                    "maxheaderSize": {
                        "type": "integer",
                        "description": "Specifies the maximum amount of HTTP header data that the system buffers before making a load balancing decision. The default setting is 32768.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the profile_fasthttp\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileFastL4:ProfileFastL4": {
            "description": "`f5bigip.ltm.ProfileFastL4` Configures a custom profile_fastl4 for use by health checks.\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst profileFastl4 = new f5bigip.ltm.ProfileFastL4(\"profile_fastl4\", {\n    clientTimeout: 40,\n    defaultsFrom: \"/Common/fastL4\",\n    explicitflowMigration: \"enabled\",\n    hardwareSyncookie: \"enabled\",\n    idleTimeout: \"200\",\n    iptosToclient: \"pass-through\",\n    iptosToserver: \"pass-through\",\n    keepaliveInterval: \"disabled\", //This cannot take enabled\n    name: \"/Common/sjfastl4profile\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nprofile_fastl4 = f5bigip.ltm.ProfileFastL4(\"profileFastl4\",\n    client_timeout=40,\n    defaults_from=\"/Common/fastL4\",\n    explicitflow_migration=\"enabled\",\n    hardware_syncookie=\"enabled\",\n    idle_timeout=\"200\",\n    iptos_toclient=\"pass-through\",\n    iptos_toserver=\"pass-through\",\n    keepalive_interval=\"disabled\",\n    name=\"/Common/sjfastl4profile\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var profileFastl4 = new F5BigIP.Ltm.ProfileFastL4(\"profileFastl4\", new F5BigIP.Ltm.ProfileFastL4Args\n        {\n            ClientTimeout = 40,\n            DefaultsFrom = \"/Common/fastL4\",\n            ExplicitflowMigration = \"enabled\",\n            HardwareSyncookie = \"enabled\",\n            IdleTimeout = \"200\",\n            IptosToclient = \"pass-through\",\n            IptosToserver = \"pass-through\",\n            KeepaliveInterval = \"disabled\",\n            Name = \"/Common/sjfastl4profile\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileFastL4(ctx, \"profileFastl4\", \u0026ltm.ProfileFastL4Args{\n\t\t\tClientTimeout:         pulumi.Int(40),\n\t\t\tDefaultsFrom:          pulumi.String(\"/Common/fastL4\"),\n\t\t\tExplicitflowMigration: pulumi.String(\"enabled\"),\n\t\t\tHardwareSyncookie:     pulumi.String(\"enabled\"),\n\t\t\tIdleTimeout:           pulumi.String(\"200\"),\n\t\t\tIptosToclient:         pulumi.String(\"pass-through\"),\n\t\t\tIptosToserver:         pulumi.String(\"pass-through\"),\n\t\t\tKeepaliveInterval:     pulumi.String(\"disabled\"),\n\t\t\tName:                  pulumi.String(\"/Common/sjfastl4profile\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBIG-IP LTM fastl4 profiles can be imported using the `name`, e.g.\n\n```sh\n $ pulumi import f5bigip:ltm/profileFastL4:ProfileFastL4 test-fastl4 /Common/test-fastl4\n```\n\n ",
            "properties": {
                "clientTimeout": {
                    "type": "integer",
                    "description": "Specifies late binding client timeout in seconds. This setting specifies the number of seconds allowed for a client to transmit enough data to select a server when late binding is enabled. If it expires timeout-recovery mode will dictate what action to take.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "explicitflowMigration": {
                    "type": "string",
                    "description": "Enables or disables late binding explicit flow migration that allows iRules to control when flows move from software to hardware. Explicit flow migration is disabled by default hence BIG-IP automatically migrates flows from software to hardware.\n"
                },
                "hardwareSyncookie": {
                    "type": "string",
                    "description": "Enables or disables hardware SYN cookie support when PVA10 is present on the system. Note that when you set the hardware syncookie option to enabled, you may also want to set the following bigdb database variables using the \"/sys modify db\" command, based on your requirements: pva.SynCookies.Full.ConnectionThreshold (default: 500000), pva.SynCookies.Assist.ConnectionThreshold (default: 500000) pva.SynCookies.ClientWindow (default: 0). The default value is disabled.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.When you specify an idle timeout for the Fast L4 profile, the value must be greater than the bigdb database variable Pva.Scrub time in msec for it to work properly.The default value is 300 seconds.\n"
                },
                "iptosToclient": {
                    "type": "string",
                    "description": "Specifies an IP ToS number for the client side. This option specifies the Type of Service level that the traffic management system assigns to IP packets when sending them to clients. The default value is 65535 (pass-through), which indicates, do not modify.\n"
                },
                "iptosToserver": {
                    "type": "string",
                    "description": "Specifies an IP ToS number for the server side. This setting specifies the Type of Service level that the traffic management system assigns to IP packets when sending them to servers. The default value is 65535 (pass-through), which indicates, do not modify.\n"
                },
                "keepaliveInterval": {
                    "type": "string",
                    "description": "Specifies the keep alive probe interval, in seconds. The default value is disabled (0 seconds).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_fastl4\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                }
            },
            "required": [
                "clientTimeout",
                "defaultsFrom",
                "explicitflowMigration",
                "hardwareSyncookie",
                "idleTimeout",
                "iptosToclient",
                "iptosToserver",
                "keepaliveInterval",
                "name",
                "partition"
            ],
            "inputProperties": {
                "clientTimeout": {
                    "type": "integer",
                    "description": "Specifies late binding client timeout in seconds. This setting specifies the number of seconds allowed for a client to transmit enough data to select a server when late binding is enabled. If it expires timeout-recovery mode will dictate what action to take.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "explicitflowMigration": {
                    "type": "string",
                    "description": "Enables or disables late binding explicit flow migration that allows iRules to control when flows move from software to hardware. Explicit flow migration is disabled by default hence BIG-IP automatically migrates flows from software to hardware.\n"
                },
                "hardwareSyncookie": {
                    "type": "string",
                    "description": "Enables or disables hardware SYN cookie support when PVA10 is present on the system. Note that when you set the hardware syncookie option to enabled, you may also want to set the following bigdb database variables using the \"/sys modify db\" command, based on your requirements: pva.SynCookies.Full.ConnectionThreshold (default: 500000), pva.SynCookies.Assist.ConnectionThreshold (default: 500000) pva.SynCookies.ClientWindow (default: 0). The default value is disabled.\n"
                },
                "idleTimeout": {
                    "type": "string",
                    "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.When you specify an idle timeout for the Fast L4 profile, the value must be greater than the bigdb database variable Pva.Scrub time in msec for it to work properly.The default value is 300 seconds.\n"
                },
                "iptosToclient": {
                    "type": "string",
                    "description": "Specifies an IP ToS number for the client side. This option specifies the Type of Service level that the traffic management system assigns to IP packets when sending them to clients. The default value is 65535 (pass-through), which indicates, do not modify.\n"
                },
                "iptosToserver": {
                    "type": "string",
                    "description": "Specifies an IP ToS number for the server side. This setting specifies the Type of Service level that the traffic management system assigns to IP packets when sending them to servers. The default value is 65535 (pass-through), which indicates, do not modify.\n"
                },
                "keepaliveInterval": {
                    "type": "string",
                    "description": "Specifies the keep alive probe interval, in seconds. The default value is disabled (0 seconds).\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_fastl4\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileFastL4 resources.\n",
                "properties": {
                    "clientTimeout": {
                        "type": "integer",
                        "description": "Specifies late binding client timeout in seconds. This setting specifies the number of seconds allowed for a client to transmit enough data to select a server when late binding is enabled. If it expires timeout-recovery mode will dictate what action to take.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "explicitflowMigration": {
                        "type": "string",
                        "description": "Enables or disables late binding explicit flow migration that allows iRules to control when flows move from software to hardware. Explicit flow migration is disabled by default hence BIG-IP automatically migrates flows from software to hardware.\n"
                    },
                    "hardwareSyncookie": {
                        "type": "string",
                        "description": "Enables or disables hardware SYN cookie support when PVA10 is present on the system. Note that when you set the hardware syncookie option to enabled, you may also want to set the following bigdb database variables using the \"/sys modify db\" command, based on your requirements: pva.SynCookies.Full.ConnectionThreshold (default: 500000), pva.SynCookies.Assist.ConnectionThreshold (default: 500000) pva.SynCookies.ClientWindow (default: 0). The default value is disabled.\n"
                    },
                    "idleTimeout": {
                        "type": "string",
                        "description": "Specifies an idle timeout in seconds. This setting specifies the number of seconds that a connection is idle before the connection is eligible for deletion.When you specify an idle timeout for the Fast L4 profile, the value must be greater than the bigdb database variable Pva.Scrub time in msec for it to work properly.The default value is 300 seconds.\n"
                    },
                    "iptosToclient": {
                        "type": "string",
                        "description": "Specifies an IP ToS number for the client side. This option specifies the Type of Service level that the traffic management system assigns to IP packets when sending them to clients. The default value is 65535 (pass-through), which indicates, do not modify.\n"
                    },
                    "iptosToserver": {
                        "type": "string",
                        "description": "Specifies an IP ToS number for the server side. This setting specifies the Type of Service level that the traffic management system assigns to IP packets when sending them to servers. The default value is 65535 (pass-through), which indicates, do not modify.\n"
                    },
                    "keepaliveInterval": {
                        "type": "string",
                        "description": "Specifies the keep alive probe interval, in seconds. The default value is disabled (0 seconds).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the profile_fastl4\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Displays the administrative partition within which this profile resides\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileFtp:ProfileFtp": {
            "description": "`f5bigip.ltm.ProfileFtp` Configures a custom profile_ftp.\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n### For Bigip versions (14.x - 16.x)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst sanjose_ftp_profile = new f5bigip.ltm.ProfileFtp(\"sanjose-ftp-profile\", {\n    allowActiveMode: \"enabled\",\n    defaultsFrom: \"/Common/ftp\",\n    description: \"test-tftp-profile\",\n    enforceTlssessionReuse: \"enabled\",\n    ftpsMode: \"allow\",\n    name: \"/Common/sanjose-ftp-profile\",\n    port: 2020,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsanjose_ftp_profile = f5bigip.ltm.ProfileFtp(\"sanjose-ftp-profile\",\n    allow_active_mode=\"enabled\",\n    defaults_from=\"/Common/ftp\",\n    description=\"test-tftp-profile\",\n    enforce_tlssession_reuse=\"enabled\",\n    ftps_mode=\"allow\",\n    name=\"/Common/sanjose-ftp-profile\",\n    port=2020)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sanjose_ftp_profile = new F5BigIP.Ltm.ProfileFtp(\"sanjose-ftp-profile\", new F5BigIP.Ltm.ProfileFtpArgs\n        {\n            AllowActiveMode = \"enabled\",\n            DefaultsFrom = \"/Common/ftp\",\n            Description = \"test-tftp-profile\",\n            EnforceTlssessionReuse = \"enabled\",\n            FtpsMode = \"allow\",\n            Name = \"/Common/sanjose-ftp-profile\",\n            Port = 2020,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileFtp(ctx, \"sanjose_ftp_profile\", \u0026ltm.ProfileFtpArgs{\n\t\t\tAllowActiveMode:        pulumi.String(\"enabled\"),\n\t\t\tDefaultsFrom:           pulumi.String(\"/Common/ftp\"),\n\t\t\tDescription:            pulumi.String(\"test-tftp-profile\"),\n\t\t\tEnforceTlssessionReuse: pulumi.String(\"enabled\"),\n\t\t\tFtpsMode:               pulumi.String(\"allow\"),\n\t\t\tName:                   pulumi.String(\"/Common/sanjose-ftp-profile\"),\n\t\t\tPort:                   pulumi.Int(2020),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% example %}}\n### For Bigip versions (12.x - 13.x)\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst sanjose_ftp_profile = new f5bigip.ltm.ProfileFtp(\"sanjose-ftp-profile\", {\n    allowFtps: \"enabled\",\n    defaultsFrom: \"/Common/ftp\",\n    description: \"test-tftp-profile\",\n    name: \"/Common/sanjose-ftp-profile\",\n    port: 2020,\n    translateExtended: \"enabled\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsanjose_ftp_profile = f5bigip.ltm.ProfileFtp(\"sanjose-ftp-profile\",\n    allow_ftps=\"enabled\",\n    defaults_from=\"/Common/ftp\",\n    description=\"test-tftp-profile\",\n    name=\"/Common/sanjose-ftp-profile\",\n    port=2020,\n    translate_extended=\"enabled\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sanjose_ftp_profile = new F5BigIP.Ltm.ProfileFtp(\"sanjose-ftp-profile\", new F5BigIP.Ltm.ProfileFtpArgs\n        {\n            AllowFtps = \"enabled\",\n            DefaultsFrom = \"/Common/ftp\",\n            Description = \"test-tftp-profile\",\n            Name = \"/Common/sanjose-ftp-profile\",\n            Port = 2020,\n            TranslateExtended = \"enabled\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileFtp(ctx, \"sanjose_ftp_profile\", \u0026ltm.ProfileFtpArgs{\n\t\t\tAllowFtps:         pulumi.String(\"enabled\"),\n\t\t\tDefaultsFrom:      pulumi.String(\"/Common/ftp\"),\n\t\t\tDescription:       pulumi.String(\"test-tftp-profile\"),\n\t\t\tName:              pulumi.String(\"/Common/sanjose-ftp-profile\"),\n\t\t\tPort:              pulumi.Int(2020),\n\t\t\tTranslateExtended: pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% /examples %}}\n## Common Arguments for all versions\n\n* `security` - (Optional)Specifies, when checked (enabled), that the system inspects FTP traffic for security vulnerabilities using an FTP security profile. This option is available only on systems licensed for BIG-IP ASM.\n\n* `port` - (Optional)Allows you to configure the FTP service to run on an alternate port. The default is 20.\n\n* `log_profile` - (Optional)Configures the ALG log profile that controls logging\n\n* `log_publisher` - (Optional)Configures the log publisher that handles events logging for this profile\n\n*  `inherit_parent_profile` - (Optional)Enables the FTP data channel to inherit the TCP profile used by the control channel.If disabled,the data channel uses FastL4 only.\n\n* `description` - (Optional)User defined description for FTP profile\n",
            "properties": {
                "allowActiveMode": {
                    "type": "string",
                    "description": "Specifies, when selected (enabled), that the system allows FTP Active Transfer mode. The default value is enabled\n"
                },
                "allowFtps": {
                    "type": "string",
                    "description": "Allow explicit FTPS negotiation. The default is disabled.When enabled (selected), that the system allows explicit FTPS negotiation for SSL or TLS.\n"
                },
                "appService": {
                    "type": "string",
                    "description": "The application service to which the object belongs.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User defined description\n"
                },
                "enforceTlssessionReuse": {
                    "type": "string",
                    "description": "Specifies, when selected (enabled), that the system enforces the data connection to reuse a TLS session. The default value is unchecked (disabled)\n"
                },
                "ftpsMode": {
                    "type": "string",
                    "description": "Specifies if you want to Disallow, Allow, or Require FTPS mode. The default is Disallow\n"
                },
                "inheritParentProfile": {
                    "type": "string",
                    "description": "Enables the FTP data channel to inherit the TCP profile used by the control channel.If disabled,the data channel uses\nFastL4 only.\n"
                },
                "inheritVlanList": {
                    "type": "string",
                    "description": "inherent vlan list\n"
                },
                "logProfile": {
                    "type": "string",
                    "description": "Configures the ALG log profile that controls logging\n"
                },
                "logPublisher": {
                    "type": "string",
                    "description": "Configures the log publisher that handles events logging for this profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_ftp\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Specifies a service for the data channel port used for this FTP profile. The default port is ftp-data.\n"
                },
                "security": {
                    "type": "string",
                    "description": "Enables secure FTP traffic for the BIG-IP Application Security Manager. You can set the security option only if the\nsystem is licensed for the BIG-IP Application Security Manager. The default value is disabled.\n"
                },
                "translateExtended": {
                    "type": "string",
                    "description": "Specifies, when selected (enabled), that the system uses ensures compatibility between IP version 4 and IP version 6 clients and servers when using the FTP protocol. The default is selected (enabled).\n"
                }
            },
            "required": [
                "defaultsFrom",
                "logProfile",
                "logPublisher",
                "name",
                "partition",
                "security"
            ],
            "inputProperties": {
                "allowActiveMode": {
                    "type": "string",
                    "description": "Specifies, when selected (enabled), that the system allows FTP Active Transfer mode. The default value is enabled\n"
                },
                "allowFtps": {
                    "type": "string",
                    "description": "Allow explicit FTPS negotiation. The default is disabled.When enabled (selected), that the system allows explicit FTPS negotiation for SSL or TLS.\n"
                },
                "appService": {
                    "type": "string",
                    "description": "The application service to which the object belongs.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "User defined description\n"
                },
                "enforceTlssessionReuse": {
                    "type": "string",
                    "description": "Specifies, when selected (enabled), that the system enforces the data connection to reuse a TLS session. The default value is unchecked (disabled)\n"
                },
                "ftpsMode": {
                    "type": "string",
                    "description": "Specifies if you want to Disallow, Allow, or Require FTPS mode. The default is Disallow\n"
                },
                "inheritParentProfile": {
                    "type": "string",
                    "description": "Enables the FTP data channel to inherit the TCP profile used by the control channel.If disabled,the data channel uses\nFastL4 only.\n"
                },
                "inheritVlanList": {
                    "type": "string",
                    "description": "inherent vlan list\n"
                },
                "logProfile": {
                    "type": "string",
                    "description": "Configures the ALG log profile that controls logging\n"
                },
                "logPublisher": {
                    "type": "string",
                    "description": "Configures the log publisher that handles events logging for this profile\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_ftp\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Specifies a service for the data channel port used for this FTP profile. The default port is ftp-data.\n"
                },
                "security": {
                    "type": "string",
                    "description": "Enables secure FTP traffic for the BIG-IP Application Security Manager. You can set the security option only if the\nsystem is licensed for the BIG-IP Application Security Manager. The default value is disabled.\n"
                },
                "translateExtended": {
                    "type": "string",
                    "description": "Specifies, when selected (enabled), that the system uses ensures compatibility between IP version 4 and IP version 6 clients and servers when using the FTP protocol. The default is selected (enabled).\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileFtp resources.\n",
                "properties": {
                    "allowActiveMode": {
                        "type": "string",
                        "description": "Specifies, when selected (enabled), that the system allows FTP Active Transfer mode. The default value is enabled\n"
                    },
                    "allowFtps": {
                        "type": "string",
                        "description": "Allow explicit FTPS negotiation. The default is disabled.When enabled (selected), that the system allows explicit FTPS negotiation for SSL or TLS.\n"
                    },
                    "appService": {
                        "type": "string",
                        "description": "The application service to which the object belongs.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User defined description\n"
                    },
                    "enforceTlssessionReuse": {
                        "type": "string",
                        "description": "Specifies, when selected (enabled), that the system enforces the data connection to reuse a TLS session. The default value is unchecked (disabled)\n"
                    },
                    "ftpsMode": {
                        "type": "string",
                        "description": "Specifies if you want to Disallow, Allow, or Require FTPS mode. The default is Disallow\n"
                    },
                    "inheritParentProfile": {
                        "type": "string",
                        "description": "Enables the FTP data channel to inherit the TCP profile used by the control channel.If disabled,the data channel uses\nFastL4 only.\n"
                    },
                    "inheritVlanList": {
                        "type": "string",
                        "description": "inherent vlan list\n"
                    },
                    "logProfile": {
                        "type": "string",
                        "description": "Configures the ALG log profile that controls logging\n"
                    },
                    "logPublisher": {
                        "type": "string",
                        "description": "Configures the log publisher that handles events logging for this profile\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the profile_ftp\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Displays the administrative partition within which this profile resides\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Specifies a service for the data channel port used for this FTP profile. The default port is ftp-data.\n"
                    },
                    "security": {
                        "type": "string",
                        "description": "Enables secure FTP traffic for the BIG-IP Application Security Manager. You can set the security option only if the\nsystem is licensed for the BIG-IP Application Security Manager. The default value is disabled.\n"
                    },
                    "translateExtended": {
                        "type": "string",
                        "description": "Specifies, when selected (enabled), that the system uses ensures compatibility between IP version 4 and IP version 6 clients and servers when using the FTP protocol. The default is selected (enabled).\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileHttp2:ProfileHttp2": {
            "description": "`f5bigip.ltm.ProfileHttp2` Configures a custom profile_http2 for use by health checks.\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst nyhttp2 = new f5bigip.ltm.ProfileHttp2(\"nyhttp2\", {\n    name: \"/Common/test-profile-http2\",\n    frameSize: 2021,\n    receiveWindow: 31,\n    writeSize: 16380,\n    headerTableSize: 4092,\n    includeContentLength: \"enabled\",\n    enforceTlsRequirements: \"enabled\",\n    insertHeader: \"disabled\",\n    concurrentStreamsPerConnection: 30,\n    connectionIdleTimeout: 100,\n    activationModes: [\"always\"],\n});\n//Child Profile which inherits parent http2 profile\nconst nyhttp2_child = new f5bigip.ltm.ProfileHttp2(\"nyhttp2-child\", {\n    name: \"/Common/test-profile-http2-child\",\n    defaultsFrom: nyhttp2.name,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nnyhttp2 = f5bigip.ltm.ProfileHttp2(\"nyhttp2\",\n    name=\"/Common/test-profile-http2\",\n    frame_size=2021,\n    receive_window=31,\n    write_size=16380,\n    header_table_size=4092,\n    include_content_length=\"enabled\",\n    enforce_tls_requirements=\"enabled\",\n    insert_header=\"disabled\",\n    concurrent_streams_per_connection=30,\n    connection_idle_timeout=100,\n    activation_modes=[\"always\"])\n#Child Profile which inherits parent http2 profile\nnyhttp2_child = f5bigip.ltm.ProfileHttp2(\"nyhttp2-child\",\n    name=\"/Common/test-profile-http2-child\",\n    defaults_from=nyhttp2.name)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var nyhttp2 = new F5BigIP.Ltm.ProfileHttp2(\"nyhttp2\", new F5BigIP.Ltm.ProfileHttp2Args\n        {\n            Name = \"/Common/test-profile-http2\",\n            FrameSize = 2021,\n            ReceiveWindow = 31,\n            WriteSize = 16380,\n            HeaderTableSize = 4092,\n            IncludeContentLength = \"enabled\",\n            EnforceTlsRequirements = \"enabled\",\n            InsertHeader = \"disabled\",\n            ConcurrentStreamsPerConnection = 30,\n            ConnectionIdleTimeout = 100,\n            ActivationModes = \n            {\n                \"always\",\n            },\n        });\n        //Child Profile which inherits parent http2 profile\n        var nyhttp2_child = new F5BigIP.Ltm.ProfileHttp2(\"nyhttp2-child\", new F5BigIP.Ltm.ProfileHttp2Args\n        {\n            Name = \"/Common/test-profile-http2-child\",\n            DefaultsFrom = nyhttp2.Name,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tnyhttp2, err := ltm.NewProfileHttp2(ctx, \"nyhttp2\", \u0026ltm.ProfileHttp2Args{\n\t\t\tName:                           pulumi.String(\"/Common/test-profile-http2\"),\n\t\t\tFrameSize:                      pulumi.Int(2021),\n\t\t\tReceiveWindow:                  pulumi.Int(31),\n\t\t\tWriteSize:                      pulumi.Int(16380),\n\t\t\tHeaderTableSize:                pulumi.Int(4092),\n\t\t\tIncludeContentLength:           pulumi.String(\"enabled\"),\n\t\t\tEnforceTlsRequirements:         pulumi.String(\"enabled\"),\n\t\t\tInsertHeader:                   pulumi.String(\"disabled\"),\n\t\t\tConcurrentStreamsPerConnection: pulumi.Int(30),\n\t\t\tConnectionIdleTimeout:          pulumi.Int(100),\n\t\t\tActivationModes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"always\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewProfileHttp2(ctx, \"nyhttp2_child\", \u0026ltm.ProfileHttp2Args{\n\t\t\tName:         pulumi.String(\"/Common/test-profile-http2-child\"),\n\t\t\tDefaultsFrom: nyhttp2.Name,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "activationModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This setting specifies the condition that will cause the BIG-IP system to handle an incoming connection as an HTTP/2 connection, Allowed values : `[“alpn”]` (or) `[“always”]`.\n"
                },
                "concurrentStreamsPerConnection": {
                    "type": "integer",
                    "description": "Specifies how many concurrent requests are allowed to be outstanding on a single HTTP/2 connection.\n"
                },
                "connectionIdleTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is idle before the connection is eligible for deletion.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "enforceTlsRequirements": {
                    "type": "string",
                    "description": "Enable or disable enforcement of TLS requirements,Allowed Values : `\"enabled\"/\"disabled\"` [Default:`\"enabled\"`].\n"
                },
                "frameSize": {
                    "type": "integer",
                    "description": "The size of the data frames, in bytes, that the HTTP/2 protocol sends to the client. `Default: 2048`.\n"
                },
                "headerTableSize": {
                    "type": "integer",
                    "description": "The size of the header table, in KB, for the HTTP headers that the HTTP/2 protocol compresses to save bandwidth.\n"
                },
                "includeContentLength": {
                    "type": "string",
                    "description": "Enable to include content-length in HTTP/2 headers,Default : disabled\n"
                },
                "insertHeader": {
                    "type": "string",
                    "description": "This setting specifies whether the BIG-IP system should add an HTTP header to the HTTP request to show that the request was received over HTTP/2, Allowed Values : `\"enabled\"/\"disabled\"` [ Default: `\"disabled\"`].\n"
                },
                "insertHeaderName": {
                    "type": "string",
                    "description": "This setting specifies the name of the header that the BIG-IP system will add to the HTTP request when the Insert Header is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-http2-profile`.\n"
                },
                "receiveWindow": {
                    "type": "integer",
                    "description": "The flow-control size for upload streams, in KB. `Default: 32`.\n"
                },
                "writeSize": {
                    "type": "integer",
                    "description": "The total size of combined data frames, in bytes, that the HTTP/2 protocol sends in a single write function. `Default: 16384`\".\n"
                }
            },
            "required": [
                "activationModes",
                "concurrentStreamsPerConnection",
                "connectionIdleTimeout",
                "defaultsFrom",
                "enforceTlsRequirements",
                "frameSize",
                "headerTableSize",
                "includeContentLength",
                "insertHeader",
                "insertHeaderName",
                "name",
                "receiveWindow",
                "writeSize"
            ],
            "inputProperties": {
                "activationModes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "This setting specifies the condition that will cause the BIG-IP system to handle an incoming connection as an HTTP/2 connection, Allowed values : `[“alpn”]` (or) `[“always”]`.\n"
                },
                "concurrentStreamsPerConnection": {
                    "type": "integer",
                    "description": "Specifies how many concurrent requests are allowed to be outstanding on a single HTTP/2 connection.\n"
                },
                "connectionIdleTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is idle before the connection is eligible for deletion.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "enforceTlsRequirements": {
                    "type": "string",
                    "description": "Enable or disable enforcement of TLS requirements,Allowed Values : `\"enabled\"/\"disabled\"` [Default:`\"enabled\"`].\n"
                },
                "frameSize": {
                    "type": "integer",
                    "description": "The size of the data frames, in bytes, that the HTTP/2 protocol sends to the client. `Default: 2048`.\n"
                },
                "headerTableSize": {
                    "type": "integer",
                    "description": "The size of the header table, in KB, for the HTTP headers that the HTTP/2 protocol compresses to save bandwidth.\n"
                },
                "includeContentLength": {
                    "type": "string",
                    "description": "Enable to include content-length in HTTP/2 headers,Default : disabled\n"
                },
                "insertHeader": {
                    "type": "string",
                    "description": "This setting specifies whether the BIG-IP system should add an HTTP header to the HTTP request to show that the request was received over HTTP/2, Allowed Values : `\"enabled\"/\"disabled\"` [ Default: `\"disabled\"`].\n"
                },
                "insertHeaderName": {
                    "type": "string",
                    "description": "This setting specifies the name of the header that the BIG-IP system will add to the HTTP request when the Insert Header is enabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-http2-profile`.\n"
                },
                "receiveWindow": {
                    "type": "integer",
                    "description": "The flow-control size for upload streams, in KB. `Default: 32`.\n"
                },
                "writeSize": {
                    "type": "integer",
                    "description": "The total size of combined data frames, in bytes, that the HTTP/2 protocol sends in a single write function. `Default: 16384`\".\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileHttp2 resources.\n",
                "properties": {
                    "activationModes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "This setting specifies the condition that will cause the BIG-IP system to handle an incoming connection as an HTTP/2 connection, Allowed values : `[“alpn”]` (or) `[“always”]`.\n"
                    },
                    "concurrentStreamsPerConnection": {
                        "type": "integer",
                        "description": "Specifies how many concurrent requests are allowed to be outstanding on a single HTTP/2 connection.\n"
                    },
                    "connectionIdleTimeout": {
                        "type": "integer",
                        "description": "Specifies the number of seconds that a connection is idle before the connection is eligible for deletion.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "enforceTlsRequirements": {
                        "type": "string",
                        "description": "Enable or disable enforcement of TLS requirements,Allowed Values : `\"enabled\"/\"disabled\"` [Default:`\"enabled\"`].\n"
                    },
                    "frameSize": {
                        "type": "integer",
                        "description": "The size of the data frames, in bytes, that the HTTP/2 protocol sends to the client. `Default: 2048`.\n"
                    },
                    "headerTableSize": {
                        "type": "integer",
                        "description": "The size of the header table, in KB, for the HTTP headers that the HTTP/2 protocol compresses to save bandwidth.\n"
                    },
                    "includeContentLength": {
                        "type": "string",
                        "description": "Enable to include content-length in HTTP/2 headers,Default : disabled\n"
                    },
                    "insertHeader": {
                        "type": "string",
                        "description": "This setting specifies whether the BIG-IP system should add an HTTP header to the HTTP request to show that the request was received over HTTP/2, Allowed Values : `\"enabled\"/\"disabled\"` [ Default: `\"disabled\"`].\n"
                    },
                    "insertHeaderName": {
                        "type": "string",
                        "description": "This setting specifies the name of the header that the BIG-IP system will add to the HTTP request when the Insert Header is enabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-http2-profile`.\n"
                    },
                    "receiveWindow": {
                        "type": "integer",
                        "description": "The flow-control size for upload streams, in KB. `Default: 32`.\n"
                    },
                    "writeSize": {
                        "type": "integer",
                        "description": "The total size of combined data frames, in bytes, that the HTTP/2 protocol sends in a single write function. `Default: 16384`\".\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileHttp:ProfileHttp": {
            "description": "`f5bigip.ltm.ProfileHttp` Configures a custom profile_http for use by health checks.\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst sanjose_http = new f5bigip.ltm.ProfileHttp(\"sanjose-http\", {\n    defaultsFrom: \"/Common/http\",\n    fallbackHost: \"titanic\",\n    fallbackStatusCodes: [\n        \"400\",\n        \"500\",\n        \"300\",\n    ],\n    name: \"/Common/sanjose-http\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsanjose_http = f5bigip.ltm.ProfileHttp(\"sanjose-http\",\n    defaults_from=\"/Common/http\",\n    fallback_host=\"titanic\",\n    fallback_status_codes=[\n        \"400\",\n        \"500\",\n        \"300\",\n    ],\n    name=\"/Common/sanjose-http\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sanjose_http = new F5BigIP.Ltm.ProfileHttp(\"sanjose-http\", new F5BigIP.Ltm.ProfileHttpArgs\n        {\n            DefaultsFrom = \"/Common/http\",\n            FallbackHost = \"titanic\",\n            FallbackStatusCodes = \n            {\n                \"400\",\n                \"500\",\n                \"300\",\n            },\n            Name = \"/Common/sanjose-http\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileHttp(ctx, \"sanjose_http\", \u0026ltm.ProfileHttpArgs{\n\t\t\tDefaultsFrom: pulumi.String(\"/Common/http\"),\n\t\t\tFallbackHost: pulumi.String(\"titanic\"),\n\t\t\tFallbackStatusCodes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"400\"),\n\t\t\t\tpulumi.String(\"500\"),\n\t\t\t\tpulumi.String(\"300\"),\n\t\t\t},\n\t\t\tName: pulumi.String(\"/Common/sanjose-http\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBIG-IP LTM http profiles can be imported using the `name`, e.g. bash\n\n```sh\n $ pulumi import f5bigip:ltm/profileHttp:ProfileHttp test-http /Common/test-http\n```\n\n ",
            "properties": {
                "acceptXff": {
                    "type": "string",
                    "description": "Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.\n"
                },
                "appService": {
                    "type": "string",
                    "description": "The application service to which the object belongs.\n"
                },
                "basicAuthRealm": {
                    "type": "string",
                    "description": "Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is `none`\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies user-defined description.\n"
                },
                "encryptCookieSecret": {
                    "type": "string",
                    "description": "Type a passphrase for cookie encryption.\n"
                },
                "encryptCookies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Type the cookie names for the system to encrypt.\n"
                },
                "fallbackHost": {
                    "type": "string",
                    "description": "Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number\n"
                },
                "fallbackStatusCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies one or more three-digit status codes that can be returned by an HTTP server,that should trigger a redirection to the fallback host.\n"
                },
                "headErase": {
                    "type": "string",
                    "description": "Specifies the header string that you want to erase from an HTTP request. Default is `none`.\n"
                },
                "headInsert": {
                    "type": "string",
                    "description": "Specifies a quoted header string that you want to insert into an HTTP request.Default is `none`.\n"
                },
                "insertXforwardedFor": {
                    "type": "string",
                    "description": "Specifies, when enabled, that the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling. The default is `Disabled`.\n"
                },
                "lwsSeparator": {
                    "type": "string",
                    "description": "Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you\nspecify in the LWS Maximum Columns setting.\n"
                },
                "lwsWidth": {
                    "type": "integer",
                    "description": "Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you specify in the LWS Maximum Columns setting.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the http profile,name of Profile should be full path. Full path is the combination of the `partition + profile name`,For example `/Common/test-http-profile`.\n"
                },
                "oneconnectTransformations": {
                    "type": "string",
                    "description": "Enables the system to perform HTTP header transformations for the purpose of  keeping server-side connections open. This feature requires configuration of a OneConnect profile\n"
                },
                "proxyType": {
                    "type": "string",
                    "description": "Specifies the proxy mode for this profile: reverse, explicit, or transparent. The default is `reverse`.\n"
                },
                "redirectRewrite": {
                    "type": "string",
                    "description": "Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses. The default is `none`.\n"
                },
                "requestChunking": {
                    "type": "string",
                    "description": "Specifies how the system handles HTTP content that is chunked by a client. The default is `preserve`.\n"
                },
                "responseChunking": {
                    "type": "string",
                    "description": "Specifies how the system handles HTTP content that is chunked by a server. The default is `selective`.\n"
                },
                "responseHeadersPermitteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies headers that the BIG-IP system allows in an HTTP response.If you are specifying more than one header, separate the headers with a blank space.\n"
                },
                "serverAgentName": {
                    "type": "string",
                    "description": "Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is BigIP. If no\nstring is specified, then no Server header will be added to such responses\n"
                },
                "tmPartition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides.\n"
                },
                "viaHostName": {
                    "type": "string",
                    "description": "Specifies the hostname to include into Via header\n"
                },
                "viaRequest": {
                    "type": "string",
                    "description": "Specifies whether to append, remove, or preserve a Via header in an HTTP request\n"
                },
                "viaResponse": {
                    "type": "string",
                    "description": "Specifies whether to append, remove, or preserve a Via header in an HTTP request\n"
                },
                "xffAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies alternative XFF headers instead of the default X-forwarded-for header.\n"
                }
            },
            "required": [
                "acceptXff",
                "basicAuthRealm",
                "defaultsFrom",
                "description",
                "fallbackHost",
                "headErase",
                "headInsert",
                "insertXforwardedFor",
                "lwsSeparator",
                "lwsWidth",
                "name",
                "oneconnectTransformations",
                "proxyType",
                "redirectRewrite",
                "requestChunking",
                "responseChunking",
                "responseHeadersPermitteds",
                "serverAgentName",
                "viaHostName",
                "viaRequest",
                "viaResponse",
                "xffAlternativeNames"
            ],
            "inputProperties": {
                "acceptXff": {
                    "type": "string",
                    "description": "Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.\n"
                },
                "appService": {
                    "type": "string",
                    "description": "The application service to which the object belongs.\n"
                },
                "basicAuthRealm": {
                    "type": "string",
                    "description": "Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is `none`\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "description": {
                    "type": "string",
                    "description": "Specifies user-defined description.\n"
                },
                "encryptCookieSecret": {
                    "type": "string",
                    "description": "Type a passphrase for cookie encryption.\n"
                },
                "encryptCookies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Type the cookie names for the system to encrypt.\n"
                },
                "fallbackHost": {
                    "type": "string",
                    "description": "Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number\n"
                },
                "fallbackStatusCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies one or more three-digit status codes that can be returned by an HTTP server,that should trigger a redirection to the fallback host.\n"
                },
                "headErase": {
                    "type": "string",
                    "description": "Specifies the header string that you want to erase from an HTTP request. Default is `none`.\n"
                },
                "headInsert": {
                    "type": "string",
                    "description": "Specifies a quoted header string that you want to insert into an HTTP request.Default is `none`.\n"
                },
                "insertXforwardedFor": {
                    "type": "string",
                    "description": "Specifies, when enabled, that the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling. The default is `Disabled`.\n"
                },
                "lwsSeparator": {
                    "type": "string",
                    "description": "Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you\nspecify in the LWS Maximum Columns setting.\n"
                },
                "lwsWidth": {
                    "type": "integer",
                    "description": "Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you specify in the LWS Maximum Columns setting.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the http profile,name of Profile should be full path. Full path is the combination of the `partition + profile name`,For example `/Common/test-http-profile`.\n"
                },
                "oneconnectTransformations": {
                    "type": "string",
                    "description": "Enables the system to perform HTTP header transformations for the purpose of  keeping server-side connections open. This feature requires configuration of a OneConnect profile\n"
                },
                "proxyType": {
                    "type": "string",
                    "description": "Specifies the proxy mode for this profile: reverse, explicit, or transparent. The default is `reverse`.\n"
                },
                "redirectRewrite": {
                    "type": "string",
                    "description": "Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses. The default is `none`.\n"
                },
                "requestChunking": {
                    "type": "string",
                    "description": "Specifies how the system handles HTTP content that is chunked by a client. The default is `preserve`.\n"
                },
                "responseChunking": {
                    "type": "string",
                    "description": "Specifies how the system handles HTTP content that is chunked by a server. The default is `selective`.\n"
                },
                "responseHeadersPermitteds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies headers that the BIG-IP system allows in an HTTP response.If you are specifying more than one header, separate the headers with a blank space.\n"
                },
                "serverAgentName": {
                    "type": "string",
                    "description": "Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is BigIP. If no\nstring is specified, then no Server header will be added to such responses\n"
                },
                "tmPartition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides.\n"
                },
                "viaHostName": {
                    "type": "string",
                    "description": "Specifies the hostname to include into Via header\n"
                },
                "viaRequest": {
                    "type": "string",
                    "description": "Specifies whether to append, remove, or preserve a Via header in an HTTP request\n"
                },
                "viaResponse": {
                    "type": "string",
                    "description": "Specifies whether to append, remove, or preserve a Via header in an HTTP request\n"
                },
                "xffAlternativeNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies alternative XFF headers instead of the default X-forwarded-for header.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileHttp resources.\n",
                "properties": {
                    "acceptXff": {
                        "type": "string",
                        "description": "Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.\n"
                    },
                    "appService": {
                        "type": "string",
                        "description": "The application service to which the object belongs.\n"
                    },
                    "basicAuthRealm": {
                        "type": "string",
                        "description": "Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is `none`\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "Specifies user-defined description.\n"
                    },
                    "encryptCookieSecret": {
                        "type": "string",
                        "description": "Type a passphrase for cookie encryption.\n"
                    },
                    "encryptCookies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Type the cookie names for the system to encrypt.\n"
                    },
                    "fallbackHost": {
                        "type": "string",
                        "description": "Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number\n"
                    },
                    "fallbackStatusCodes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies one or more three-digit status codes that can be returned by an HTTP server,that should trigger a redirection to the fallback host.\n"
                    },
                    "headErase": {
                        "type": "string",
                        "description": "Specifies the header string that you want to erase from an HTTP request. Default is `none`.\n"
                    },
                    "headInsert": {
                        "type": "string",
                        "description": "Specifies a quoted header string that you want to insert into an HTTP request.Default is `none`.\n"
                    },
                    "insertXforwardedFor": {
                        "type": "string",
                        "description": "Specifies, when enabled, that the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling. The default is `Disabled`.\n"
                    },
                    "lwsSeparator": {
                        "type": "string",
                        "description": "Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you\nspecify in the LWS Maximum Columns setting.\n"
                    },
                    "lwsWidth": {
                        "type": "integer",
                        "description": "Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you specify in the LWS Maximum Columns setting.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the http profile,name of Profile should be full path. Full path is the combination of the `partition + profile name`,For example `/Common/test-http-profile`.\n"
                    },
                    "oneconnectTransformations": {
                        "type": "string",
                        "description": "Enables the system to perform HTTP header transformations for the purpose of  keeping server-side connections open. This feature requires configuration of a OneConnect profile\n"
                    },
                    "proxyType": {
                        "type": "string",
                        "description": "Specifies the proxy mode for this profile: reverse, explicit, or transparent. The default is `reverse`.\n"
                    },
                    "redirectRewrite": {
                        "type": "string",
                        "description": "Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses. The default is `none`.\n"
                    },
                    "requestChunking": {
                        "type": "string",
                        "description": "Specifies how the system handles HTTP content that is chunked by a client. The default is `preserve`.\n"
                    },
                    "responseChunking": {
                        "type": "string",
                        "description": "Specifies how the system handles HTTP content that is chunked by a server. The default is `selective`.\n"
                    },
                    "responseHeadersPermitteds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies headers that the BIG-IP system allows in an HTTP response.If you are specifying more than one header, separate the headers with a blank space.\n"
                    },
                    "serverAgentName": {
                        "type": "string",
                        "description": "Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is BigIP. If no\nstring is specified, then no Server header will be added to such responses\n"
                    },
                    "tmPartition": {
                        "type": "string",
                        "description": "Displays the administrative partition within which this profile resides.\n"
                    },
                    "viaHostName": {
                        "type": "string",
                        "description": "Specifies the hostname to include into Via header\n"
                    },
                    "viaRequest": {
                        "type": "string",
                        "description": "Specifies whether to append, remove, or preserve a Via header in an HTTP request\n"
                    },
                    "viaResponse": {
                        "type": "string",
                        "description": "Specifies whether to append, remove, or preserve a Via header in an HTTP request\n"
                    },
                    "xffAlternativeNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies alternative XFF headers instead of the default X-forwarded-for header.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileHttpCompress:ProfileHttpCompress": {
            "description": "`f5bigip.ltm.ProfileHttpCompress`  Virtual server HTTP compression profile configuration\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst sjhttpcompression = new f5bigip.ltm.ProfileHttpCompress(\"sjhttpcompression\", {\n    contentTypeExcludes: [\"nicecontentexclude.com\"],\n    contentTypeIncludes: [\"nicecontent.com\"],\n    defaultsFrom: \"/Common/httpcompression\",\n    name: \"/Common/sjhttpcompression2\",\n    uriExcludes: [\n        \"www.abc.f5.com\",\n        \"www.abc2.f5.com\",\n    ],\n    uriIncludes: [\"www.xyzbc.cisco.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsjhttpcompression = f5bigip.ltm.ProfileHttpCompress(\"sjhttpcompression\",\n    content_type_excludes=[\"nicecontentexclude.com\"],\n    content_type_includes=[\"nicecontent.com\"],\n    defaults_from=\"/Common/httpcompression\",\n    name=\"/Common/sjhttpcompression2\",\n    uri_excludes=[\n        \"www.abc.f5.com\",\n        \"www.abc2.f5.com\",\n    ],\n    uri_includes=[\"www.xyzbc.cisco.com\"])\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sjhttpcompression = new F5BigIP.Ltm.ProfileHttpCompress(\"sjhttpcompression\", new F5BigIP.Ltm.ProfileHttpCompressArgs\n        {\n            ContentTypeExcludes = \n            {\n                \"nicecontentexclude.com\",\n            },\n            ContentTypeIncludes = \n            {\n                \"nicecontent.com\",\n            },\n            DefaultsFrom = \"/Common/httpcompression\",\n            Name = \"/Common/sjhttpcompression2\",\n            UriExcludes = \n            {\n                \"www.abc.f5.com\",\n                \"www.abc2.f5.com\",\n            },\n            UriIncludes = \n            {\n                \"www.xyzbc.cisco.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileHttpCompress(ctx, \"sjhttpcompression\", \u0026ltm.ProfileHttpCompressArgs{\n\t\t\tContentTypeExcludes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"nicecontentexclude.com\"),\n\t\t\t},\n\t\t\tContentTypeIncludes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"nicecontent.com\"),\n\t\t\t},\n\t\t\tDefaultsFrom: pulumi.String(\"/Common/httpcompression\"),\n\t\t\tName:         pulumi.String(\"/Common/sjhttpcompression2\"),\n\t\t\tUriExcludes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"www.abc.f5.com\"),\n\t\t\t\tpulumi.String(\"www.abc2.f5.com\"),\n\t\t\t},\n\t\t\tUriIncludes: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"www.xyzbc.cisco.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "contentTypeExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.\n"
                },
                "contentTypeIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_httpcompress\n"
                },
                "uriExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.\n"
                },
                "uriIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.\n"
                }
            },
            "required": [
                "contentTypeExcludes",
                "contentTypeIncludes",
                "defaultsFrom",
                "name",
                "uriExcludes",
                "uriIncludes"
            ],
            "inputProperties": {
                "contentTypeExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.\n"
                },
                "contentTypeIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_httpcompress\n"
                },
                "uriExcludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.\n"
                },
                "uriIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileHttpCompress resources.\n",
                "properties": {
                    "contentTypeExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.\n"
                    },
                    "contentTypeIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the profile_httpcompress\n"
                    },
                    "uriExcludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.\n"
                    },
                    "uriIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileOneConnect:ProfileOneConnect": {
            "description": "`f5bigip.ltm.ProfileOneConnect` Configures a custom profile_oneconnect for use by health checks.\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test_oneconnect = new f5bigip.ltm.ProfileOneConnect(\"test-oneconnect\", {\n    name: \"/Common/test-oneconnect\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_oneconnect = f5bigip.ltm.ProfileOneConnect(\"test-oneconnect\", name=\"/Common/test-oneconnect\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_oneconnect = new F5BigIP.Ltm.ProfileOneConnect(\"test-oneconnect\", new F5BigIP.Ltm.ProfileOneConnectArgs\n        {\n            Name = \"/Common/test-oneconnect\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileOneConnect(ctx, \"test_oneconnect\", \u0026ltm.ProfileOneConnectArgs{\n\t\t\tName: pulumi.String(\"/Common/test-oneconnect\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\nBIG-IP LTM oneconnect profiles can be imported using the `name` , e.g.\n\n```sh\n $ pulumi import f5bigip:ltm/profileOneConnect:ProfileOneConnect test-oneconnect /Common/test-oneconnect\n```\n\n ",
            "properties": {
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "idleTimeoutOverride": {
                    "type": "string",
                    "description": "Specifies the number of seconds that a connection is idle before the connection flow is eligible for deletion. Possible values are `disabled`, `indefinite`, or a numeric value that you specify. The default value is `disabled`\n"
                },
                "limitType": {
                    "type": "string",
                    "description": "Controls how connection limits are enforced in conjunction with OneConnect. The default is `None`. Supported Values: `[None,idle,strict]`\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Specifies the maximum age in number of seconds allowed for a connection in the connection reuse pool. For any connection with an age higher than this value, the system removes that connection from the reuse pool. The default value is `86400`.\n"
                },
                "maxReuse": {
                    "type": "integer",
                    "description": "Specifies the maximum number of times that a server-side connection can be reused. The default value is `1000`.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Specifies the maximum number of connections that the system holds in the connection reuse pool. If the pool is already full, then the server-side connection closes after the response is completed. The default value is `10000`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Profile should be full path.The full path is the combination of the `partition + profile_name`,For example `/Common/test-oneconnect-profile`.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                },
                "sharePools": {
                    "type": "string",
                    "description": "Specify if you want to share the pool, default value is `disabled`.\n"
                },
                "sourceMask": {
                    "type": "string",
                    "description": "Specifies a source IP mask. The default value is `0.0.0.0`. The system applies the value of this option to the source address to determine its eligibility for reuse. A mask of 0.0.0.0 causes the system to share reused connections across all clients. A host mask (all 1's in binary), causes the system to share only those reused connections originating from the same client IP address.\n"
                }
            },
            "required": [
                "defaultsFrom",
                "idleTimeoutOverride",
                "limitType",
                "maxAge",
                "maxReuse",
                "maxSize",
                "name",
                "partition",
                "sharePools",
                "sourceMask"
            ],
            "inputProperties": {
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "idleTimeoutOverride": {
                    "type": "string",
                    "description": "Specifies the number of seconds that a connection is idle before the connection flow is eligible for deletion. Possible values are `disabled`, `indefinite`, or a numeric value that you specify. The default value is `disabled`\n"
                },
                "limitType": {
                    "type": "string",
                    "description": "Controls how connection limits are enforced in conjunction with OneConnect. The default is `None`. Supported Values: `[None,idle,strict]`\n"
                },
                "maxAge": {
                    "type": "integer",
                    "description": "Specifies the maximum age in number of seconds allowed for a connection in the connection reuse pool. For any connection with an age higher than this value, the system removes that connection from the reuse pool. The default value is `86400`.\n"
                },
                "maxReuse": {
                    "type": "integer",
                    "description": "Specifies the maximum number of times that a server-side connection can be reused. The default value is `1000`.\n"
                },
                "maxSize": {
                    "type": "integer",
                    "description": "Specifies the maximum number of connections that the system holds in the connection reuse pool. If the pool is already full, then the server-side connection closes after the response is completed. The default value is `10000`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of Profile should be full path.The full path is the combination of the `partition + profile_name`,For example `/Common/test-oneconnect-profile`.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                },
                "sharePools": {
                    "type": "string",
                    "description": "Specify if you want to share the pool, default value is `disabled`.\n"
                },
                "sourceMask": {
                    "type": "string",
                    "description": "Specifies a source IP mask. The default value is `0.0.0.0`. The system applies the value of this option to the source address to determine its eligibility for reuse. A mask of 0.0.0.0 causes the system to share reused connections across all clients. A host mask (all 1's in binary), causes the system to share only those reused connections originating from the same client IP address.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileOneConnect resources.\n",
                "properties": {
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "idleTimeoutOverride": {
                        "type": "string",
                        "description": "Specifies the number of seconds that a connection is idle before the connection flow is eligible for deletion. Possible values are `disabled`, `indefinite`, or a numeric value that you specify. The default value is `disabled`\n"
                    },
                    "limitType": {
                        "type": "string",
                        "description": "Controls how connection limits are enforced in conjunction with OneConnect. The default is `None`. Supported Values: `[None,idle,strict]`\n"
                    },
                    "maxAge": {
                        "type": "integer",
                        "description": "Specifies the maximum age in number of seconds allowed for a connection in the connection reuse pool. For any connection with an age higher than this value, the system removes that connection from the reuse pool. The default value is `86400`.\n"
                    },
                    "maxReuse": {
                        "type": "integer",
                        "description": "Specifies the maximum number of times that a server-side connection can be reused. The default value is `1000`.\n"
                    },
                    "maxSize": {
                        "type": "integer",
                        "description": "Specifies the maximum number of connections that the system holds in the connection reuse pool. If the pool is already full, then the server-side connection closes after the response is completed. The default value is `10000`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of Profile should be full path.The full path is the combination of the `partition + profile_name`,For example `/Common/test-oneconnect-profile`.\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Displays the administrative partition within which this profile resides\n"
                    },
                    "sharePools": {
                        "type": "string",
                        "description": "Specify if you want to share the pool, default value is `disabled`.\n"
                    },
                    "sourceMask": {
                        "type": "string",
                        "description": "Specifies a source IP mask. The default value is `0.0.0.0`. The system applies the value of this option to the source address to determine its eligibility for reuse. A mask of 0.0.0.0 causes the system to share reused connections across all clients. A host mask (all 1's in binary), causes the system to share only those reused connections originating from the same client IP address.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileServerSsl:ProfileServerSsl": {
            "description": "`f5bigip.ltm.ProfileServerSsl` Manages server SSL profiles on a BIG-IP\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test_ServerSsl = new f5bigip.ltm.ProfileServerSsl(\"test-ServerSsl\", {\n    authenticate: \"always\",\n    ciphers: \"DEFAULT\",\n    defaultsFrom: \"/Common/serverssl\",\n    name: \"/Common/test-ServerSsl\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest__server_ssl = f5bigip.ltm.ProfileServerSsl(\"test-ServerSsl\",\n    authenticate=\"always\",\n    ciphers=\"DEFAULT\",\n    defaults_from=\"/Common/serverssl\",\n    name=\"/Common/test-ServerSsl\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_ServerSsl = new F5BigIP.Ltm.ProfileServerSsl(\"test-ServerSsl\", new F5BigIP.Ltm.ProfileServerSslArgs\n        {\n            Authenticate = \"always\",\n            Ciphers = \"DEFAULT\",\n            DefaultsFrom = \"/Common/serverssl\",\n            Name = \"/Common/test-ServerSsl\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileServerSsl(ctx, \"test_ServerSsl\", \u0026ltm.ProfileServerSslArgs{\n\t\t\tAuthenticate: pulumi.String(\"always\"),\n\t\t\tCiphers:      pulumi.String(\"DEFAULT\"),\n\t\t\tDefaultsFrom: pulumi.String(\"/Common/serverssl\"),\n\t\t\tName:         pulumi.String(\"/Common/test-ServerSsl\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "alertTimeout": {
                    "type": "string",
                    "description": "Alert time out\n"
                },
                "authenticate": {
                    "type": "string",
                    "description": "Specifies the frequency of server authentication for an SSL session.When `once`,specifies that the system authenticates the server once for an SSL session.\nWhen `always`, specifies that the system authenticates the server once for an SSL session and also upon reuse of that session.\n"
                },
                "authenticateDepth": {
                    "type": "integer",
                    "description": "Client certificate chain traversal depth. Default 9.\n"
                },
                "c3dCaCert": {
                    "type": "string",
                    "description": "Specifies the name of the certificate file that is used as the certification authority certificate when SSL client certificate constrained delegation is enabled. The certificate should be generated and installed by you on the system. When selecting this option, type a certificate file name.\n"
                },
                "c3dCaKey": {
                    "type": "string",
                    "description": "Specifies the name of the key file that is used as the certification authority key when SSL client certificate constrained delegation is enabled. The key should be generated and installed by you on the system. When selecting this option, type a key file name.\n"
                },
                "c3dCaPassphrase": {
                    "type": "string",
                    "description": "CA Passphrase. Default\n"
                },
                "c3dCertExtensionCustomOids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate Extensions List. Default\n"
                },
                "c3dCertExtensionIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the extensions of the client certificates to be included in the generated certificates using SSL client certificate constrained delegation. For example, { basic-constraints }. The default value is { basic-constraints extended-key-usage key-usage subject-alternative-name }. The extensions are:\n"
                },
                "c3dCertLifespan": {
                    "type": "integer",
                    "description": "Certificate Lifespan. Default\n"
                },
                "c3dCertificateExtensions": {
                    "type": "string",
                    "description": "CA Passphrase. Default enabled\n"
                },
                "caFile": {
                    "type": "string",
                    "description": "Client certificate file path. Default None.\n"
                },
                "cacheSize": {
                    "type": "integer",
                    "description": "Cache size (sessions).\n"
                },
                "cacheTimeout": {
                    "type": "integer",
                    "description": "Cache time out\n"
                },
                "cert": {
                    "type": "string",
                    "description": "Specifies the name of the certificate that the system uses for server-side SSL processing.\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Specifies the certificates-key chain to associate with the SSL profile\n"
                },
                "ciphers": {
                    "type": "string",
                    "description": "Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is `/Common/serverssl`.\n"
                },
                "expireCertResponseControl": {
                    "type": "string",
                    "description": "Response if the cert is expired (drop / ignore).\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "full path of the profile\n"
                },
                "generation": {
                    "type": "integer",
                    "description": "generation\n"
                },
                "genericAlert": {
                    "type": "string",
                    "description": "Generic alerts enabled / disabled.\n"
                },
                "handshakeTimeout": {
                    "type": "string",
                    "description": "Handshake time out (seconds)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Specifies the file name of the SSL key.\n"
                },
                "modSslMethods": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the profile.Name of Profile should be full path,full path is the combination of the `partition + profile name`. For example `/Common/test-serverssl-profile`.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "name of partition\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Client Certificate Constrained Delegation CA passphrase\n"
                },
                "peerCertMode": {
                    "type": "string",
                    "description": "Specifies the way the system handles client certificates.When ignore, specifies that the system ignores certificates from client systems.When require, specifies that the system requires a client to present a valid certificate.When request, specifies that the system requests a valid certificate from a client but always authenticate the client.\n"
                },
                "proxyCaCert": {
                    "type": "string",
                    "description": "Proxy CA Cert\n"
                },
                "proxyCaKey": {
                    "type": "string",
                    "description": "Proxy CA Key\n"
                },
                "proxySsl": {
                    "type": "string",
                    "description": "Proxy SSL enabled / disabled. Default is disabled.\n"
                },
                "renegotiatePeriod": {
                    "type": "string",
                    "description": "Renogotiate Period (seconds)\n"
                },
                "renegotiateSize": {
                    "type": "string",
                    "description": "Renogotiate Size\n"
                },
                "renegotiation": {
                    "type": "string",
                    "description": "Enables or disables SSL renegotiation.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "retainCertificate": {
                    "type": "string",
                    "description": "When `true`, client certificate is retained in SSL session.\n"
                },
                "secureRenegotiation": {
                    "type": "string",
                    "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen `request` is set the system request secure renegotation of SSL connections.\n`require` is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nThe `require-strict` setting the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.The server name can also be a wildcard string containing the asterisk `*` character.\n"
                },
                "sessionMirroring": {
                    "type": "string",
                    "description": "Session Mirroring (enabled / disabled)\n"
                },
                "sessionTicket": {
                    "type": "string",
                    "description": "Session Ticket (enabled / disabled)\n"
                },
                "sniDefault": {
                    "type": "string",
                    "description": "Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.When creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.\n"
                },
                "sniRequire": {
                    "type": "string",
                    "description": "Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default` is set to `true`.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "sslC3d": {
                    "type": "string",
                    "description": "Enables or disables SSL forward proxy bypass on receiving\nhandshake_failure, protocol_version or unsupported_extension alert message during the serverside SSL handshake. When enabled and there is an SSL handshake_failure, protocol_version or unsupported_extension alert during the serverside SSL handshake, SSL traffic bypasses the BIG-IP system untouched, without decryption/encryption. The default value is disabled. Conversely, you can specify enabled to use this feature.\n"
                },
                "sslForwardProxy": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.\n"
                },
                "sslForwardProxyBypass": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.\n"
                },
                "sslSignHash": {
                    "type": "string",
                    "description": "SSL sign hash (any, sha1, sha256, sha384)\n"
                },
                "strictResume": {
                    "type": "string",
                    "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.When creating a new profile, the setting is provided by the parent profile.\n"
                },
                "tmOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Enabled selection from a set of industry standard options for handling SSL processing.By default,\nDon't insert empty fragments and No TLSv1.3 are listed as Enabled Options. `Usage` : tm_options    = [\"dont-insert-empty-fragments\",\"no-tlsv1.3\"]\n"
                },
                "uncleanShutdown": {
                    "type": "string",
                    "description": "Unclean Shutdown (enabled / disabled)\n"
                },
                "untrustedCertResponseControl": {
                    "type": "string",
                    "description": "Unclean Shutdown (drop / ignore)\n"
                }
            },
            "required": [
                "alertTimeout",
                "authenticate",
                "authenticateDepth",
                "c3dCaPassphrase",
                "c3dCertLifespan",
                "c3dCertificateExtensions",
                "caFile",
                "cacheSize",
                "cacheTimeout",
                "cert",
                "chain",
                "ciphers",
                "expireCertResponseControl",
                "fullPath",
                "generation",
                "genericAlert",
                "handshakeTimeout",
                "key",
                "modSslMethods",
                "mode",
                "name",
                "partition",
                "passphrase",
                "peerCertMode",
                "proxyCaCert",
                "proxyCaKey",
                "proxySsl",
                "renegotiatePeriod",
                "renegotiateSize",
                "renegotiation",
                "retainCertificate",
                "secureRenegotiation",
                "serverName",
                "sessionMirroring",
                "sessionTicket",
                "sniDefault",
                "sniRequire",
                "sslForwardProxy",
                "sslForwardProxyBypass",
                "sslSignHash",
                "strictResume",
                "tmOptions",
                "uncleanShutdown",
                "untrustedCertResponseControl"
            ],
            "inputProperties": {
                "alertTimeout": {
                    "type": "string",
                    "description": "Alert time out\n"
                },
                "authenticate": {
                    "type": "string",
                    "description": "Specifies the frequency of server authentication for an SSL session.When `once`,specifies that the system authenticates the server once for an SSL session.\nWhen `always`, specifies that the system authenticates the server once for an SSL session and also upon reuse of that session.\n"
                },
                "authenticateDepth": {
                    "type": "integer",
                    "description": "Client certificate chain traversal depth. Default 9.\n"
                },
                "c3dCaCert": {
                    "type": "string",
                    "description": "Specifies the name of the certificate file that is used as the certification authority certificate when SSL client certificate constrained delegation is enabled. The certificate should be generated and installed by you on the system. When selecting this option, type a certificate file name.\n"
                },
                "c3dCaKey": {
                    "type": "string",
                    "description": "Specifies the name of the key file that is used as the certification authority key when SSL client certificate constrained delegation is enabled. The key should be generated and installed by you on the system. When selecting this option, type a key file name.\n"
                },
                "c3dCaPassphrase": {
                    "type": "string",
                    "description": "CA Passphrase. Default\n"
                },
                "c3dCertExtensionCustomOids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Certificate Extensions List. Default\n"
                },
                "c3dCertExtensionIncludes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the extensions of the client certificates to be included in the generated certificates using SSL client certificate constrained delegation. For example, { basic-constraints }. The default value is { basic-constraints extended-key-usage key-usage subject-alternative-name }. The extensions are:\n"
                },
                "c3dCertLifespan": {
                    "type": "integer",
                    "description": "Certificate Lifespan. Default\n"
                },
                "c3dCertificateExtensions": {
                    "type": "string",
                    "description": "CA Passphrase. Default enabled\n"
                },
                "caFile": {
                    "type": "string",
                    "description": "Client certificate file path. Default None.\n"
                },
                "cacheSize": {
                    "type": "integer",
                    "description": "Cache size (sessions).\n"
                },
                "cacheTimeout": {
                    "type": "integer",
                    "description": "Cache time out\n"
                },
                "cert": {
                    "type": "string",
                    "description": "Specifies the name of the certificate that the system uses for server-side SSL processing.\n"
                },
                "chain": {
                    "type": "string",
                    "description": "Specifies the certificates-key chain to associate with the SSL profile\n"
                },
                "ciphers": {
                    "type": "string",
                    "description": "Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is `/Common/serverssl`.\n"
                },
                "expireCertResponseControl": {
                    "type": "string",
                    "description": "Response if the cert is expired (drop / ignore).\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "full path of the profile\n"
                },
                "generation": {
                    "type": "integer",
                    "description": "generation\n"
                },
                "genericAlert": {
                    "type": "string",
                    "description": "Generic alerts enabled / disabled.\n"
                },
                "handshakeTimeout": {
                    "type": "string",
                    "description": "Handshake time out (seconds)\n"
                },
                "key": {
                    "type": "string",
                    "description": "Specifies the file name of the SSL key.\n"
                },
                "modSslMethods": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Specifies the name of the profile.Name of Profile should be full path,full path is the combination of the `partition + profile name`. For example `/Common/test-serverssl-profile`.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "name of partition\n"
                },
                "passphrase": {
                    "type": "string",
                    "description": "Client Certificate Constrained Delegation CA passphrase\n"
                },
                "peerCertMode": {
                    "type": "string",
                    "description": "Specifies the way the system handles client certificates.When ignore, specifies that the system ignores certificates from client systems.When require, specifies that the system requires a client to present a valid certificate.When request, specifies that the system requests a valid certificate from a client but always authenticate the client.\n"
                },
                "proxyCaCert": {
                    "type": "string",
                    "description": "Proxy CA Cert\n"
                },
                "proxyCaKey": {
                    "type": "string",
                    "description": "Proxy CA Key\n"
                },
                "proxySsl": {
                    "type": "string",
                    "description": "Proxy SSL enabled / disabled. Default is disabled.\n"
                },
                "renegotiatePeriod": {
                    "type": "string",
                    "description": "Renogotiate Period (seconds)\n"
                },
                "renegotiateSize": {
                    "type": "string",
                    "description": "Renogotiate Size\n"
                },
                "renegotiation": {
                    "type": "string",
                    "description": "Enables or disables SSL renegotiation.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "retainCertificate": {
                    "type": "string",
                    "description": "When `true`, client certificate is retained in SSL session.\n"
                },
                "secureRenegotiation": {
                    "type": "string",
                    "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen `request` is set the system request secure renegotation of SSL connections.\n`require` is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nThe `require-strict` setting the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers\n"
                },
                "serverName": {
                    "type": "string",
                    "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.The server name can also be a wildcard string containing the asterisk `*` character.\n"
                },
                "sessionMirroring": {
                    "type": "string",
                    "description": "Session Mirroring (enabled / disabled)\n"
                },
                "sessionTicket": {
                    "type": "string",
                    "description": "Session Ticket (enabled / disabled)\n"
                },
                "sniDefault": {
                    "type": "string",
                    "description": "Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.When creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.\n"
                },
                "sniRequire": {
                    "type": "string",
                    "description": "Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default` is set to `true`.When creating a new profile, the setting is provided by the parent profile\n"
                },
                "sslC3d": {
                    "type": "string",
                    "description": "Enables or disables SSL forward proxy bypass on receiving\nhandshake_failure, protocol_version or unsupported_extension alert message during the serverside SSL handshake. When enabled and there is an SSL handshake_failure, protocol_version or unsupported_extension alert during the serverside SSL handshake, SSL traffic bypasses the BIG-IP system untouched, without decryption/encryption. The default value is disabled. Conversely, you can specify enabled to use this feature.\n"
                },
                "sslForwardProxy": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.\n"
                },
                "sslForwardProxyBypass": {
                    "type": "string",
                    "description": "Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.\n"
                },
                "sslSignHash": {
                    "type": "string",
                    "description": "SSL sign hash (any, sha1, sha256, sha384)\n"
                },
                "strictResume": {
                    "type": "string",
                    "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.When creating a new profile, the setting is provided by the parent profile.\n"
                },
                "tmOptions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of Enabled selection from a set of industry standard options for handling SSL processing.By default,\nDon't insert empty fragments and No TLSv1.3 are listed as Enabled Options. `Usage` : tm_options    = [\"dont-insert-empty-fragments\",\"no-tlsv1.3\"]\n"
                },
                "uncleanShutdown": {
                    "type": "string",
                    "description": "Unclean Shutdown (enabled / disabled)\n"
                },
                "untrustedCertResponseControl": {
                    "type": "string",
                    "description": "Unclean Shutdown (drop / ignore)\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileServerSsl resources.\n",
                "properties": {
                    "alertTimeout": {
                        "type": "string",
                        "description": "Alert time out\n"
                    },
                    "authenticate": {
                        "type": "string",
                        "description": "Specifies the frequency of server authentication for an SSL session.When `once`,specifies that the system authenticates the server once for an SSL session.\nWhen `always`, specifies that the system authenticates the server once for an SSL session and also upon reuse of that session.\n"
                    },
                    "authenticateDepth": {
                        "type": "integer",
                        "description": "Client certificate chain traversal depth. Default 9.\n"
                    },
                    "c3dCaCert": {
                        "type": "string",
                        "description": "Specifies the name of the certificate file that is used as the certification authority certificate when SSL client certificate constrained delegation is enabled. The certificate should be generated and installed by you on the system. When selecting this option, type a certificate file name.\n"
                    },
                    "c3dCaKey": {
                        "type": "string",
                        "description": "Specifies the name of the key file that is used as the certification authority key when SSL client certificate constrained delegation is enabled. The key should be generated and installed by you on the system. When selecting this option, type a key file name.\n"
                    },
                    "c3dCaPassphrase": {
                        "type": "string",
                        "description": "CA Passphrase. Default\n"
                    },
                    "c3dCertExtensionCustomOids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Certificate Extensions List. Default\n"
                    },
                    "c3dCertExtensionIncludes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the extensions of the client certificates to be included in the generated certificates using SSL client certificate constrained delegation. For example, { basic-constraints }. The default value is { basic-constraints extended-key-usage key-usage subject-alternative-name }. The extensions are:\n"
                    },
                    "c3dCertLifespan": {
                        "type": "integer",
                        "description": "Certificate Lifespan. Default\n"
                    },
                    "c3dCertificateExtensions": {
                        "type": "string",
                        "description": "CA Passphrase. Default enabled\n"
                    },
                    "caFile": {
                        "type": "string",
                        "description": "Client certificate file path. Default None.\n"
                    },
                    "cacheSize": {
                        "type": "integer",
                        "description": "Cache size (sessions).\n"
                    },
                    "cacheTimeout": {
                        "type": "integer",
                        "description": "Cache time out\n"
                    },
                    "cert": {
                        "type": "string",
                        "description": "Specifies the name of the certificate that the system uses for server-side SSL processing.\n"
                    },
                    "chain": {
                        "type": "string",
                        "description": "Specifies the certificates-key chain to associate with the SSL profile\n"
                    },
                    "ciphers": {
                        "type": "string",
                        "description": "Specifies the list of ciphers that the system supports. When creating a new profile, the default cipher list is provided by the parent profile.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "The parent template of this monitor template. Once this value has been set, it cannot be changed. By default, this value is `/Common/serverssl`.\n"
                    },
                    "expireCertResponseControl": {
                        "type": "string",
                        "description": "Response if the cert is expired (drop / ignore).\n"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "full path of the profile\n"
                    },
                    "generation": {
                        "type": "integer",
                        "description": "generation\n"
                    },
                    "genericAlert": {
                        "type": "string",
                        "description": "Generic alerts enabled / disabled.\n"
                    },
                    "handshakeTimeout": {
                        "type": "string",
                        "description": "Handshake time out (seconds)\n"
                    },
                    "key": {
                        "type": "string",
                        "description": "Specifies the file name of the SSL key.\n"
                    },
                    "modSslMethods": {
                        "type": "string",
                        "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                    },
                    "mode": {
                        "type": "string",
                        "description": "ModSSL Methods enabled / disabled. Default is disabled.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Specifies the name of the profile.Name of Profile should be full path,full path is the combination of the `partition + profile name`. For example `/Common/test-serverssl-profile`.\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "name of partition\n"
                    },
                    "passphrase": {
                        "type": "string",
                        "description": "Client Certificate Constrained Delegation CA passphrase\n"
                    },
                    "peerCertMode": {
                        "type": "string",
                        "description": "Specifies the way the system handles client certificates.When ignore, specifies that the system ignores certificates from client systems.When require, specifies that the system requires a client to present a valid certificate.When request, specifies that the system requests a valid certificate from a client but always authenticate the client.\n"
                    },
                    "proxyCaCert": {
                        "type": "string",
                        "description": "Proxy CA Cert\n"
                    },
                    "proxyCaKey": {
                        "type": "string",
                        "description": "Proxy CA Key\n"
                    },
                    "proxySsl": {
                        "type": "string",
                        "description": "Proxy SSL enabled / disabled. Default is disabled.\n"
                    },
                    "renegotiatePeriod": {
                        "type": "string",
                        "description": "Renogotiate Period (seconds)\n"
                    },
                    "renegotiateSize": {
                        "type": "string",
                        "description": "Renogotiate Size\n"
                    },
                    "renegotiation": {
                        "type": "string",
                        "description": "Enables or disables SSL renegotiation.When creating a new profile, the setting is provided by the parent profile\n"
                    },
                    "retainCertificate": {
                        "type": "string",
                        "description": "When `true`, client certificate is retained in SSL session.\n"
                    },
                    "secureRenegotiation": {
                        "type": "string",
                        "description": "Specifies the method of secure renegotiations for SSL connections. When creating a new profile, the setting is provided by the parent profile.\nWhen `request` is set the system request secure renegotation of SSL connections.\n`require` is a default setting and when set the system permits initial SSL handshakes from clients but terminates renegotiations from unpatched clients.\nThe `require-strict` setting the system requires strict renegotiation of SSL connections. In this mode the system refuses connections to insecure servers, and terminates existing SSL connections to insecure servers\n"
                    },
                    "serverName": {
                        "type": "string",
                        "description": "Specifies the fully qualified DNS hostname of the server used in Server Name Indication communications. When creating a new profile, the setting is provided by the parent profile.The server name can also be a wildcard string containing the asterisk `*` character.\n"
                    },
                    "sessionMirroring": {
                        "type": "string",
                        "description": "Session Mirroring (enabled / disabled)\n"
                    },
                    "sessionTicket": {
                        "type": "string",
                        "description": "Session Ticket (enabled / disabled)\n"
                    },
                    "sniDefault": {
                        "type": "string",
                        "description": "Indicates that the system uses this profile as the default SSL profile when there is no match to the server name, or when the client provides no SNI extension support.When creating a new profile, the setting is provided by the parent profile.\nThere can be only one SSL profile with this setting enabled.\n"
                    },
                    "sniRequire": {
                        "type": "string",
                        "description": "Requires that the network peers also provide SNI support, this setting only takes effect when `sni_default` is set to `true`.When creating a new profile, the setting is provided by the parent profile\n"
                    },
                    "sslC3d": {
                        "type": "string",
                        "description": "Enables or disables SSL forward proxy bypass on receiving\nhandshake_failure, protocol_version or unsupported_extension alert message during the serverside SSL handshake. When enabled and there is an SSL handshake_failure, protocol_version or unsupported_extension alert during the serverside SSL handshake, SSL traffic bypasses the BIG-IP system untouched, without decryption/encryption. The default value is disabled. Conversely, you can specify enabled to use this feature.\n"
                    },
                    "sslForwardProxy": {
                        "type": "string",
                        "description": "Specifies whether SSL forward proxy feature is enabled or not. The default value is disabled.\n"
                    },
                    "sslForwardProxyBypass": {
                        "type": "string",
                        "description": "Specifies whether SSL forward proxy bypass feature is enabled or not. The default value is disabled.\n"
                    },
                    "sslSignHash": {
                        "type": "string",
                        "description": "SSL sign hash (any, sha1, sha256, sha384)\n"
                    },
                    "strictResume": {
                        "type": "string",
                        "description": "Enables or disables the resumption of SSL sessions after an unclean shutdown.When creating a new profile, the setting is provided by the parent profile.\n"
                    },
                    "tmOptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of Enabled selection from a set of industry standard options for handling SSL processing.By default,\nDon't insert empty fragments and No TLSv1.3 are listed as Enabled Options. `Usage` : tm_options    = [\"dont-insert-empty-fragments\",\"no-tlsv1.3\"]\n"
                    },
                    "uncleanShutdown": {
                        "type": "string",
                        "description": "Unclean Shutdown (enabled / disabled)\n"
                    },
                    "untrustedCertResponseControl": {
                        "type": "string",
                        "description": "Unclean Shutdown (drop / ignore)\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/profileTcp:ProfileTcp": {
            "description": "`f5bigip.ltm.ProfileTcp` Configures a custom profile_tcp for use by health checks.\n\nResources should be named with their \"full path\". The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst sanjose_tcp_lan_profile = new f5bigip.ltm.ProfileTcp(\"sanjose-tcp-lan-profile\", {\n    closeWaitTimeout: 5,\n    deferredAccept: \"enabled\",\n    fastOpen: \"enabled\",\n    finwait2timeout: 5,\n    finwaitTimeout: 300,\n    idleTimeout: 200,\n    keepaliveInterval: 1700,\n    name: \"/Common/sanjose-tcp-lan-profile\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsanjose_tcp_lan_profile = f5bigip.ltm.ProfileTcp(\"sanjose-tcp-lan-profile\",\n    close_wait_timeout=5,\n    deferred_accept=\"enabled\",\n    fast_open=\"enabled\",\n    finwait2timeout=5,\n    finwait_timeout=300,\n    idle_timeout=200,\n    keepalive_interval=1700,\n    name=\"/Common/sanjose-tcp-lan-profile\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var sanjose_tcp_lan_profile = new F5BigIP.Ltm.ProfileTcp(\"sanjose-tcp-lan-profile\", new F5BigIP.Ltm.ProfileTcpArgs\n        {\n            CloseWaitTimeout = 5,\n            DeferredAccept = \"enabled\",\n            FastOpen = \"enabled\",\n            Finwait2timeout = 5,\n            FinwaitTimeout = 300,\n            IdleTimeout = 200,\n            KeepaliveInterval = 1700,\n            Name = \"/Common/sanjose-tcp-lan-profile\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewProfileTcp(ctx, \"sanjose_tcp_lan_profile\", \u0026ltm.ProfileTcpArgs{\n\t\t\tCloseWaitTimeout:  pulumi.Int(5),\n\t\t\tDeferredAccept:    pulumi.String(\"enabled\"),\n\t\t\tFastOpen:          pulumi.String(\"enabled\"),\n\t\t\tFinwait2timeout:   pulumi.Int(5),\n\t\t\tFinwaitTimeout:    pulumi.Int(300),\n\t\t\tIdleTimeout:       pulumi.Int(200),\n\t\t\tKeepaliveInterval: pulumi.Int(1700),\n\t\t\tName:              pulumi.String(\"/Common/sanjose-tcp-lan-profile\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "closeWaitTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "deferredAccept": {
                    "type": "string",
                    "description": "Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.\n"
                },
                "fastOpen": {
                    "type": "string",
                    "description": "When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.\n"
                },
                "finwait2timeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).\n"
                },
                "finwaitTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.\n"
                },
                "keepaliveInterval": {
                    "type": "integer",
                    "description": "Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_tcp\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                }
            },
            "required": [
                "closeWaitTimeout",
                "defaultsFrom",
                "deferredAccept",
                "fastOpen",
                "finwait2timeout",
                "finwaitTimeout",
                "idleTimeout",
                "keepaliveInterval",
                "name"
            ],
            "inputProperties": {
                "closeWaitTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.\n"
                },
                "defaultsFrom": {
                    "type": "string",
                    "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                },
                "deferredAccept": {
                    "type": "string",
                    "description": "Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.\n"
                },
                "fastOpen": {
                    "type": "string",
                    "description": "When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.\n"
                },
                "finwait2timeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).\n"
                },
                "finwaitTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.\n"
                },
                "idleTimeout": {
                    "type": "integer",
                    "description": "Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.\n"
                },
                "keepaliveInterval": {
                    "type": "integer",
                    "description": "Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the profile_tcp\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ProfileTcp resources.\n",
                "properties": {
                    "closeWaitTimeout": {
                        "type": "integer",
                        "description": "Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.\n"
                    },
                    "defaultsFrom": {
                        "type": "string",
                        "description": "Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.\n"
                    },
                    "deferredAccept": {
                        "type": "string",
                        "description": "Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.\n"
                    },
                    "fastOpen": {
                        "type": "string",
                        "description": "When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.\n"
                    },
                    "finwait2timeout": {
                        "type": "integer",
                        "description": "Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).\n"
                    },
                    "finwaitTimeout": {
                        "type": "integer",
                        "description": "Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.\n"
                    },
                    "idleTimeout": {
                        "type": "integer",
                        "description": "Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.\n"
                    },
                    "keepaliveInterval": {
                        "type": "integer",
                        "description": "Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the profile_tcp\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Displays the administrative partition within which this profile resides\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/snat:Snat": {
            "description": "`f5bigip.ltm.Snat` Manages a snat configuration\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test_snat = new f5bigip.ltm.Snat(\"test-snat\", {\n    autolasthop: \"default\",\n    fullPath: \"/Common/test-snat\",\n    mirror: \"disabled\",\n    name: \"TEST_SNAT_NAME\",\n    origins: [\n        {\n            name: \"2.2.2.2\",\n        },\n        {\n            name: \"3.3.3.3\",\n        },\n    ],\n    partition: \"Common\",\n    translation: \"/Common/136.1.1.1\",\n    vlansdisabled: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_snat = f5bigip.ltm.Snat(\"test-snat\",\n    autolasthop=\"default\",\n    full_path=\"/Common/test-snat\",\n    mirror=\"disabled\",\n    name=\"TEST_SNAT_NAME\",\n    origins=[\n        f5bigip.ltm.SnatOriginArgs(\n            name=\"2.2.2.2\",\n        ),\n        f5bigip.ltm.SnatOriginArgs(\n            name=\"3.3.3.3\",\n        ),\n    ],\n    partition=\"Common\",\n    translation=\"/Common/136.1.1.1\",\n    vlansdisabled=True)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_snat = new F5BigIP.Ltm.Snat(\"test-snat\", new F5BigIP.Ltm.SnatArgs\n        {\n            Autolasthop = \"default\",\n            FullPath = \"/Common/test-snat\",\n            Mirror = \"disabled\",\n            Name = \"TEST_SNAT_NAME\",\n            Origins = \n            {\n                new F5BigIP.Ltm.Inputs.SnatOriginArgs\n                {\n                    Name = \"2.2.2.2\",\n                },\n                new F5BigIP.Ltm.Inputs.SnatOriginArgs\n                {\n                    Name = \"3.3.3.3\",\n                },\n            },\n            Partition = \"Common\",\n            Translation = \"/Common/136.1.1.1\",\n            Vlansdisabled = true,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewSnat(ctx, \"test_snat\", \u0026ltm.SnatArgs{\n\t\t\tAutolasthop: pulumi.String(\"default\"),\n\t\t\tFullPath:    pulumi.String(\"/Common/test-snat\"),\n\t\t\tMirror:      pulumi.String(\"disabled\"),\n\t\t\tName:        pulumi.String(\"TEST_SNAT_NAME\"),\n\t\t\tOrigins: ltm.SnatOriginArray{\n\t\t\t\t\u0026ltm.SnatOriginArgs{\n\t\t\t\t\tName: pulumi.String(\"2.2.2.2\"),\n\t\t\t\t},\n\t\t\t\t\u0026ltm.SnatOriginArgs{\n\t\t\t\t\tName: pulumi.String(\"3.3.3.3\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tPartition:     pulumi.String(\"Common\"),\n\t\t\tTranslation:   pulumi.String(\"/Common/136.1.1.1\"),\n\t\t\tVlansdisabled: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "autolasthop": {
                    "type": "string",
                    "description": "-(Optional) Specifies whether to automatically map last hop for pools or not. The default is to use next level's default.\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "Fullpath\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "Enables or disables mirroring of SNAT connections.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snat\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/SnatOrigin:SnatOrigin"
                    },
                    "description": "IP or hostname of the snat\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                },
                "snatpool": {
                    "type": "string",
                    "description": "Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used.\n"
                },
                "sourceport": {
                    "type": "string",
                    "description": "Specifies whether the system preserves the source port of the connection. The default is preserve. Use of the preserve-strict setting should be restricted to UDP only under very special circumstances such as nPath or transparent (that is, no translation of any other L3/L4 field), where there is a 1:1 relationship between virtual IP addresses and node addresses, or when clustered multi-processing (CMP) is disabled. The change setting is useful for obfuscating internal network addresses.\n"
                },
                "translation": {
                    "type": "string",
                    "description": "Specifies the name of a translated IP address. Note that translated addresses are outside the traffic management system. You can only use this option when automap and snatpool are not used.\n"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the name of the VLAN to which you want to assign the SNAT. The default is vlans-enabled.\n"
                },
                "vlansdisabled": {
                    "type": "boolean",
                    "description": "Disables the SNAT on all VLANs.\n"
                }
            },
            "required": [
                "name",
                "origins"
            ],
            "inputProperties": {
                "autolasthop": {
                    "type": "string",
                    "description": "-(Optional) Specifies whether to automatically map last hop for pools or not. The default is to use next level's default.\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "Fullpath\n"
                },
                "mirror": {
                    "type": "string",
                    "description": "Enables or disables mirroring of SNAT connections.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snat\n"
                },
                "origins": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:ltm/SnatOrigin:SnatOrigin"
                    },
                    "description": "IP or hostname of the snat\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Displays the administrative partition within which this profile resides\n"
                },
                "snatpool": {
                    "type": "string",
                    "description": "Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used.\n"
                },
                "sourceport": {
                    "type": "string",
                    "description": "Specifies whether the system preserves the source port of the connection. The default is preserve. Use of the preserve-strict setting should be restricted to UDP only under very special circumstances such as nPath or transparent (that is, no translation of any other L3/L4 field), where there is a 1:1 relationship between virtual IP addresses and node addresses, or when clustered multi-processing (CMP) is disabled. The change setting is useful for obfuscating internal network addresses.\n"
                },
                "translation": {
                    "type": "string",
                    "description": "Specifies the name of a translated IP address. Note that translated addresses are outside the traffic management system. You can only use this option when automap and snatpool are not used.\n"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the name of the VLAN to which you want to assign the SNAT. The default is vlans-enabled.\n"
                },
                "vlansdisabled": {
                    "type": "boolean",
                    "description": "Disables the SNAT on all VLANs.\n"
                }
            },
            "requiredInputs": [
                "name",
                "origins"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Snat resources.\n",
                "properties": {
                    "autolasthop": {
                        "type": "string",
                        "description": "-(Optional) Specifies whether to automatically map last hop for pools or not. The default is to use next level's default.\n"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "Fullpath\n"
                    },
                    "mirror": {
                        "type": "string",
                        "description": "Enables or disables mirroring of SNAT connections.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the snat\n"
                    },
                    "origins": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/SnatOrigin:SnatOrigin"
                        },
                        "description": "IP or hostname of the snat\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Displays the administrative partition within which this profile resides\n"
                    },
                    "snatpool": {
                        "type": "string",
                        "description": "Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used.\n"
                    },
                    "sourceport": {
                        "type": "string",
                        "description": "Specifies whether the system preserves the source port of the connection. The default is preserve. Use of the preserve-strict setting should be restricted to UDP only under very special circumstances such as nPath or transparent (that is, no translation of any other L3/L4 field), where there is a 1:1 relationship between virtual IP addresses and node addresses, or when clustered multi-processing (CMP) is disabled. The change setting is useful for obfuscating internal network addresses.\n"
                    },
                    "translation": {
                        "type": "string",
                        "description": "Specifies the name of a translated IP address. Note that translated addresses are outside the traffic management system. You can only use this option when automap and snatpool are not used.\n"
                    },
                    "vlans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the name of the VLAN to which you want to assign the SNAT. The default is vlans-enabled.\n"
                    },
                    "vlansdisabled": {
                        "type": "boolean",
                        "description": "Disables the SNAT on all VLANs.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/snatPool:SnatPool": {
            "description": "`f5bigip.ltm.SnatPool` Collections of SNAT translation addresses\n\nResource should be named with their \"full path\". The full path is the combination of the partition + name of the resource, for example /Common/my-snatpool. \n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst snatpoolSanjose = new f5bigip.ltm.SnatPool(\"snatpool_sanjose\", {\n    members: [\n        \"191.1.1.1\",\n        \"194.2.2.2\",\n    ],\n    name: \"/Common/snatpool_sanjose\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsnatpool_sanjose = f5bigip.ltm.SnatPool(\"snatpoolSanjose\",\n    members=[\n        \"191.1.1.1\",\n        \"194.2.2.2\",\n    ],\n    name=\"/Common/snatpool_sanjose\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var snatpoolSanjose = new F5BigIP.Ltm.SnatPool(\"snatpoolSanjose\", new F5BigIP.Ltm.SnatPoolArgs\n        {\n            Members = \n            {\n                \"191.1.1.1\",\n                \"194.2.2.2\",\n            },\n            Name = \"/Common/snatpool_sanjose\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewSnatPool(ctx, \"snatpoolSanjose\", \u0026ltm.SnatPoolArgs{\n\t\t\tMembers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"191.1.1.1\"),\n\t\t\t\tpulumi.String(\"194.2.2.2\"),\n\t\t\t},\n\t\t\tName: pulumi.String(\"/Common/snatpool_sanjose\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snatpool\n"
                }
            },
            "required": [
                "members",
                "name"
            ],
            "inputProperties": {
                "members": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snatpool\n"
                }
            },
            "requiredInputs": [
                "members",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnatPool resources.\n",
                "properties": {
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the snatpool\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/virtualAddress:VirtualAddress": {
            "description": "`f5bigip.ltm.VirtualAddress` Configures Virtual Server\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/virtual_server.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst vsVa = new f5bigip.ltm.VirtualAddress(\"vs_va\", {\n    advertizeRoute: \"enabled\",\n    name: \"/Common/xxxxx\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nvs_va = f5bigip.ltm.VirtualAddress(\"vsVa\",\n    advertize_route=\"enabled\",\n    name=\"/Common/xxxxx\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vsVa = new F5BigIP.Ltm.VirtualAddress(\"vsVa\", new F5BigIP.Ltm.VirtualAddressArgs\n        {\n            AdvertizeRoute = \"enabled\",\n            Name = \"/Common/xxxxx\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewVirtualAddress(ctx, \"vsVa\", \u0026ltm.VirtualAddressArgs{\n\t\t\tAdvertizeRoute: pulumi.String(\"enabled\"),\n\t\t\tName:           pulumi.String(\"/Common/xxxxx\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "advertizeRoute": {
                    "type": "string",
                    "description": "Enabled dynamic routing of the address ( In versions prior to BIG-IP 13.0.0 HF1, you can configure the Route Advertisement option for a virtual address to be either Enabled or Disabled only. Beginning with BIG-IP 13.0.0 HF1, F5 added more settings for the Route Advertisement option. In addition, the Enabled setting is deprecated and replaced by the Selective setting. For more information, please look into KB article https://support.f5.com/csp/article/K85543242 )\n"
                },
                "arp": {
                    "type": "boolean",
                    "description": "Enable or disable ARP for the virtual address\n"
                },
                "autoDelete": {
                    "type": "boolean",
                    "description": "Automatically delete the virtual address with the virtual server\n"
                },
                "connLimit": {
                    "type": "integer",
                    "description": "Max number of connections for virtual address\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the virtual address\n"
                },
                "icmpEcho": {
                    "type": "string",
                    "description": "Specifies how the system sends responses to ICMP echo requests on a per-virtual address basis.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the virtual address\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "Specify the partition and traffic group\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "advertizeRoute": {
                    "type": "string",
                    "description": "Enabled dynamic routing of the address ( In versions prior to BIG-IP 13.0.0 HF1, you can configure the Route Advertisement option for a virtual address to be either Enabled or Disabled only. Beginning with BIG-IP 13.0.0 HF1, F5 added more settings for the Route Advertisement option. In addition, the Enabled setting is deprecated and replaced by the Selective setting. For more information, please look into KB article https://support.f5.com/csp/article/K85543242 )\n"
                },
                "arp": {
                    "type": "boolean",
                    "description": "Enable or disable ARP for the virtual address\n"
                },
                "autoDelete": {
                    "type": "boolean",
                    "description": "Automatically delete the virtual address with the virtual server\n"
                },
                "connLimit": {
                    "type": "integer",
                    "description": "Max number of connections for virtual address\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Enable or disable the virtual address\n"
                },
                "icmpEcho": {
                    "type": "string",
                    "description": "Specifies how the system sends responses to ICMP echo requests on a per-virtual address basis.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the virtual address\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "Specify the partition and traffic group\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualAddress resources.\n",
                "properties": {
                    "advertizeRoute": {
                        "type": "string",
                        "description": "Enabled dynamic routing of the address ( In versions prior to BIG-IP 13.0.0 HF1, you can configure the Route Advertisement option for a virtual address to be either Enabled or Disabled only. Beginning with BIG-IP 13.0.0 HF1, F5 added more settings for the Route Advertisement option. In addition, the Enabled setting is deprecated and replaced by the Selective setting. For more information, please look into KB article https://support.f5.com/csp/article/K85543242 )\n"
                    },
                    "arp": {
                        "type": "boolean",
                        "description": "Enable or disable ARP for the virtual address\n"
                    },
                    "autoDelete": {
                        "type": "boolean",
                        "description": "Automatically delete the virtual address with the virtual server\n"
                    },
                    "connLimit": {
                        "type": "integer",
                        "description": "Max number of connections for virtual address\n"
                    },
                    "enabled": {
                        "type": "boolean",
                        "description": "Enable or disable the virtual address\n"
                    },
                    "icmpEcho": {
                        "type": "string",
                        "description": "Specifies how the system sends responses to ICMP echo requests on a per-virtual address basis.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the virtual address\n"
                    },
                    "trafficGroup": {
                        "type": "string",
                        "description": "Specify the partition and traffic group\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ltm/virtualServer:VirtualServer": {
            "description": "`f5bigip.ltm.VirtualServer` Configures Virtual Server\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource (example: /Common/my-pool ) or partition + directory + name of the resource (example: /Common/test/my-pool ).When including directory in fullpath we have to make sure it is created in the given partition before using it.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst http = new f5bigip.ltm.VirtualServer(\"http\", {\n    name: \"/Common/terraform_vs_http\",\n    destination: \"10.12.12.12\",\n    port: 80,\n    pool: \"/Common/the-default-pool\",\n});\n// A Virtual server with SSL enabled\nconst httpsVirtualServer = new f5bigip.ltm.VirtualServer(\"httpsVirtualServer\", {\n    name: \"/Common/terraform_vs_https\",\n    destination: _var.vip_ip,\n    description: \"VirtualServer-test\",\n    port: 443,\n    pool: _var.pool,\n    profiles: [\n        \"/Common/tcp\",\n        \"/Common/my-awesome-ssl-cert\",\n        \"/Common/http\",\n    ],\n    sourceAddressTranslation: \"automap\",\n    translateAddress: \"enabled\",\n    translatePort: \"enabled\",\n});\n// A Virtual server with separate client and server profiles\nconst httpsLtm_virtualServerVirtualServer = new f5bigip.ltm.VirtualServer(\"httpsLtm/virtualServerVirtualServer\", {\n    name: \"/Common/terraform_vs_https\",\n    destination: \"10.255.255.254\",\n    description: \"VirtualServer-test\",\n    port: 443,\n    clientProfiles: [\"/Common/clientssl\"],\n    serverProfiles: [\"/Common/serverssl\"],\n    securityLogProfiles: [\"/Common/global-network\"],\n    sourceAddressTranslation: \"automap\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nhttp = f5bigip.ltm.VirtualServer(\"http\",\n    name=\"/Common/terraform_vs_http\",\n    destination=\"10.12.12.12\",\n    port=80,\n    pool=\"/Common/the-default-pool\")\n# A Virtual server with SSL enabled\nhttps_virtual_server = f5bigip.ltm.VirtualServer(\"httpsVirtualServer\",\n    name=\"/Common/terraform_vs_https\",\n    destination=var[\"vip_ip\"],\n    description=\"VirtualServer-test\",\n    port=443,\n    pool=var[\"pool\"],\n    profiles=[\n        \"/Common/tcp\",\n        \"/Common/my-awesome-ssl-cert\",\n        \"/Common/http\",\n    ],\n    source_address_translation=\"automap\",\n    translate_address=\"enabled\",\n    translate_port=\"enabled\")\n# A Virtual server with separate client and server profiles\nhttps_ltm_virtual_server_virtual_server = f5bigip.ltm.VirtualServer(\"httpsLtm/virtualServerVirtualServer\",\n    name=\"/Common/terraform_vs_https\",\n    destination=\"10.255.255.254\",\n    description=\"VirtualServer-test\",\n    port=443,\n    client_profiles=[\"/Common/clientssl\"],\n    server_profiles=[\"/Common/serverssl\"],\n    security_log_profiles=[\"/Common/global-network\"],\n    source_address_translation=\"automap\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var http = new F5BigIP.Ltm.VirtualServer(\"http\", new F5BigIP.Ltm.VirtualServerArgs\n        {\n            Name = \"/Common/terraform_vs_http\",\n            Destination = \"10.12.12.12\",\n            Port = 80,\n            Pool = \"/Common/the-default-pool\",\n        });\n        // A Virtual server with SSL enabled\n        var httpsVirtualServer = new F5BigIP.Ltm.VirtualServer(\"httpsVirtualServer\", new F5BigIP.Ltm.VirtualServerArgs\n        {\n            Name = \"/Common/terraform_vs_https\",\n            Destination = @var.Vip_ip,\n            Description = \"VirtualServer-test\",\n            Port = 443,\n            Pool = @var.Pool,\n            Profiles = \n            {\n                \"/Common/tcp\",\n                \"/Common/my-awesome-ssl-cert\",\n                \"/Common/http\",\n            },\n            SourceAddressTranslation = \"automap\",\n            TranslateAddress = \"enabled\",\n            TranslatePort = \"enabled\",\n        });\n        // A Virtual server with separate client and server profiles\n        var httpsLtm_virtualServerVirtualServer = new F5BigIP.Ltm.VirtualServer(\"httpsLtm/virtualServerVirtualServer\", new F5BigIP.Ltm.VirtualServerArgs\n        {\n            Name = \"/Common/terraform_vs_https\",\n            Destination = \"10.255.255.254\",\n            Description = \"VirtualServer-test\",\n            Port = 443,\n            ClientProfiles = \n            {\n                \"/Common/clientssl\",\n            },\n            ServerProfiles = \n            {\n                \"/Common/serverssl\",\n            },\n            SecurityLogProfiles = \n            {\n                \"/Common/global-network\",\n            },\n            SourceAddressTranslation = \"automap\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.NewVirtualServer(ctx, \"http\", \u0026ltm.VirtualServerArgs{\n\t\t\tName:        pulumi.String(\"/Common/terraform_vs_http\"),\n\t\t\tDestination: pulumi.String(\"10.12.12.12\"),\n\t\t\tPort:        pulumi.Int(80),\n\t\t\tPool:        pulumi.String(\"/Common/the-default-pool\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewVirtualServer(ctx, \"httpsVirtualServer\", \u0026ltm.VirtualServerArgs{\n\t\t\tName:        pulumi.String(\"/Common/terraform_vs_https\"),\n\t\t\tDestination: pulumi.Any(_var.Vip_ip),\n\t\t\tDescription: pulumi.String(\"VirtualServer-test\"),\n\t\t\tPort:        pulumi.Int(443),\n\t\t\tPool:        pulumi.Any(_var.Pool),\n\t\t\tProfiles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"/Common/tcp\"),\n\t\t\t\tpulumi.String(\"/Common/my-awesome-ssl-cert\"),\n\t\t\t\tpulumi.String(\"/Common/http\"),\n\t\t\t},\n\t\t\tSourceAddressTranslation: pulumi.String(\"automap\"),\n\t\t\tTranslateAddress:         pulumi.String(\"enabled\"),\n\t\t\tTranslatePort:            pulumi.String(\"enabled\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = ltm.NewVirtualServer(ctx, \"httpsLtm_virtualServerVirtualServer\", \u0026ltm.VirtualServerArgs{\n\t\t\tName:        pulumi.String(\"/Common/terraform_vs_https\"),\n\t\t\tDestination: pulumi.String(\"10.255.255.254\"),\n\t\t\tDescription: pulumi.String(\"VirtualServer-test\"),\n\t\t\tPort:        pulumi.Int(443),\n\t\t\tClientProfiles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"/Common/clientssl\"),\n\t\t\t},\n\t\t\tServerProfiles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"/Common/serverssl\"),\n\t\t\t},\n\t\t\tSecurityLogProfiles: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"/Common/global-network\"),\n\t\t\t},\n\t\t\tSourceAddressTranslation: pulumi.String(\"automap\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clientProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of client context profiles associated on the virtual server. Not mutually exclusive with profiles and server_profiles\n"
                },
                "defaultPersistenceProfile": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of Virtual server\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination IP\n"
                },
                "fallbackPersistenceProfile": {
                    "type": "string",
                    "description": "Specifies a fallback persistence profile for the Virtual Server to use when the default persistence profile is not available.\n"
                },
                "ipProtocol": {
                    "type": "string",
                    "description": "Specify the IP protocol to use with the the virtual server (all, tcp, or udp are valid)\n"
                },
                "irules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The iRules list you want run on this virtual server. iRules help automate the intercepting, processing, and routing of application traffic.\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Mask can either be in CIDR notation or decimal, i.e.: 24 or 255.255.255.0. A CIDR mask of 0 is the same as 0.0.0.0\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the virtual server\n"
                },
                "perFlowRequestAccessPolicy": {
                    "type": "string"
                },
                "persistenceProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of persistence profiles associated with the Virtual Server.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pool": {
                    "type": "string",
                    "description": "Default pool name\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Listen port for the virtual server\n"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of profiles associated both client and server contexts on the virtual server. This includes protocol, ssl, http, etc.\n"
                },
                "securityLogProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the log profile applied to the virtual server.\n"
                },
                "serverProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of server context profiles associated on the virtual server. Not mutually exclusive with profiles and client_profiles\n"
                },
                "snatpool": {
                    "type": "string",
                    "description": "Specifies the name of an existing SNAT pool that you want the virtual server to use to implement selective and intelligent SNATs. DEPRECATED - see Virtual Server Property Groups source-address-translation\n"
                },
                "source": {
                    "type": "string",
                    "description": "Specifies an IP address or network from which the virtual server will accept traffic.\n"
                },
                "sourceAddressTranslation": {
                    "type": "string",
                    "description": "Can be either omitted for none or the values automap or snat\n"
                },
                "state": {
                    "type": "string",
                    "description": "Specifies whether the virtual server and its resources are available for load balancing. The default is Enabled\n"
                },
                "translateAddress": {
                    "type": "string",
                    "description": "Enables or disables address translation for the virtual server. Turn address translation off for a virtual server if you want to use the virtual server to load balance connections to any address. This option is useful when the system is load balancing devices that have the same IP address.\n"
                },
                "translatePort": {
                    "type": "string",
                    "description": "Enables or disables port translation. Turn port translation off for a virtual server if you want to use the virtual server to load balance connections to any service\n"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The virtual server is enabled/disabled on this set of VLANs. See vlans-disabled and vlans-enabled.\n"
                },
                "vlansEnabled": {
                    "type": "boolean",
                    "description": "Enables the virtual server on the VLANs specified by the VLANs option.\n"
                }
            },
            "required": [
                "destination",
                "fallbackPersistenceProfile",
                "ipProtocol",
                "mask",
                "name",
                "perFlowRequestAccessPolicy",
                "port",
                "profiles",
                "snatpool",
                "source",
                "sourceAddressTranslation",
                "translateAddress",
                "translatePort",
                "vlansEnabled"
            ],
            "inputProperties": {
                "clientProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of client context profiles associated on the virtual server. Not mutually exclusive with profiles and server_profiles\n"
                },
                "defaultPersistenceProfile": {
                    "type": "string"
                },
                "description": {
                    "type": "string",
                    "description": "Description of Virtual server\n"
                },
                "destination": {
                    "type": "string",
                    "description": "Destination IP\n"
                },
                "fallbackPersistenceProfile": {
                    "type": "string",
                    "description": "Specifies a fallback persistence profile for the Virtual Server to use when the default persistence profile is not available.\n"
                },
                "ipProtocol": {
                    "type": "string",
                    "description": "Specify the IP protocol to use with the the virtual server (all, tcp, or udp are valid)\n"
                },
                "irules": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The iRules list you want run on this virtual server. iRules help automate the intercepting, processing, and routing of application traffic.\n"
                },
                "mask": {
                    "type": "string",
                    "description": "Mask can either be in CIDR notation or decimal, i.e.: 24 or 255.255.255.0. A CIDR mask of 0 is the same as 0.0.0.0\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the virtual server\n"
                },
                "perFlowRequestAccessPolicy": {
                    "type": "string"
                },
                "persistenceProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of persistence profiles associated with the Virtual Server.\n"
                },
                "policies": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "pool": {
                    "type": "string",
                    "description": "Default pool name\n"
                },
                "port": {
                    "type": "integer",
                    "description": "Listen port for the virtual server\n"
                },
                "profiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of profiles associated both client and server contexts on the virtual server. This includes protocol, ssl, http, etc.\n"
                },
                "securityLogProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the log profile applied to the virtual server.\n"
                },
                "serverProfiles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "List of server context profiles associated on the virtual server. Not mutually exclusive with profiles and client_profiles\n"
                },
                "snatpool": {
                    "type": "string",
                    "description": "Specifies the name of an existing SNAT pool that you want the virtual server to use to implement selective and intelligent SNATs. DEPRECATED - see Virtual Server Property Groups source-address-translation\n"
                },
                "source": {
                    "type": "string",
                    "description": "Specifies an IP address or network from which the virtual server will accept traffic.\n"
                },
                "sourceAddressTranslation": {
                    "type": "string",
                    "description": "Can be either omitted for none or the values automap or snat\n"
                },
                "state": {
                    "type": "string",
                    "description": "Specifies whether the virtual server and its resources are available for load balancing. The default is Enabled\n"
                },
                "translateAddress": {
                    "type": "string",
                    "description": "Enables or disables address translation for the virtual server. Turn address translation off for a virtual server if you want to use the virtual server to load balance connections to any address. This option is useful when the system is load balancing devices that have the same IP address.\n"
                },
                "translatePort": {
                    "type": "string",
                    "description": "Enables or disables port translation. Turn port translation off for a virtual server if you want to use the virtual server to load balance connections to any service\n"
                },
                "vlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The virtual server is enabled/disabled on this set of VLANs. See vlans-disabled and vlans-enabled.\n"
                },
                "vlansEnabled": {
                    "type": "boolean",
                    "description": "Enables the virtual server on the VLANs specified by the VLANs option.\n"
                }
            },
            "requiredInputs": [
                "destination",
                "name",
                "port"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VirtualServer resources.\n",
                "properties": {
                    "clientProfiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of client context profiles associated on the virtual server. Not mutually exclusive with profiles and server_profiles\n"
                    },
                    "defaultPersistenceProfile": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of Virtual server\n"
                    },
                    "destination": {
                        "type": "string",
                        "description": "Destination IP\n"
                    },
                    "fallbackPersistenceProfile": {
                        "type": "string",
                        "description": "Specifies a fallback persistence profile for the Virtual Server to use when the default persistence profile is not available.\n"
                    },
                    "ipProtocol": {
                        "type": "string",
                        "description": "Specify the IP protocol to use with the the virtual server (all, tcp, or udp are valid)\n"
                    },
                    "irules": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The iRules list you want run on this virtual server. iRules help automate the intercepting, processing, and routing of application traffic.\n"
                    },
                    "mask": {
                        "type": "string",
                        "description": "Mask can either be in CIDR notation or decimal, i.e.: 24 or 255.255.255.0. A CIDR mask of 0 is the same as 0.0.0.0\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the virtual server\n"
                    },
                    "perFlowRequestAccessPolicy": {
                        "type": "string"
                    },
                    "persistenceProfiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of persistence profiles associated with the Virtual Server.\n"
                    },
                    "policies": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "pool": {
                        "type": "string",
                        "description": "Default pool name\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "Listen port for the virtual server\n"
                    },
                    "profiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of profiles associated both client and server contexts on the virtual server. This includes protocol, ssl, http, etc.\n"
                    },
                    "securityLogProfiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the log profile applied to the virtual server.\n"
                    },
                    "serverProfiles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of server context profiles associated on the virtual server. Not mutually exclusive with profiles and client_profiles\n"
                    },
                    "snatpool": {
                        "type": "string",
                        "description": "Specifies the name of an existing SNAT pool that you want the virtual server to use to implement selective and intelligent SNATs. DEPRECATED - see Virtual Server Property Groups source-address-translation\n"
                    },
                    "source": {
                        "type": "string",
                        "description": "Specifies an IP address or network from which the virtual server will accept traffic.\n"
                    },
                    "sourceAddressTranslation": {
                        "type": "string",
                        "description": "Can be either omitted for none or the values automap or snat\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Specifies whether the virtual server and its resources are available for load balancing. The default is Enabled\n"
                    },
                    "translateAddress": {
                        "type": "string",
                        "description": "Enables or disables address translation for the virtual server. Turn address translation off for a virtual server if you want to use the virtual server to load balance connections to any address. This option is useful when the system is load balancing devices that have the same IP address.\n"
                    },
                    "translatePort": {
                        "type": "string",
                        "description": "Enables or disables port translation. Turn port translation off for a virtual server if you want to use the virtual server to load balance connections to any service\n"
                    },
                    "vlans": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The virtual server is enabled/disabled on this set of VLANs. See vlans-disabled and vlans-enabled.\n"
                    },
                    "vlansEnabled": {
                        "type": "boolean",
                        "description": "Enables the virtual server on the VLANs specified by the VLANs option.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:net/route:Route": {
            "description": "`f5bigip.net.Route` Manages a route configuration\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst route2 = new f5bigip.net.Route(\"route2\", {\n    gw: \"1.1.1.2\",\n    name: \"/Common/external-route\",\n    network: \"10.10.10.0/24\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nroute2 = f5bigip.net.Route(\"route2\",\n    gw=\"1.1.1.2\",\n    name=\"/Common/external-route\",\n    network=\"10.10.10.0/24\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var route2 = new F5BigIP.Net.Route(\"route2\", new F5BigIP.Net.RouteArgs\n        {\n            Gw = \"1.1.1.2\",\n            Name = \"/Common/external-route\",\n            Network = \"10.10.10.0/24\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/net\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := net.NewRoute(ctx, \"route2\", \u0026net.RouteArgs{\n\t\t\tGw:      pulumi.String(\"1.1.1.2\"),\n\t\t\tName:    pulumi.String(\"/Common/external-route\"),\n\t\t\tNetwork: pulumi.String(\"10.10.10.0/24\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "gw": {
                    "type": "string",
                    "description": "Specifies a gateway address for the route.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the route.Name of Route should be full path,full path is the combination of the `partition + route name`,For ex: `/Common/test-net-route`.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The destination subnet and netmask for the route.\n"
                },
                "reject": {
                    "type": "boolean",
                    "description": "reject route\n"
                },
                "tunnelRef": {
                    "type": "string",
                    "description": "tunnel_ref to route traffic\n"
                }
            },
            "required": [
                "name",
                "network"
            ],
            "inputProperties": {
                "gw": {
                    "type": "string",
                    "description": "Specifies a gateway address for the route.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the route.Name of Route should be full path,full path is the combination of the `partition + route name`,For ex: `/Common/test-net-route`.\n"
                },
                "network": {
                    "type": "string",
                    "description": "The destination subnet and netmask for the route.\n"
                },
                "reject": {
                    "type": "boolean",
                    "description": "reject route\n"
                },
                "tunnelRef": {
                    "type": "string",
                    "description": "tunnel_ref to route traffic\n"
                }
            },
            "requiredInputs": [
                "name",
                "network"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Route resources.\n",
                "properties": {
                    "gw": {
                        "type": "string",
                        "description": "Specifies a gateway address for the route.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the route.Name of Route should be full path,full path is the combination of the `partition + route name`,For ex: `/Common/test-net-route`.\n"
                    },
                    "network": {
                        "type": "string",
                        "description": "The destination subnet and netmask for the route.\n"
                    },
                    "reject": {
                        "type": "boolean",
                        "description": "reject route\n"
                    },
                    "tunnelRef": {
                        "type": "string",
                        "description": "tunnel_ref to route traffic\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:net/selfIp:SelfIp": {
            "description": "`f5bigip.net.SelfIp` Manages a selfip configuration\n\nResource should be named with their \"full path\". The full path is the combination of the partition + name of the resource, for example /Common/my-selfip.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst selfip1 = new f5bigip.net.SelfIp(\"selfip1\", {\n    name: \"/Common/internalselfIP\",\n    ip: \"11.1.1.1/24\",\n    vlan: \"/Common/internal\",\n    trafficGroup: \"traffic-group-1\",\n    portLockdowns: [\n        \"tcp:4040\",\n        \"udp:5050\",\n        \"egp:0\",\n    ],\n}, {\n    dependsOn: [bigip_net_vlan.vlan1],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nselfip1 = f5bigip.net.SelfIp(\"selfip1\",\n    name=\"/Common/internalselfIP\",\n    ip=\"11.1.1.1/24\",\n    vlan=\"/Common/internal\",\n    traffic_group=\"traffic-group-1\",\n    port_lockdowns=[\n        \"tcp:4040\",\n        \"udp:5050\",\n        \"egp:0\",\n    ],\n    opts=pulumi.ResourceOptions(depends_on=[bigip_net_vlan[\"vlan1\"]]))\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var selfip1 = new F5BigIP.Net.SelfIp(\"selfip1\", new F5BigIP.Net.SelfIpArgs\n        {\n            Name = \"/Common/internalselfIP\",\n            Ip = \"11.1.1.1/24\",\n            Vlan = \"/Common/internal\",\n            TrafficGroup = \"traffic-group-1\",\n            PortLockdowns = \n            {\n                \"tcp:4040\",\n                \"udp:5050\",\n                \"egp:0\",\n            },\n        }, new CustomResourceOptions\n        {\n            DependsOn = \n            {\n                bigip_net_vlan.Vlan1,\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/net\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := net.NewSelfIp(ctx, \"selfip1\", \u0026net.SelfIpArgs{\n\t\t\tName:         pulumi.String(\"/Common/internalselfIP\"),\n\t\t\tIp:           pulumi.String(\"11.1.1.1/24\"),\n\t\t\tVlan:         pulumi.String(\"/Common/internal\"),\n\t\t\tTrafficGroup: pulumi.String(\"traffic-group-1\"),\n\t\t\tPortLockdowns: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"tcp:4040\"),\n\t\t\t\tpulumi.String(\"udp:5050\"),\n\t\t\t\tpulumi.String(\"egp:0\"),\n\t\t\t},\n\t\t}, pulumi.DependsOn([]pulumi.Resource{\n\t\t\tbigip_net_vlan.Vlan1,\n\t\t}))\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "ip": {
                    "type": "string",
                    "description": "The Self IP's address and netmask.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the selfip\n"
                },
                "portLockdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the port lockdown, defaults to `Allow Default` if not specified.\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.\n"
                },
                "vlan": {
                    "type": "string",
                    "description": "Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.\n"
                }
            },
            "required": [
                "ip",
                "name",
                "vlan"
            ],
            "inputProperties": {
                "ip": {
                    "type": "string",
                    "description": "The Self IP's address and netmask.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the selfip\n"
                },
                "portLockdowns": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specifies the port lockdown, defaults to `Allow Default` if not specified.\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.\n"
                },
                "vlan": {
                    "type": "string",
                    "description": "Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.\n"
                }
            },
            "requiredInputs": [
                "ip",
                "name",
                "vlan"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SelfIp resources.\n",
                "properties": {
                    "ip": {
                        "type": "string",
                        "description": "The Self IP's address and netmask.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the selfip\n"
                    },
                    "portLockdowns": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the port lockdown, defaults to `Allow Default` if not specified.\n"
                    },
                    "trafficGroup": {
                        "type": "string",
                        "description": "Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.\n"
                    },
                    "vlan": {
                        "type": "string",
                        "description": "Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:net/vlan:Vlan": {
            "description": "`f5bigip.net.Vlan` Manages a vlan configuration\n\nFor resources should be named with their \"full path\". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst vlan1 = new f5bigip.net.Vlan(\"vlan1\", {\n    interfaces: [{\n        tagged: false,\n        vlanport: \"1.2\",\n    }],\n    name: \"/Common/Internal\",\n    tag: 101,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nvlan1 = f5bigip.net.Vlan(\"vlan1\",\n    interfaces=[f5bigip.net.VlanInterfaceArgs(\n        tagged=False,\n        vlanport=\"1.2\",\n    )],\n    name=\"/Common/Internal\",\n    tag=101)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vlan1 = new F5BigIP.Net.Vlan(\"vlan1\", new F5BigIP.Net.VlanArgs\n        {\n            Interfaces = \n            {\n                new F5BigIP.Net.Inputs.VlanInterfaceArgs\n                {\n                    Tagged = false,\n                    Vlanport = \"1.2\",\n                },\n            },\n            Name = \"/Common/Internal\",\n            Tag = 101,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/net\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := net.NewVlan(ctx, \"vlan1\", \u0026net.VlanArgs{\n\t\t\tInterfaces: net.VlanInterfaceArray{\n\t\t\t\t\u0026net.VlanInterfaceArgs{\n\t\t\t\t\tTagged:   pulumi.Bool(false),\n\t\t\t\t\tVlanport: pulumi.String(\"1.2\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tName: pulumi.String(\"/Common/Internal\"),\n\t\t\tTag:  pulumi.Int(101),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:net/VlanInterface:VlanInterface"
                    },
                    "description": "Specifies which interfaces you want this VLAN to use for traffic management.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vlan\n"
                },
                "tag": {
                    "type": "integer",
                    "description": "Specifies a number that the system adds into the header of any frame passing through the VLAN.\n"
                }
            },
            "required": [
                "name"
            ],
            "inputProperties": {
                "interfaces": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:net/VlanInterface:VlanInterface"
                    },
                    "description": "Specifies which interfaces you want this VLAN to use for traffic management.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the vlan\n"
                },
                "tag": {
                    "type": "integer",
                    "description": "Specifies a number that the system adds into the header of any frame passing through the VLAN.\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vlan resources.\n",
                "properties": {
                    "interfaces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:net/VlanInterface:VlanInterface"
                        },
                        "description": "Specifies which interfaces you want this VLAN to use for traffic management.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the vlan\n"
                    },
                    "tag": {
                        "type": "integer",
                        "description": "Specifies a number that the system adds into the header of any frame passing through the VLAN.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ssl/certificate:Certificate": {
            "description": "`f5bigip.ssl.Certificate` This resource will import SSL certificates on BIG-IP LTM. \nCertificates can be imported from certificate files on the local disk, in PEM format\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * from \"fs\";\n\nconst test_cert = new f5bigip.ssl.Certificate(\"test-cert\", {\n    name: \"servercert.crt\",\n    content: fs.readFileSync(\"servercert.crt\"),\n    partition: \"Common\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_cert = f5bigip.ssl.Certificate(\"test-cert\",\n    name=\"servercert.crt\",\n    content=(lambda path: open(path).read())(\"servercert.crt\"),\n    partition=\"Common\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_cert = new F5BigIP.Ssl.Certificate(\"test-cert\", new F5BigIP.Ssl.CertificateArgs\n        {\n            Name = \"servercert.crt\",\n            Content = File.ReadAllText(\"servercert.crt\"),\n            Partition = \"Common\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ssl\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ssl.NewCertificate(ctx, \"test_cert\", \u0026ssl.CertificateArgs{\n\t\t\tName:      pulumi.String(\"servercert.crt\"),\n\t\t\tContent:   readFileOrPanic(\"servercert.crt\"),\n\t\t\tPartition: pulumi.String(\"Common\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content of certificate on Disk\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "Full Path Name of ssl certificate\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Certificate to be Imported on to BIGIP\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Partition of ssl certificate\n"
                }
            },
            "required": [
                "content",
                "fullPath",
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "Content of certificate on Disk\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "Full Path Name of ssl certificate\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Certificate to be Imported on to BIGIP\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Partition of ssl certificate\n"
                }
            },
            "requiredInputs": [
                "content",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Certificate resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "Content of certificate on Disk\n"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "Full Path Name of ssl certificate\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the SSL Certificate to be Imported on to BIGIP\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Partition of ssl certificate\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:ssl/key:Key": {
            "description": "`f5bigip.ssl.Key` This resource will import SSL certificate key on BIG-IP LTM. \nCertificate key can be imported from certificate key files on the local disk, in PEM format\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * from \"fs\";\n\nconst test_key = new f5bigip.ssl.Key(\"test-key\", {\n    name: \"serverkey.key\",\n    content: fs.readFileSync(\"serverkey.key\"),\n    partition: \"Common\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest_key = f5bigip.ssl.Key(\"test-key\",\n    name=\"serverkey.key\",\n    content=(lambda path: open(path).read())(\"serverkey.key\"),\n    partition=\"Common\")\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test_key = new F5BigIP.Ssl.Key(\"test-key\", new F5BigIP.Ssl.KeyArgs\n        {\n            Name = \"serverkey.key\",\n            Content = File.ReadAllText(\"serverkey.key\"),\n            Partition = \"Common\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ssl\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ssl.NewKey(ctx, \"test_key\", \u0026ssl.KeyArgs{\n\t\t\tName:      pulumi.String(\"serverkey.key\"),\n\t\t\tContent:   readFileOrPanic(\"serverkey.key\"),\n\t\t\tPartition: pulumi.String(\"Common\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "content": {
                    "type": "string",
                    "description": "Content of SSL certificate key present on local Disk\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "Full Path Name of ssl key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Certificate key to be Imported on to BIGIP\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Partition of ssl certificate key\n"
                }
            },
            "required": [
                "content",
                "fullPath",
                "name"
            ],
            "inputProperties": {
                "content": {
                    "type": "string",
                    "description": "Content of SSL certificate key present on local Disk\n"
                },
                "fullPath": {
                    "type": "string",
                    "description": "Full Path Name of ssl key\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the SSL Certificate key to be Imported on to BIGIP\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Partition of ssl certificate key\n"
                }
            },
            "requiredInputs": [
                "content",
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Key resources.\n",
                "properties": {
                    "content": {
                        "type": "string",
                        "description": "Content of SSL certificate key present on local Disk\n"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "Full Path Name of ssl key\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the SSL Certificate key to be Imported on to BIGIP\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Partition of ssl certificate key\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/bigIpLicense:BigIpLicense": {
            "properties": {
                "command": {
                    "type": "string",
                    "description": "Tmsh command to execute tmsh commands like install\n"
                },
                "registrationKey": {
                    "type": "string",
                    "description": "A unique Key F5 provides for Licensing BIG-IP\n"
                }
            },
            "required": [
                "command",
                "registrationKey"
            ],
            "inputProperties": {
                "command": {
                    "type": "string",
                    "description": "Tmsh command to execute tmsh commands like install\n"
                },
                "registrationKey": {
                    "type": "string",
                    "description": "A unique Key F5 provides for Licensing BIG-IP\n"
                }
            },
            "requiredInputs": [
                "command",
                "registrationKey"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering BigIpLicense resources.\n",
                "properties": {
                    "command": {
                        "type": "string",
                        "description": "Tmsh command to execute tmsh commands like install\n"
                    },
                    "registrationKey": {
                        "type": "string",
                        "description": "A unique Key F5 provides for Licensing BIG-IP\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/dns:Dns": {
            "description": "`f5bigip.sys.Dns` Configures DNS server on F5 BIG-IP\n\n\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst dns1 = new f5bigip.sys.Dns(\"dns1\", {\n    description: \"/Common/DNS1\",\n    nameServers: [\"1.1.1.1\"],\n    numberOfDots: 2,\n    searches: [\"f5.com\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ndns1 = f5bigip.sys.Dns(\"dns1\",\n    description=\"/Common/DNS1\",\n    name_servers=[\"1.1.1.1\"],\n    number_of_dots=2,\n    searches=[\"f5.com\"])\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var dns1 = new F5BigIP.Sys.Dns(\"dns1\", new F5BigIP.Sys.DnsArgs\n        {\n            Description = \"/Common/DNS1\",\n            NameServers = \n            {\n                \"1.1.1.1\",\n            },\n            NumberOfDots = 2,\n            Searches = \n            {\n                \"f5.com\",\n            },\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/sys\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := sys.NewDns(ctx, \"dns1\", \u0026sys.DnsArgs{\n\t\t\tDescription: pulumi.String(\"/Common/DNS1\"),\n\t\t\tNameServers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"1.1.1.1\"),\n\t\t\t},\n\t\t\tNumberOfDots: pulumi.Int(2),\n\t\t\tSearches: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"f5.com\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Provide description for your DNS server\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name or IP address of the DNS server\n"
                },
                "numberOfDots": {
                    "type": "integer",
                    "description": "Configures the number of dots needed in a name before an initial absolute query will be made.\n"
                },
                "searches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify what domains you want to search\n"
                }
            },
            "required": [
                "description"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Provide description for your DNS server\n"
                },
                "nameServers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Name or IP address of the DNS server\n"
                },
                "numberOfDots": {
                    "type": "integer",
                    "description": "Configures the number of dots needed in a name before an initial absolute query will be made.\n"
                },
                "searches": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Specify what domains you want to search\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Dns resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Provide description for your DNS server\n"
                    },
                    "nameServers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Name or IP address of the DNS server\n"
                    },
                    "numberOfDots": {
                        "type": "integer",
                        "description": "Configures the number of dots needed in a name before an initial absolute query will be made.\n"
                    },
                    "searches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specify what domains you want to search\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/iApp:IApp": {
            "description": "`f5bigip.sys.IApp` resource helps you to deploy Application Services template that can be used to automate and orchestrate Layer 4-7 applications service deployments using F5 Network.  \n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\nimport * from \"fs\";\n\nconst simplehttp = new f5bigip.sys.IApp(\"simplehttp\", {\n    name: \"simplehttp\",\n    jsonfile: fs.readFileSync(\"simplehttp.json\"),\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsimplehttp = f5bigip.sys.IApp(\"simplehttp\",\n    name=\"simplehttp\",\n    jsonfile=(lambda path: open(path).read())(\"simplehttp.json\"))\n```\n```csharp\nusing System.IO;\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var simplehttp = new F5BigIP.Sys.IApp(\"simplehttp\", new F5BigIP.Sys.IAppArgs\n        {\n            Name = \"simplehttp\",\n            Jsonfile = File.ReadAllText(\"simplehttp.json\"),\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"io/ioutil\"\n\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/sys\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc readFileOrPanic(path string) pulumi.StringPtrInput {\n\tdata, err := ioutil.ReadFile(path)\n\tif err != nil {\n\t\tpanic(err.Error())\n\t}\n\treturn pulumi.String(string(data))\n}\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := sys.NewIApp(ctx, \"simplehttp\", \u0026sys.IAppArgs{\n\t\t\tName:     pulumi.String(\"simplehttp\"),\n\t\t\tJsonfile: readFileOrPanic(\"simplehttp.json\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n\n{{% /example %}}\n{{% example %}}\n### Json File\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\n```\n```python\nimport pulumi\n```\n```csharp\nusing Pulumi;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\treturn nil\n\t})\n}\n```\n\n * `description` - User defined description.\n * `deviceGroup` - The name of the device group that the application service is assigned to.\n * `executeAction` - Run the specified template action associated with the application.\n * `inheritedDevicegroup`- Read-only. Shows whether the application folder will automatically remain with the same device-group as its parent folder. Use 'device-group default' or 'device-group non-default' to set this.\n * `inheritedTrafficGroup` - Read-only. Shows whether the application folder will automatically remain with the same traffic-group as its parent folder. Use 'traffic-group default' or 'traffic-group non-default' to set this.\n * `partition` - Displays the administrative partition within which the application resides.\n * `strictUpdates` - Specifies whether configuration objects contained in the application may be directly modified, outside the context of the system's application management interfaces.\n * `template` - The template defines the configuration for the application. This may be changed after the application has been created to move the application to a new template.\n * `templateModified` - Indicates that the application template used to deploy the application has been modified. The application should be updated to make use of the latest changes.\n * `templatePrerequisiteErrors` - Indicates any missing prerequisites associated with the template that defines this application.\n * `trafficGroup` - The name of the traffic group that the application service is assigned to.\n * `lists` - string values\n * `metadata` - User defined generic data for the application service. It is a name and value pair.\n * `tables` - Values provided like pool name, nodes etc.\n * `variables` - Name, values, encrypted or not\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Address of the Iapp which needs to be Iappensed\n"
                },
                "devicegroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "executeAction": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "inheritedDevicegroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "inheritedTrafficGroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "jsonfile": {
                    "type": "string",
                    "description": "Refer to the Json file which will be deployed on F5 BIG-IP.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppList:IAppList"
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppMetadata:IAppMetadata"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the iApp.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Address of the Iapp which needs to be Iappensed\n"
                },
                "strictUpdates": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppTable:IAppTable"
                    }
                },
                "template": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "templateModified": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "templatePrerequisiteErrors": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppVariable:IAppVariable"
                    }
                }
            },
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Address of the Iapp which needs to be Iappensed\n"
                },
                "devicegroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "executeAction": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "inheritedDevicegroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "inheritedTrafficGroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "jsonfile": {
                    "type": "string",
                    "description": "Refer to the Json file which will be deployed on F5 BIG-IP.\n"
                },
                "lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppList:IAppList"
                    }
                },
                "metadatas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppMetadata:IAppMetadata"
                    }
                },
                "name": {
                    "type": "string",
                    "description": "Name of the iApp.\n"
                },
                "partition": {
                    "type": "string",
                    "description": "Address of the Iapp which needs to be Iappensed\n"
                },
                "strictUpdates": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "tables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppTable:IAppTable"
                    }
                },
                "template": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "templateModified": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "templatePrerequisiteErrors": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "trafficGroup": {
                    "type": "string",
                    "description": "BIG-IP password\n"
                },
                "variables": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/f5bigip:sys/IAppVariable:IAppVariable"
                    }
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering IApp resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Address of the Iapp which needs to be Iappensed\n"
                    },
                    "devicegroup": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "executeAction": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "inheritedDevicegroup": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "inheritedTrafficGroup": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "jsonfile": {
                        "type": "string",
                        "description": "Refer to the Json file which will be deployed on F5 BIG-IP.\n"
                    },
                    "lists": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:sys/IAppList:IAppList"
                        }
                    },
                    "metadatas": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:sys/IAppMetadata:IAppMetadata"
                        }
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the iApp.\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Address of the Iapp which needs to be Iappensed\n"
                    },
                    "strictUpdates": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "tables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:sys/IAppTable:IAppTable"
                        }
                    },
                    "template": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "templateModified": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "templatePrerequisiteErrors": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "trafficGroup": {
                        "type": "string",
                        "description": "BIG-IP password\n"
                    },
                    "variables": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:sys/IAppVariable:IAppVariable"
                        }
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/ntp:Ntp": {
            "description": "`f5bigip.sys.Ntp` provides details about a specific bigip\n\nThis resource is helpful when configuring NTP server on the BIG-IP.\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst ntp1 = new f5bigip.sys.Ntp(\"ntp1\", {\n    description: \"/Common/NTP1\",\n    servers: [\"time.facebook.com\"],\n    timezone: \"America/Los_Angeles\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nntp1 = f5bigip.sys.Ntp(\"ntp1\",\n    description=\"/Common/NTP1\",\n    servers=[\"time.facebook.com\"],\n    timezone=\"America/Los_Angeles\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var ntp1 = new F5BigIP.Sys.Ntp(\"ntp1\", new F5BigIP.Sys.NtpArgs\n        {\n            Description = \"/Common/NTP1\",\n            Servers = \n            {\n                \"time.facebook.com\",\n            },\n            Timezone = \"America/Los_Angeles\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/sys\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := sys.NewNtp(ctx, \"ntp1\", \u0026sys.NtpArgs{\n\t\t\tDescription: pulumi.String(\"/Common/NTP1\"),\n\t\t\tServers: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"time.facebook.com\"),\n\t\t\t},\n\t\t\tTimezone: pulumi.String(\"America/Los_Angeles\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "Name of the ntp Servers\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Adds NTP servers to or deletes NTP servers from the BIG-IP system.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Specifies the time zone that you want to use for the system time.\n"
                }
            },
            "required": [
                "description"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "Name of the ntp Servers\n"
                },
                "servers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Adds NTP servers to or deletes NTP servers from the BIG-IP system.\n"
                },
                "timezone": {
                    "type": "string",
                    "description": "Specifies the time zone that you want to use for the system time.\n"
                }
            },
            "requiredInputs": [
                "description"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Ntp resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Name of the ntp Servers\n"
                    },
                    "servers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Adds NTP servers to or deletes NTP servers from the BIG-IP system.\n"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Specifies the time zone that you want to use for the system time.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/provision:Provision": {
            "description": "`f5bigip.sys.Provision` Manage BIG-IP module provisioning. This resource will only provision at the standard levels of Dedicated, Nominal, and Minimum.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst gtm = new f5bigip.sys.Provision(\"gtm\", {\n    cpuRatio: 0,\n    diskRatio: 0,\n    level: \"nominal\",\n    memoryRatio: 0,\n    name: \"gtm\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ngtm = f5bigip.sys.Provision(\"gtm\",\n    cpu_ratio=0,\n    disk_ratio=0,\n    level=\"nominal\",\n    memory_ratio=0,\n    name=\"gtm\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var gtm = new F5BigIP.Sys.Provision(\"gtm\", new F5BigIP.Sys.ProvisionArgs\n        {\n            CpuRatio = 0,\n            DiskRatio = 0,\n            Level = \"nominal\",\n            MemoryRatio = 0,\n            Name = \"gtm\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/sys\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := sys.NewProvision(ctx, \"gtm\", \u0026sys.ProvisionArgs{\n\t\t\tCpuRatio:    pulumi.Int(0),\n\t\t\tDiskRatio:   pulumi.Int(0),\n\t\t\tLevel:       pulumi.String(\"nominal\"),\n\t\t\tMemoryRatio: pulumi.Int(0),\n\t\t\tName:        pulumi.String(\"gtm\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "cpuRatio": {
                    "type": "integer",
                    "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                },
                "diskRatio": {
                    "type": "integer",
                    "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                },
                "fullPath": {
                    "type": "string"
                },
                "level": {
                    "type": "string",
                    "description": "Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to `dedicated` requires setting all others to `none`. Setting the level of a module to `none` means the module is not activated.\ndefault is `nominal`\npossible options:\n* nominal\n* minimum\n* none\n* dedicated\n"
                },
                "memoryRatio": {
                    "type": "integer",
                    "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of module to provision in BIG-IP. \npossible options:\n* afm\n* am\n* apm\n* cgnat\n* asm\n* avr\n* dos\n* fps\n* gtm\n* ilx\n* lc\n* ltm\n* pem\n* sslo\n* swg\n* urldb\n"
                }
            },
            "required": [
                "fullPath",
                "name"
            ],
            "inputProperties": {
                "cpuRatio": {
                    "type": "integer",
                    "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                },
                "diskRatio": {
                    "type": "integer",
                    "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                },
                "fullPath": {
                    "type": "string"
                },
                "level": {
                    "type": "string",
                    "description": "Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to `dedicated` requires setting all others to `none`. Setting the level of a module to `none` means the module is not activated.\ndefault is `nominal`\npossible options:\n* nominal\n* minimum\n* none\n* dedicated\n"
                },
                "memoryRatio": {
                    "type": "integer",
                    "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of module to provision in BIG-IP. \npossible options:\n* afm\n* am\n* apm\n* cgnat\n* asm\n* avr\n* dos\n* fps\n* gtm\n* ilx\n* lc\n* ltm\n* pem\n* sslo\n* swg\n* urldb\n"
                }
            },
            "requiredInputs": [
                "name"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Provision resources.\n",
                "properties": {
                    "cpuRatio": {
                        "type": "integer",
                        "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                    },
                    "diskRatio": {
                        "type": "integer",
                        "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                    },
                    "fullPath": {
                        "type": "string"
                    },
                    "level": {
                        "type": "string",
                        "description": "Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to `dedicated` requires setting all others to `none`. Setting the level of a module to `none` means the module is not activated.\ndefault is `nominal`\npossible options:\n* nominal\n* minimum\n* none\n* dedicated\n"
                    },
                    "memoryRatio": {
                        "type": "integer",
                        "description": "Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of module to provision in BIG-IP. \npossible options:\n* afm\n* am\n* apm\n* cgnat\n* asm\n* avr\n* dos\n* fps\n* gtm\n* ilx\n* lc\n* ltm\n* pem\n* sslo\n* swg\n* urldb\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/snmp:Snmp": {
            "description": "`f5bigip.sys.Snmp` provides details bout how to enable \"ilx\", \"asm\" \"apm\" resource on BIG-IP\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst snmp = new f5bigip.sys.Snmp(\"snmp\", {\n    allowedaddresses: [\"202.10.10.2\"],\n    sysContact: \" NetOPsAdmin s.shitole@f5.com\",\n    sysLocation: \"SeattleHQ\",\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsnmp = f5bigip.sys.Snmp(\"snmp\",\n    allowedaddresses=[\"202.10.10.2\"],\n    sys_contact=\" NetOPsAdmin s.shitole@f5.com\",\n    sys_location=\"SeattleHQ\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var snmp = new F5BigIP.Sys.Snmp(\"snmp\", new F5BigIP.Sys.SnmpArgs\n        {\n            Allowedaddresses = \n            {\n                \"202.10.10.2\",\n            },\n            SysContact = \" NetOPsAdmin s.shitole@f5.com\",\n            SysLocation = \"SeattleHQ\",\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/sys\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := sys.NewSnmp(ctx, \"snmp\", \u0026sys.SnmpArgs{\n\t\t\tAllowedaddresses: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"202.10.10.2\"),\n\t\t\t},\n\t\t\tSysContact:  pulumi.String(\" NetOPsAdmin s.shitole@f5.com\"),\n\t\t\tSysLocation: pulumi.String(\"SeattleHQ\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "allowedaddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.\n"
                },
                "sysContact": {
                    "type": "string",
                    "description": "Specifies the contact information for the system administrator.\n"
                },
                "sysLocation": {
                    "type": "string",
                    "description": "Describes the system's physical location.\n"
                }
            },
            "inputProperties": {
                "allowedaddresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.\n"
                },
                "sysContact": {
                    "type": "string",
                    "description": "Specifies the contact information for the system administrator.\n"
                },
                "sysLocation": {
                    "type": "string",
                    "description": "Describes the system's physical location.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Snmp resources.\n",
                "properties": {
                    "allowedaddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.\n"
                    },
                    "sysContact": {
                        "type": "string",
                        "description": "Specifies the contact information for the system administrator.\n"
                    },
                    "sysLocation": {
                        "type": "string",
                        "description": "Describes the system's physical location.\n"
                    }
                },
                "type": "object"
            }
        },
        "f5bigip:sys/snmpTraps:SnmpTraps": {
            "description": "`f5bigip.sys.SnmpTraps` provides details bout how to enable snmp_traps resource on BIG-IP\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst snmpTraps = new f5bigip.sys.SnmpTraps(\"snmp_traps\", {\n    community: \"f5community\",\n    description: \"Setup snmp traps\",\n    host: \"195.10.10.1\",\n    name: \"snmptraps\",\n    port: 111,\n});\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nsnmp_traps = f5bigip.sys.SnmpTraps(\"snmpTraps\",\n    community=\"f5community\",\n    description=\"Setup snmp traps\",\n    host=\"195.10.10.1\",\n    name=\"snmptraps\",\n    port=111)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var snmpTraps = new F5BigIP.Sys.SnmpTraps(\"snmpTraps\", new F5BigIP.Sys.SnmpTrapsArgs\n        {\n            Community = \"f5community\",\n            Description = \"Setup snmp traps\",\n            Host = \"195.10.10.1\",\n            Name = \"snmptraps\",\n            Port = 111,\n        });\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/sys\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := sys.NewSnmpTraps(ctx, \"snmpTraps\", \u0026sys.SnmpTrapsArgs{\n\t\t\tCommunity:   pulumi.String(\"f5community\"),\n\t\t\tDescription: pulumi.String(\"Setup snmp traps\"),\n\t\t\tHost:        pulumi.String(\"195.10.10.1\"),\n\t\t\tName:        pulumi.String(\"snmptraps\"),\n\t\t\tPort:        pulumi.Int(111),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "authPasswordencrypted": {
                    "type": "string",
                    "description": "Encrypted password\n"
                },
                "authProtocol": {
                    "type": "string",
                    "description": "Specifies the protocol used to authenticate the user.\n"
                },
                "community": {
                    "type": "string",
                    "description": "Specifies the community string used for this trap.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The port that the trap will be sent to.\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Specifies the authoritative security engine for SNMPv3.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host the trap will be sent to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snmp trap.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "User defined description.\n"
                },
                "privacyPassword": {
                    "type": "string",
                    "description": "Specifies the clear text password used to encrypt traffic. This field will not be displayed.\n"
                },
                "privacyPasswordEncrypted": {
                    "type": "string",
                    "description": "Specifies the encrypted password used to encrypt traffic.\n"
                },
                "privacyProtocol": {
                    "type": "string",
                    "description": "Specifies the protocol used to encrypt traffic.\n"
                },
                "securityLevel": {
                    "type": "string",
                    "description": "Specifies whether or not traffic is encrypted and whether or not authentication is required.\n"
                },
                "securityName": {
                    "type": "string",
                    "description": "Security name used in conjunction with SNMPv3.\n"
                },
                "version": {
                    "type": "string",
                    "description": "SNMP version used for sending the trap.\n"
                }
            },
            "required": [
                "securityLevel",
                "version"
            ],
            "inputProperties": {
                "authPasswordencrypted": {
                    "type": "string",
                    "description": "Encrypted password\n"
                },
                "authProtocol": {
                    "type": "string",
                    "description": "Specifies the protocol used to authenticate the user.\n"
                },
                "community": {
                    "type": "string",
                    "description": "Specifies the community string used for this trap.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The port that the trap will be sent to.\n"
                },
                "engineId": {
                    "type": "string",
                    "description": "Specifies the authoritative security engine for SNMPv3.\n"
                },
                "host": {
                    "type": "string",
                    "description": "The host the trap will be sent to.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the snmp trap.\n"
                },
                "port": {
                    "type": "integer",
                    "description": "User defined description.\n"
                },
                "privacyPassword": {
                    "type": "string",
                    "description": "Specifies the clear text password used to encrypt traffic. This field will not be displayed.\n"
                },
                "privacyPasswordEncrypted": {
                    "type": "string",
                    "description": "Specifies the encrypted password used to encrypt traffic.\n"
                },
                "privacyProtocol": {
                    "type": "string",
                    "description": "Specifies the protocol used to encrypt traffic.\n"
                },
                "securityLevel": {
                    "type": "string",
                    "description": "Specifies whether or not traffic is encrypted and whether or not authentication is required.\n"
                },
                "securityName": {
                    "type": "string",
                    "description": "Security name used in conjunction with SNMPv3.\n"
                },
                "version": {
                    "type": "string",
                    "description": "SNMP version used for sending the trap.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering SnmpTraps resources.\n",
                "properties": {
                    "authPasswordencrypted": {
                        "type": "string",
                        "description": "Encrypted password\n"
                    },
                    "authProtocol": {
                        "type": "string",
                        "description": "Specifies the protocol used to authenticate the user.\n"
                    },
                    "community": {
                        "type": "string",
                        "description": "Specifies the community string used for this trap.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The port that the trap will be sent to.\n"
                    },
                    "engineId": {
                        "type": "string",
                        "description": "Specifies the authoritative security engine for SNMPv3.\n"
                    },
                    "host": {
                        "type": "string",
                        "description": "The host the trap will be sent to.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the snmp trap.\n"
                    },
                    "port": {
                        "type": "integer",
                        "description": "User defined description.\n"
                    },
                    "privacyPassword": {
                        "type": "string",
                        "description": "Specifies the clear text password used to encrypt traffic. This field will not be displayed.\n"
                    },
                    "privacyPasswordEncrypted": {
                        "type": "string",
                        "description": "Specifies the encrypted password used to encrypt traffic.\n"
                    },
                    "privacyProtocol": {
                        "type": "string",
                        "description": "Specifies the protocol used to encrypt traffic.\n"
                    },
                    "securityLevel": {
                        "type": "string",
                        "description": "Specifies whether or not traffic is encrypted and whether or not authentication is required.\n"
                    },
                    "securityName": {
                        "type": "string",
                        "description": "Security name used in conjunction with SNMPv3.\n"
                    },
                    "version": {
                        "type": "string",
                        "description": "SNMP version used for sending the trap.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "f5bigip:ltm/getDataGroup:getDataGroup": {
            "description": "Use this data source (`f5bigip.ltm.DataGroup`) to get the data group details available on BIG-IP\n \n \n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst dG_TC3 = pulumi.output(f5bigip.ltm.getDataGroup({\n    name: \"test-dg\",\n    partition: \"Common\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nd_g__tc3 = f5bigip.ltm.get_data_group(name=\"test-dg\",\n    partition=\"Common\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var dG_TC3 = Output.Create(F5BigIP.Ltm.GetDataGroup.InvokeAsync(new F5BigIP.Ltm.GetDataGroupArgs\n        {\n            Name = \"test-dg\",\n            Partition = \"Common\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.LookupDataGroup(ctx, \u0026ltm.LookupDataGroupArgs{\n\t\t\tName:      \"test-dg\",\n\t\t\tPartition: \"Common\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getDataGroup.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the datagroup\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition of the datagroup\n"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/getDataGroupRecord:getDataGroupRecord"
                        },
                        "description": "Specifies record of type (string/ip/integer)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Data Group type (string, ip, integer)\"\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getDataGroup.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "records": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/getDataGroupRecord:getDataGroupRecord"
                        },
                        "description": "Specifies record of type (string/ip/integer)\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The Data Group type (string, ip, integer)\"\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition",
                    "records",
                    "type",
                    "id"
                ]
            }
        },
        "f5bigip:ltm/getIrule:getIrule": {
            "description": "Use this data source (`f5bigip.ltm.IRule`) to get the ltm irule details available on BIG-IP\n \n \n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test = pulumi.output(f5bigip.ltm.getIrule({\n    name: \"terraform_irule\",\n    partition: \"Common\",\n}));\n\nexport const bigipIrule = test.irule;\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest = f5bigip.ltm.get_irule(name=\"terraform_irule\",\n    partition=\"Common\")\npulumi.export(\"bigipIrule\", test.irule)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(F5BigIP.Ltm.GetIrule.InvokeAsync(new F5BigIP.Ltm.GetIruleArgs\n        {\n            Name = \"terraform_irule\",\n            Partition = \"Common\",\n        }));\n        this.BigipIrule = test.Apply(test =\u003e test.Irule);\n    }\n\n    [Output(\"bigipIrule\")]\n    public Output\u003cstring\u003e BigipIrule { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := ltm.GetIrule(ctx, \u0026ltm.GetIruleArgs{\n\t\t\tName:      \"terraform_irule\",\n\t\t\tPartition: \"Common\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"bigipIrule\", test.Irule)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getIrule.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the irule\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition of the ltm irule\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getIrule.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "irule": {
                        "type": "string",
                        "description": "Irule configured on bigip\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of irule configured on bigip with full path\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Bigip partition in which rule is configured\n"
                    }
                },
                "type": "object",
                "required": [
                    "irule",
                    "name",
                    "partition",
                    "id"
                ]
            }
        },
        "f5bigip:ltm/getMonitor:getMonitor": {
            "description": "Use this data source (`f5bigip.ltm.Monitor`) to get the ltm monitor details available on BIG-IP\n \n \n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst monitor_TC1 = pulumi.output(f5bigip.ltm.getMonitor({\n    name: \"test-monitor\",\n    partition: \"Common\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nmonitor__tc1 = f5bigip.ltm.get_monitor(name=\"test-monitor\",\n    partition=\"Common\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var monitor_TC1 = Output.Create(F5BigIP.Ltm.GetMonitor.InvokeAsync(new F5BigIP.Ltm.GetMonitorArgs\n        {\n            Name = \"test-monitor\",\n            Partition = \"Common\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.LookupMonitor(ctx, \u0026ltm.LookupMonitorArgs{\n\t\t\tName:      \"test-monitor\",\n\t\t\tPartition: \"Common\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getMonitor.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ltm monitor\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition of the ltm monitor\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getMonitor.\n",
                "properties": {
                    "adaptive": {
                        "type": "string",
                        "description": "Displays whether adaptive response time monitoring is enabled for this monitor.\n"
                    },
                    "adaptiveLimit": {
                        "type": "integer",
                        "description": "Displays whether adaptive response time monitoring is enabled for this monitor.\n"
                    },
                    "database": {
                        "type": "string"
                    },
                    "defaultsFrom": {
                        "type": "string"
                    },
                    "destination": {
                        "type": "string",
                        "description": "id will be full path name of ltm monitor.\n"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "interval": {
                        "type": "integer",
                        "description": "Specifies, in seconds, the frequency at which the system issues the monitor check when either the resource is down or the status of the resource is unknown.\n"
                    },
                    "ipDscp": {
                        "type": "integer",
                        "description": "Displays the differentiated services code point (DSCP). DSCP is a 6-bit value in the Differentiated Services (DS) field of the IP header.\n"
                    },
                    "manualResume": {
                        "type": "string",
                        "description": "Displays whether the system automatically changes the status of a resource to Enabled at the next successful monitor check.\n"
                    },
                    "mode": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "receiveDisable": {
                        "type": "string"
                    },
                    "reverse": {
                        "type": "string",
                        "description": "Instructs the system to mark the target resource down when the test is successful.\n"
                    },
                    "timeUntilUp": {
                        "type": "integer"
                    },
                    "timeout": {
                        "type": "integer"
                    },
                    "transparent": {
                        "type": "string",
                        "description": "Displays whether the monitor operates in transparent mode.\n"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "adaptive",
                    "adaptiveLimit",
                    "database",
                    "defaultsFrom",
                    "destination",
                    "filename",
                    "interval",
                    "ipDscp",
                    "manualResume",
                    "mode",
                    "name",
                    "partition",
                    "receiveDisable",
                    "reverse",
                    "timeUntilUp",
                    "timeout",
                    "transparent",
                    "username",
                    "id"
                ]
            }
        },
        "f5bigip:ltm/getNode:getNode": {
            "description": "Use this data source (`f5bigip.ltm.Node`) to get the ltm node details available on BIG-IP\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getNode.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address of the node.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User defined description of the node.\n"
                    },
                    "fqdn": {
                        "$ref": "#/types/f5bigip:ltm/getNodeFqdn:getNodeFqdn"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "Full path of the node (partition and name)\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the node.\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition of the node.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNode.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address of the node.\n"
                    },
                    "connectionLimit": {
                        "type": "integer",
                        "description": "Node connection limit.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "User defined description of the node.\n"
                    },
                    "dynamicRatio": {
                        "type": "integer",
                        "description": "The dynamic ratio number for the node.\n"
                    },
                    "fqdn": {
                        "$ref": "#/types/f5bigip:ltm/getNodeFqdn:getNodeFqdn"
                    },
                    "fullPath": {
                        "type": "string",
                        "description": "Full path of the node (partition and name)\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "monitor": {
                        "type": "string",
                        "description": "Specifies the health monitors the system currently uses to monitor this node.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    },
                    "rateLimit": {
                        "type": "string",
                        "description": "Node rate limit.\n"
                    },
                    "ratio": {
                        "type": "integer",
                        "description": "Node ratio weight.\n"
                    },
                    "session": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string",
                        "description": "The current state of the node.\n"
                    }
                },
                "type": "object",
                "required": [
                    "connectionLimit",
                    "dynamicRatio",
                    "fqdn",
                    "monitor",
                    "name",
                    "partition",
                    "rateLimit",
                    "ratio",
                    "session",
                    "state",
                    "id"
                ]
            }
        },
        "f5bigip:ltm/getPolicy:getPolicy": {
            "description": "Use this data source (`f5bigip.ltm.Policy`) to get the ltm policy details available on BIG-IP\n\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test = f5bigip.ltm.getPolicy({\n    name: \"/Common/test-policy\",\n});\nexport const bigipPolicy = test.then(test =\u003e test.rules);\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest = f5bigip.ltm.get_policy(name=\"/Common/test-policy\")\npulumi.export(\"bigipPolicy\", test.rules)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(F5BigIP.Ltm.GetPolicy.InvokeAsync(new F5BigIP.Ltm.GetPolicyArgs\n        {\n            Name = \"/Common/test-policy\",\n        }));\n        this.BigipPolicy = test.Apply(test =\u003e test.Rules);\n    }\n\n    [Output(\"bigipPolicy\")]\n    public Output\u003cstring\u003e BigipPolicy { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := ltm.LookupPolicy(ctx, \u0026ltm.LookupPolicyArgs{\n\t\t\tName: \"/Common/test-policy\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"bigipPolicy\", test.Rules)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPolicy.\n",
                "properties": {
                    "controls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the controls.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the policy which includes partion ( /partition/policy-name )\n"
                    },
                    "publishedCopy": {
                        "type": "string"
                    },
                    "requires": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the protocol.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/getPolicyRule:getPolicyRule"
                        },
                        "description": "Rules defined in the policy.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Specifies the match strategy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPolicy.\n",
                "properties": {
                    "controls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the controls.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the policy.\n"
                    },
                    "publishedCopy": {
                        "type": "string"
                    },
                    "requires": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the protocol.\n"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/f5bigip:ltm/getPolicyRule:getPolicyRule"
                        },
                        "description": "Rules defined in the policy.\n"
                    },
                    "strategy": {
                        "type": "string",
                        "description": "Specifies the match strategy.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "f5bigip:ltm/getPool:getPool": {
            "description": "Use this data source (`f5bigip.ltm.Pool`) to get the ltm monitor details available on BIG-IP\n \n \n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst pool_Example = pulumi.output(f5bigip.ltm.getPool({\n    name: \"example-pool\",\n    partition: \"Common\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\npool__example = f5bigip.ltm.get_pool(name=\"example-pool\",\n    partition=\"Common\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var pool_Example = Output.Create(F5BigIP.Ltm.GetPool.InvokeAsync(new F5BigIP.Ltm.GetPoolArgs\n        {\n            Name = \"example-pool\",\n            Partition = \"Common\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ltm.LookupPool(ctx, \u0026ltm.LookupPoolArgs{\n\t\t\tName:      \"example-pool\",\n\t\t\tPartition: \"Common\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPool.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ltm monitor\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition of the ltm monitor\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPool.\n",
                "properties": {
                    "fullPath": {
                        "type": "string",
                        "description": "Full path to the pool.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "partition": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "fullPath",
                    "name",
                    "partition",
                    "id"
                ]
            }
        },
        "f5bigip:ssl/getCertificate:getCertificate": {
            "description": "Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP\n \n \n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst test = pulumi.output(f5bigip.ssl.getCertificate({\n    name: \"terraform_ssl_certificate\",\n    partition: \"Common\",\n}));\n\nexport const bigipSslCertificateName = test.name;\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\ntest = f5bigip.ssl.get_certificate(name=\"terraform_ssl_certificate\",\n    partition=\"Common\")\npulumi.export(\"bigipSslCertificateName\", test.name)\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var test = Output.Create(F5BigIP.Ssl.GetCertificate.InvokeAsync(new F5BigIP.Ssl.GetCertificateArgs\n        {\n            Name = \"terraform_ssl_certificate\",\n            Partition = \"Common\",\n        }));\n        this.BigipSslCertificateName = test.Apply(test =\u003e test.Name);\n    }\n\n    [Output(\"bigipSslCertificateName\")]\n    public Output\u003cstring\u003e BigipSslCertificateName { get; set; }\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ssl\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\ttest, err := ssl.LookupCertificate(ctx, \u0026ssl.LookupCertificateArgs{\n\t\t\tName:      \"terraform_ssl_certificate\",\n\t\t\tPartition: \"Common\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tctx.Export(\"bigipSslCertificateName\", test.Name)\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getCertificate.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the ssl_certificate\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "partition of the ltm ssl_certificate\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "partition"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCertificate.\n",
                "properties": {
                    "certificate": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of ssl_certificate configured on bigip with full path\n"
                    },
                    "partition": {
                        "type": "string",
                        "description": "Bigip partition in which ssl-certificate is configured\n"
                    }
                },
                "type": "object",
                "required": [
                    "certificate",
                    "name",
                    "partition",
                    "id"
                ]
            }
        },
        "f5bigip:ssl/getVWanConfig:getVWanConfig": {
            "description": "Use this data source (`f5bigip.ssl.getVWanConfig`) to get the vWAN site config from Azure VWAN Site\n \n \n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as f5bigip from \"@pulumi/f5bigip\";\n\nconst vwanconfig = pulumi.output(f5bigip.ssl.getVWanConfig({\n    azureVwanName: \"azurevwan-bigip-vwan-9c8d\",\n    azureVwanResourcegroup: \"azurevwan-bigip-rg-9c8d\",\n    azureVwanVpnsite: \"azurevwan-bigip-vsite-9c8d\",\n}));\n```\n```python\nimport pulumi\nimport pulumi_f5bigip as f5bigip\n\nvwanconfig = f5bigip.ssl.get_v_wan_config(azure_vwan_name=\"azurevwan-bigip-vwan-9c8d\",\n    azure_vwan_resourcegroup=\"azurevwan-bigip-rg-9c8d\",\n    azure_vwan_vpnsite=\"azurevwan-bigip-vsite-9c8d\")\n```\n```csharp\nusing Pulumi;\nusing F5BigIP = Pulumi.F5BigIP;\n\nclass MyStack : Stack\n{\n    public MyStack()\n    {\n        var vwanconfig = Output.Create(F5BigIP.Ssl.GetVWanConfig.InvokeAsync(new F5BigIP.Ssl.GetVWanConfigArgs\n        {\n            AzureVwanName = \"azurevwan-bigip-vwan-9c8d\",\n            AzureVwanResourcegroup = \"azurevwan-bigip-rg-9c8d\",\n            AzureVwanVpnsite = \"azurevwan-bigip-vsite-9c8d\",\n        }));\n    }\n\n}\n```\n```go\npackage main\n\nimport (\n\t\"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ssl\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := ssl.GetVWanConfig(ctx, \u0026ssl.GetVWanConfigArgs{\n\t\t\tAzureVwanName:          \"azurevwan-bigip-vwan-9c8d\",\n\t\t\tAzureVwanResourcegroup: \"azurevwan-bigip-rg-9c8d\",\n\t\t\tAzureVwanVpnsite:       \"azurevwan-bigip-vsite-9c8d\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n{{% /example %}}\n{{% /examples %}}\n## Pre-required Environment Settings:\n\n* `AZURE_CLIENT_ID` - (Required) Set this environment variable with the Azure app client ID to use.\n\n* `AZURE_CLIENT_SECRET` - (Required) Set this environment variable with the Azure app secret to use.\n\n* `AZURE_SUBSCRIPTION_ID` - (Required) Set this environment variable with the Azure subscription ID to use.\n\n* `AZURE_TENANT_ID` - (Required) Set this environment variable with the Tenant ID to which to authenticate.\n\n* `STORAGE_ACCOUNT_NAME` - (Required) Set this environment variable with the storage account for download config.\n\n* `STORAGE_ACCOUNT_KEY` - (Required) Specifies the storage account key to authenticate,set this Environment variable with account key value.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVWanConfig.\n",
                "properties": {
                    "azureVwanName": {
                        "type": "string",
                        "description": "Name of the Azure vWAN Name\n"
                    },
                    "azureVwanResourcegroup": {
                        "type": "string",
                        "description": "Name of the Azure vWAN resource group\n"
                    },
                    "azureVwanVpnsite": {
                        "type": "string",
                        "description": "Name of the Azure vWAN VPN site from which configuration to be download\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureVwanName",
                    "azureVwanResourcegroup",
                    "azureVwanVpnsite"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVWanConfig.\n",
                "properties": {
                    "azureVwanName": {
                        "type": "string"
                    },
                    "azureVwanResourcegroup": {
                        "type": "string"
                    },
                    "azureVwanVpnsite": {
                        "type": "string"
                    },
                    "bigipGwIp": {
                        "type": "string",
                        "description": "(type `string`) provides IP address of BIGIP G/W for IPSec Endpoint.\n"
                    },
                    "hubAddressSpace": {
                        "type": "string",
                        "description": "(type `string`) Provides IP Address space used on vWAN Hub.\n"
                    },
                    "hubConnectedSubnets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(type `list`) Provides Subnets connected to vWAN Hub.\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "presharedKey": {
                        "type": "string",
                        "description": "(type `string`) provides pre-shared-key used for IPSec Tunnel creation.\n"
                    },
                    "vwanGwAddresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "(type `list`) Provides vWAN Gateway Address for IPSec End point\n"
                    }
                },
                "type": "object",
                "required": [
                    "azureVwanName",
                    "azureVwanResourcegroup",
                    "azureVwanVpnsite",
                    "bigipGwIp",
                    "hubAddressSpace",
                    "hubConnectedSubnets",
                    "presharedKey",
                    "vwanGwAddresses",
                    "id"
                ]
            }
        }
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": {
                "cm": "CM",
                "f5bigip": "F5BigIP",
                "index": "Index",
                "ltm": "Ltm",
                "net": "Net",
                "ssl": "Ssl",
                "sys": "Sys"
            },
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing F5 BigIP resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/F5Networks/terraform-provider-bigip)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-f5bigip` repo](https://github.com/pulumi/pulumi-f5bigip/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`F5Networks/terraform-provider-bigip` repo](https://github.com/F5Networks/terraform-provider-bigip/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/F5Networks/terraform-provider-bigip)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-f5bigip` repo](https://github.com/pulumi/pulumi-f5bigip/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`F5Networks/terraform-provider-bigip` repo](https://github.com/F5Networks/terraform-provider-bigip/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    }
}