// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ssl.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWafSignaturesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWafSignaturesPlainArgs Empty = new GetWafSignaturesPlainArgs();

    /**
     * The relative detection accuracy of the signature.
     * 
     */
    @Import(name="accuracy")
    private @Nullable String accuracy;

    /**
     * @return The relative detection accuracy of the signature.
     * 
     */
    public Optional<String> accuracy() {
        return Optional.ofNullable(this.accuracy);
    }

    /**
     * Description of the signature.
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Description of the signature.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enabled")
    private @Nullable Boolean enabled;

    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Name of the signature as configured on the system.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the signature as configured on the system.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="performStaging")
    private @Nullable Boolean performStaging;

    public Optional<Boolean> performStaging() {
        return Optional.ofNullable(this.performStaging);
    }

    /**
     * The relative risk level of the attack that matches this signature.
     * 
     */
    @Import(name="risk")
    private @Nullable String risk;

    /**
     * @return The relative risk level of the attack that matches this signature.
     * 
     */
    public Optional<String> risk() {
        return Optional.ofNullable(this.risk);
    }

    /**
     * ID of the signature in the BIG-IP WAF database.
     * 
     */
    @Import(name="signatureId", required=true)
    private Integer signatureId;

    /**
     * @return ID of the signature in the BIG-IP WAF database.
     * 
     */
    public Integer signatureId() {
        return this.signatureId;
    }

    /**
     * System generated ID of the signature.
     * 
     */
    @Import(name="systemSignatureId")
    private @Nullable String systemSignatureId;

    /**
     * @return System generated ID of the signature.
     * 
     */
    public Optional<String> systemSignatureId() {
        return Optional.ofNullable(this.systemSignatureId);
    }

    @Import(name="tag")
    private @Nullable String tag;

    public Optional<String> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Type of the signature.
     * 
     */
    @Import(name="type")
    private @Nullable String type;

    /**
     * @return Type of the signature.
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    private GetWafSignaturesPlainArgs() {}

    private GetWafSignaturesPlainArgs(GetWafSignaturesPlainArgs $) {
        this.accuracy = $.accuracy;
        this.description = $.description;
        this.enabled = $.enabled;
        this.name = $.name;
        this.performStaging = $.performStaging;
        this.risk = $.risk;
        this.signatureId = $.signatureId;
        this.systemSignatureId = $.systemSignatureId;
        this.tag = $.tag;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWafSignaturesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWafSignaturesPlainArgs $;

        public Builder() {
            $ = new GetWafSignaturesPlainArgs();
        }

        public Builder(GetWafSignaturesPlainArgs defaults) {
            $ = new GetWafSignaturesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accuracy The relative detection accuracy of the signature.
         * 
         * @return builder
         * 
         */
        public Builder accuracy(@Nullable String accuracy) {
            $.accuracy = accuracy;
            return this;
        }

        /**
         * @param description Description of the signature.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        public Builder enabled(@Nullable Boolean enabled) {
            $.enabled = enabled;
            return this;
        }

        /**
         * @param name Name of the signature as configured on the system.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder performStaging(@Nullable Boolean performStaging) {
            $.performStaging = performStaging;
            return this;
        }

        /**
         * @param risk The relative risk level of the attack that matches this signature.
         * 
         * @return builder
         * 
         */
        public Builder risk(@Nullable String risk) {
            $.risk = risk;
            return this;
        }

        /**
         * @param signatureId ID of the signature in the BIG-IP WAF database.
         * 
         * @return builder
         * 
         */
        public Builder signatureId(Integer signatureId) {
            $.signatureId = signatureId;
            return this;
        }

        /**
         * @param systemSignatureId System generated ID of the signature.
         * 
         * @return builder
         * 
         */
        public Builder systemSignatureId(@Nullable String systemSignatureId) {
            $.systemSignatureId = systemSignatureId;
            return this;
        }

        public Builder tag(@Nullable String tag) {
            $.tag = tag;
            return this;
        }

        /**
         * @param type Type of the signature.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public GetWafSignaturesPlainArgs build() {
            if ($.signatureId == null) {
                throw new MissingRequiredPropertyException("GetWafSignaturesPlainArgs", "signatureId");
            }
            return $;
        }
    }

}
