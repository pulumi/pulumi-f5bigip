// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SnatPoolState extends com.pulumi.resources.ResourceArgs {

    public static final SnatPoolState Empty = new SnatPoolState();

    /**
     * Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)
     * 
     */
    @Import(name="members")
    private @Nullable Output<List<String>> members;

    /**
     * @return Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)
     * 
     */
    public Optional<Output<List<String>>> members() {
        return Optional.ofNullable(this.members);
    }

    /**
     * Name of the snatpool
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the snatpool
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private SnatPoolState() {}

    private SnatPoolState(SnatPoolState $) {
        this.members = $.members;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SnatPoolState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SnatPoolState $;

        public Builder() {
            $ = new SnatPoolState();
        }

        public Builder(SnatPoolState defaults) {
            $ = new SnatPoolState(Objects.requireNonNull(defaults));
        }

        /**
         * @param members Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)
         * 
         * @return builder
         * 
         */
        public Builder members(@Nullable Output<List<String>> members) {
            $.members = members;
            return this;
        }

        /**
         * @param members Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)
         * 
         * @return builder
         * 
         */
        public Builder members(List<String> members) {
            return members(Output.of(members));
        }

        /**
         * @param members Specifies a translation address to add to or delete from a SNAT pool (at least one address is required)
         * 
         * @return builder
         * 
         */
        public Builder members(String... members) {
            return members(List.of(members));
        }

        /**
         * @param name Name of the snatpool
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the snatpool
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public SnatPoolState build() {
            return $;
        }
    }

}
