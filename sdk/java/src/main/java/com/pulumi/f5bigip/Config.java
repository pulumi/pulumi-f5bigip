// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip;

import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;

public final class Config {

    private static final com.pulumi.Config config = com.pulumi.Config.of("f5bigip");
/**
 * Domain name/IP of the BigIP
 * 
 */
    public Optional<String> address() {
        return Codegen.stringProp("address").config(config).get();
    }
/**
 * Login reference for token authentication (see BIG-IP REST docs for details)
 * 
 */
    public Optional<String> loginRef() {
        return Codegen.stringProp("loginRef").config(config).get();
    }
/**
 * The user&#39;s password. Leave empty if using token_value
 * 
 */
    public Optional<String> password() {
        return Codegen.stringProp("password").config(config).get();
    }
/**
 * Management Port to connect to Bigip
 * 
 */
    public Optional<String> port() {
        return Codegen.stringProp("port").config(config).get();
    }
/**
 * If this flag set to true,sending telemetry data to TEEM will be disabled
 * 
 */
    public Optional<Boolean> teemDisable() {
        return Codegen.booleanProp("teemDisable").config(config).get();
    }
/**
 * Enable to use an external authentication source (LDAP, TACACS, etc)
 * 
 */
    public Optional<Boolean> tokenAuth() {
        return Codegen.booleanProp("tokenAuth").config(config).get();
    }
/**
 * A token generated outside the provider, in place of password
 * 
 */
    public Optional<String> tokenValue() {
        return Codegen.stringProp("tokenValue").config(config).get();
    }
/**
 * Valid Trusted Certificate path
 * 
 */
    public Optional<String> trustedCertPath() {
        return Codegen.stringProp("trustedCertPath").config(config).get();
    }
/**
 * Username with API access to the BigIP
 * 
 */
    public Optional<String> username() {
        return Codegen.stringProp("username").config(config).get();
    }
/**
 * If set to true, Disables TLS certificate check on BIG-IP. Default : True
 * 
 */
    public Optional<Boolean> validateCertsDisable() {
        return Codegen.booleanProp("validateCertsDisable").config(config).get();
    }
}
