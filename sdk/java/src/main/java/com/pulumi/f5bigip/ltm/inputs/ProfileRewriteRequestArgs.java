// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileRewriteRequestArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileRewriteRequestArgs Empty = new ProfileRewriteRequestArgs();

    /**
     * Enable to add the X-Forwarded For (XFF) header, to specify the originating IP address of the client. Valid choices are: `enabled, disabled`
     * 
     */
    @Import(name="insertXfwdFor")
    private @Nullable Output<String> insertXfwdFor;

    /**
     * @return Enable to add the X-Forwarded For (XFF) header, to specify the originating IP address of the client. Valid choices are: `enabled, disabled`
     * 
     */
    public Optional<Output<String>> insertXfwdFor() {
        return Optional.ofNullable(this.insertXfwdFor);
    }

    /**
     * Enable to add the X-Forwarded Host header, to specify the originating host of the client. Valid choices are: `enabled, disabled`
     * 
     */
    @Import(name="insertXfwdHost")
    private @Nullable Output<String> insertXfwdHost;

    /**
     * @return Enable to add the X-Forwarded Host header, to specify the originating host of the client. Valid choices are: `enabled, disabled`
     * 
     */
    public Optional<Output<String>> insertXfwdHost() {
        return Optional.ofNullable(this.insertXfwdHost);
    }

    /**
     * Enable to add the X-Forwarded Proto header, to specify the originating protocol of the client. Valid choices are: `enabled, disabled`
     * 
     */
    @Import(name="insertXfwdProtocol")
    private @Nullable Output<String> insertXfwdProtocol;

    /**
     * @return Enable to add the X-Forwarded Proto header, to specify the originating protocol of the client. Valid choices are: `enabled, disabled`
     * 
     */
    public Optional<Output<String>> insertXfwdProtocol() {
        return Optional.ofNullable(this.insertXfwdProtocol);
    }

    /**
     * Enable to rewrite headers in Request settings. Valid choices are: `enabled, disabled`
     * 
     */
    @Import(name="rewriteHeaders")
    private @Nullable Output<String> rewriteHeaders;

    /**
     * @return Enable to rewrite headers in Request settings. Valid choices are: `enabled, disabled`
     * 
     */
    public Optional<Output<String>> rewriteHeaders() {
        return Optional.ofNullable(this.rewriteHeaders);
    }

    private ProfileRewriteRequestArgs() {}

    private ProfileRewriteRequestArgs(ProfileRewriteRequestArgs $) {
        this.insertXfwdFor = $.insertXfwdFor;
        this.insertXfwdHost = $.insertXfwdHost;
        this.insertXfwdProtocol = $.insertXfwdProtocol;
        this.rewriteHeaders = $.rewriteHeaders;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileRewriteRequestArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileRewriteRequestArgs $;

        public Builder() {
            $ = new ProfileRewriteRequestArgs();
        }

        public Builder(ProfileRewriteRequestArgs defaults) {
            $ = new ProfileRewriteRequestArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param insertXfwdFor Enable to add the X-Forwarded For (XFF) header, to specify the originating IP address of the client. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder insertXfwdFor(@Nullable Output<String> insertXfwdFor) {
            $.insertXfwdFor = insertXfwdFor;
            return this;
        }

        /**
         * @param insertXfwdFor Enable to add the X-Forwarded For (XFF) header, to specify the originating IP address of the client. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder insertXfwdFor(String insertXfwdFor) {
            return insertXfwdFor(Output.of(insertXfwdFor));
        }

        /**
         * @param insertXfwdHost Enable to add the X-Forwarded Host header, to specify the originating host of the client. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder insertXfwdHost(@Nullable Output<String> insertXfwdHost) {
            $.insertXfwdHost = insertXfwdHost;
            return this;
        }

        /**
         * @param insertXfwdHost Enable to add the X-Forwarded Host header, to specify the originating host of the client. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder insertXfwdHost(String insertXfwdHost) {
            return insertXfwdHost(Output.of(insertXfwdHost));
        }

        /**
         * @param insertXfwdProtocol Enable to add the X-Forwarded Proto header, to specify the originating protocol of the client. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder insertXfwdProtocol(@Nullable Output<String> insertXfwdProtocol) {
            $.insertXfwdProtocol = insertXfwdProtocol;
            return this;
        }

        /**
         * @param insertXfwdProtocol Enable to add the X-Forwarded Proto header, to specify the originating protocol of the client. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder insertXfwdProtocol(String insertXfwdProtocol) {
            return insertXfwdProtocol(Output.of(insertXfwdProtocol));
        }

        /**
         * @param rewriteHeaders Enable to rewrite headers in Request settings. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder rewriteHeaders(@Nullable Output<String> rewriteHeaders) {
            $.rewriteHeaders = rewriteHeaders;
            return this;
        }

        /**
         * @param rewriteHeaders Enable to rewrite headers in Request settings. Valid choices are: `enabled, disabled`
         * 
         * @return builder
         * 
         */
        public Builder rewriteHeaders(String rewriteHeaders) {
            return rewriteHeaders(Output.of(rewriteHeaders));
        }

        public ProfileRewriteRequestArgs build() {
            return $;
        }
    }

}
