// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.ltm.ProfileRewriteUriRulesArgs;
import com.pulumi.f5bigip.ltm.inputs.ProfileRewriteUriRulesState;
import com.pulumi.f5bigip.ltm.outputs.ProfileRewriteUriRulesClient;
import com.pulumi.f5bigip.ltm.outputs.ProfileRewriteUriRulesServer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `f5bigip.ltm.ProfileRewriteUriRules` Configures uri rewrite rules attached to the ltm rewrite profile
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.f5bigip.ltm.ProfileRewrite;
 * import com.pulumi.f5bigip.ltm.ProfileRewriteArgs;
 * import com.pulumi.f5bigip.ltm.ProfileRewriteUriRules;
 * import com.pulumi.f5bigip.ltm.ProfileRewriteUriRulesArgs;
 * import com.pulumi.f5bigip.ltm.inputs.ProfileRewriteUriRulesClientArgs;
 * import com.pulumi.f5bigip.ltm.inputs.ProfileRewriteUriRulesServerArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var tftest = new ProfileRewrite("tftest", ProfileRewriteArgs.builder()
 *             .name("/Common/tf_profile")
 *             .defaultsFrom("/Common/rewrite")
 *             .rewriteMode("uri-translation")
 *             .build());
 * 
 *         var tftestrule1 = new ProfileRewriteUriRules("tftestrule1", ProfileRewriteUriRulesArgs.builder()
 *             .profileName(tftest.name())
 *             .ruleName("tf_rule")
 *             .ruleType("request")
 *             .clients(ProfileRewriteUriRulesClientArgs.builder()
 *                 .host("www.foo.com")
 *                 .scheme("https")
 *                 .build())
 *             .servers(ProfileRewriteUriRulesServerArgs.builder()
 *                 .host("www.bar.com")
 *                 .path("/this/")
 *                 .scheme("https")
 *                 .port("8888")
 *                 .build())
 *             .build());
 * 
 *         var tftestrule2 = new ProfileRewriteUriRules("tftestrule2", ProfileRewriteUriRulesArgs.builder()
 *             .profileName(tftest.name())
 *             .ruleName("tf_rule2")
 *             .clients(ProfileRewriteUriRulesClientArgs.builder()
 *                 .host("www.baz.com")
 *                 .path("/that/")
 *                 .scheme("ftp")
 *                 .port("8888")
 *                 .build())
 *             .servers(ProfileRewriteUriRulesServerArgs.builder()
 *                 .host("www.buz.com")
 *                 .path("/those/")
 *                 .scheme("ftps")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="f5bigip:ltm/profileRewriteUriRules:ProfileRewriteUriRules")
public class ProfileRewriteUriRules extends com.pulumi.resources.CustomResource {
    /**
     * Block type. Each request is block type with following arguments.
     * 
     */
    @Export(name="clients", refs={List.class,ProfileRewriteUriRulesClient.class}, tree="[0,1]")
    private Output<List<ProfileRewriteUriRulesClient>> clients;

    /**
     * @return Block type. Each request is block type with following arguments.
     * 
     */
    public Output<List<ProfileRewriteUriRulesClient>> clients() {
        return this.clients;
    }
    /**
     * Name of the rewrite profile. ( policy name should be in full path which is combination of partition and policy name )
     * 
     */
    @Export(name="profileName", refs={String.class}, tree="[0]")
    private Output<String> profileName;

    /**
     * @return Name of the rewrite profile. ( policy name should be in full path which is combination of partition and policy name )
     * 
     */
    public Output<String> profileName() {
        return this.profileName;
    }
    /**
     * Specifies the name of the uri rule.
     * 
     */
    @Export(name="ruleName", refs={String.class}, tree="[0]")
    private Output<String> ruleName;

    /**
     * @return Specifies the name of the uri rule.
     * 
     */
    public Output<String> ruleName() {
        return this.ruleName;
    }
    /**
     * Specifies the type of the uri rule. Valid choices are: `request, response, both`. Default value is: `both`
     * 
     */
    @Export(name="ruleType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ruleType;

    /**
     * @return Specifies the type of the uri rule. Valid choices are: `request, response, both`. Default value is: `both`
     * 
     */
    public Output<Optional<String>> ruleType() {
        return Codegen.optional(this.ruleType);
    }
    /**
     * Block type. Each request is block type with following arguments.
     * 
     */
    @Export(name="servers", refs={List.class,ProfileRewriteUriRulesServer.class}, tree="[0,1]")
    private Output<List<ProfileRewriteUriRulesServer>> servers;

    /**
     * @return Block type. Each request is block type with following arguments.
     * 
     */
    public Output<List<ProfileRewriteUriRulesServer>> servers() {
        return this.servers;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProfileRewriteUriRules(java.lang.String name) {
        this(name, ProfileRewriteUriRulesArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProfileRewriteUriRules(java.lang.String name, ProfileRewriteUriRulesArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProfileRewriteUriRules(java.lang.String name, ProfileRewriteUriRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:ltm/profileRewriteUriRules:ProfileRewriteUriRules", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ProfileRewriteUriRules(java.lang.String name, Output<java.lang.String> id, @Nullable ProfileRewriteUriRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:ltm/profileRewriteUriRules:ProfileRewriteUriRules", name, state, makeResourceOptions(options, id), false);
    }

    private static ProfileRewriteUriRulesArgs makeArgs(ProfileRewriteUriRulesArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ProfileRewriteUriRulesArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProfileRewriteUriRules get(java.lang.String name, Output<java.lang.String> id, @Nullable ProfileRewriteUriRulesState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProfileRewriteUriRules(name, id, state, options);
    }
}
