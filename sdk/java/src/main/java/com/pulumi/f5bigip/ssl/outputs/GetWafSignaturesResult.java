// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ssl.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetWafSignaturesResult {
    /**
     * @return The relative detection accuracy of the signature.
     * 
     */
    private String accuracy;
    /**
     * @return Description of the signature.
     * 
     */
    private @Nullable String description;
    private @Nullable Boolean enabled;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String json;
    /**
     * @return Name of the signature as configured on the system.
     * 
     */
    private String name;
    private @Nullable Boolean performStaging;
    /**
     * @return The relative risk level of the attack that matches this signature.
     * 
     */
    private String risk;
    /**
     * @return ID of the signature in the database.
     * 
     */
    private Integer signatureId;
    /**
     * @return System generated ID of the signature.
     * 
     */
    private String systemSignatureId;
    private String tag;
    /**
     * @return Type of the signature.
     * 
     */
    private String type;

    private GetWafSignaturesResult() {}
    /**
     * @return The relative detection accuracy of the signature.
     * 
     */
    public String accuracy() {
        return this.accuracy;
    }
    /**
     * @return Description of the signature.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String json() {
        return this.json;
    }
    /**
     * @return Name of the signature as configured on the system.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<Boolean> performStaging() {
        return Optional.ofNullable(this.performStaging);
    }
    /**
     * @return The relative risk level of the attack that matches this signature.
     * 
     */
    public String risk() {
        return this.risk;
    }
    /**
     * @return ID of the signature in the database.
     * 
     */
    public Integer signatureId() {
        return this.signatureId;
    }
    /**
     * @return System generated ID of the signature.
     * 
     */
    public String systemSignatureId() {
        return this.systemSignatureId;
    }
    public String tag() {
        return this.tag;
    }
    /**
     * @return Type of the signature.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetWafSignaturesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accuracy;
        private @Nullable String description;
        private @Nullable Boolean enabled;
        private String id;
        private String json;
        private String name;
        private @Nullable Boolean performStaging;
        private String risk;
        private Integer signatureId;
        private String systemSignatureId;
        private String tag;
        private String type;
        public Builder() {}
        public Builder(GetWafSignaturesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accuracy = defaults.accuracy;
    	      this.description = defaults.description;
    	      this.enabled = defaults.enabled;
    	      this.id = defaults.id;
    	      this.json = defaults.json;
    	      this.name = defaults.name;
    	      this.performStaging = defaults.performStaging;
    	      this.risk = defaults.risk;
    	      this.signatureId = defaults.signatureId;
    	      this.systemSignatureId = defaults.systemSignatureId;
    	      this.tag = defaults.tag;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder accuracy(String accuracy) {
            this.accuracy = Objects.requireNonNull(accuracy);
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder json(String json) {
            this.json = Objects.requireNonNull(json);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder performStaging(@Nullable Boolean performStaging) {
            this.performStaging = performStaging;
            return this;
        }
        @CustomType.Setter
        public Builder risk(String risk) {
            this.risk = Objects.requireNonNull(risk);
            return this;
        }
        @CustomType.Setter
        public Builder signatureId(Integer signatureId) {
            this.signatureId = Objects.requireNonNull(signatureId);
            return this;
        }
        @CustomType.Setter
        public Builder systemSignatureId(String systemSignatureId) {
            this.systemSignatureId = Objects.requireNonNull(systemSignatureId);
            return this;
        }
        @CustomType.Setter
        public Builder tag(String tag) {
            this.tag = Objects.requireNonNull(tag);
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            this.type = Objects.requireNonNull(type);
            return this;
        }
        public GetWafSignaturesResult build() {
            final var o = new GetWafSignaturesResult();
            o.accuracy = accuracy;
            o.description = description;
            o.enabled = enabled;
            o.id = id;
            o.json = json;
            o.name = name;
            o.performStaging = performStaging;
            o.risk = risk;
            o.signatureId = signatureId;
            o.systemSignatureId = systemSignatureId;
            o.tag = tag;
            o.type = type;
            return o;
        }
    }
}
