// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.ltm.ProfileHttpCompressArgs;
import com.pulumi.f5bigip.ltm.inputs.ProfileHttpCompressState;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * `f5bigip.ltm.ProfileHttpCompress`  Virtual server HTTP compression profile configuration
 * 
 * Resources should be named with their &#34;full path&#34;. The full path is the combination of the partition + name (example: /Common/my-pool ) or  partition + directory + name of the resource  (example: /Common/test/my-pool )
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.f5bigip.ltm.ProfileHttpCompress;
 * import com.pulumi.f5bigip.ltm.ProfileHttpCompressArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var sjhttpcompression = new ProfileHttpCompress(&#34;sjhttpcompression&#34;, ProfileHttpCompressArgs.builder()        
 *             .contentTypeExcludes(&#34;nicecontentexclude.com&#34;)
 *             .contentTypeIncludes(&#34;nicecontent.com&#34;)
 *             .defaultsFrom(&#34;/Common/httpcompression&#34;)
 *             .name(&#34;/Common/sjhttpcompression2&#34;)
 *             .uriExcludes(            
 *                 &#34;www.abc.f5.com&#34;,
 *                 &#34;www.abc2.f5.com&#34;)
 *             .uriIncludes(&#34;www.xyzbc.cisco.com&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="f5bigip:ltm/profileHttpCompress:ProfileHttpCompress")
public class ProfileHttpCompress extends com.pulumi.resources.CustomResource {
    /**
     * Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    @Export(name="contentTypeExcludes", type=List.class, parameters={String.class})
    private Output<List<String>> contentTypeExcludes;

    /**
     * @return Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    public Output<List<String>> contentTypeExcludes() {
        return this.contentTypeExcludes;
    }
    /**
     * Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    @Export(name="contentTypeIncludes", type=List.class, parameters={String.class})
    private Output<List<String>> contentTypeIncludes;

    /**
     * @return Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    public Output<List<String>> contentTypeIncludes() {
        return this.contentTypeIncludes;
    }
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     * 
     */
    @Export(name="defaultsFrom", type=String.class, parameters={})
    private Output<String> defaultsFrom;

    /**
     * @return Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     * 
     */
    public Output<String> defaultsFrom() {
        return this.defaultsFrom;
    }
    /**
     * Name of the profile_httpcompress
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the profile_httpcompress
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     * 
     */
    @Export(name="uriExcludes", type=List.class, parameters={String.class})
    private Output<List<String>> uriExcludes;

    /**
     * @return Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     * 
     */
    public Output<List<String>> uriExcludes() {
        return this.uriExcludes;
    }
    /**
     * Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     * 
     */
    @Export(name="uriIncludes", type=List.class, parameters={String.class})
    private Output<List<String>> uriIncludes;

    /**
     * @return Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     * 
     */
    public Output<List<String>> uriIncludes() {
        return this.uriIncludes;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ProfileHttpCompress(String name) {
        this(name, ProfileHttpCompressArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ProfileHttpCompress(String name, ProfileHttpCompressArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ProfileHttpCompress(String name, ProfileHttpCompressArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:ltm/profileHttpCompress:ProfileHttpCompress", name, args == null ? ProfileHttpCompressArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private ProfileHttpCompress(String name, Output<String> id, @Nullable ProfileHttpCompressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:ltm/profileHttpCompress:ProfileHttpCompress", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ProfileHttpCompress get(String name, Output<String> id, @Nullable ProfileHttpCompressState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ProfileHttpCompress(name, id, state, options);
    }
}
