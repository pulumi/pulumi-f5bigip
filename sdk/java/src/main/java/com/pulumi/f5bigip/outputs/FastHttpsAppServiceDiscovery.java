// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class FastHttpsAppServiceDiscovery {
    /**
     * @return Specifies whether to look for public or private IP addresses. Default :`private`
     * 
     */
    private @Nullable String sdAddressRealm;
    /**
     * @return Information for discovering AWS nodes that are not in the same region as your BIG-IP.
     * 
     */
    private @Nullable String sdAwsAccessKey;
    /**
     * @return Empty string (default) means region in which ADC is running.
     * 
     */
    private @Nullable String sdAwsRegion;
    /**
     * @return Will be stored in the declaration as an encrypted string.
     * 
     */
    private @Nullable String sdAwsSecretAccessKey;
    /**
     * @return The tag key associated with the node to add to this pool.
     * 
     */
    private @Nullable String sdAwsTagKey;
    /**
     * @return The tag value associated with the node to add to this pool.
     * 
     */
    private @Nullable String sdAwsTagVal;
    /**
     * @return Azure Active Directory ID (AKA tenant ID).
     * 
     */
    private @Nullable String sdAzureDirectoryId;
    /**
     * @return Azure Resource Group name.
     * 
     */
    private @Nullable String sdAzureResourceGroup;
    /**
     * @return ID of resource to find nodes by.
     * 
     */
    private @Nullable String sdAzureResourceId;
    /**
     * @return Azure subscription ID.
     * 
     */
    private @Nullable String sdAzureSubscriptionId;
    /**
     * @return The tag key associated with the node to add to this pool.
     * 
     */
    private @Nullable String sdAzureTagKey;
    /**
     * @return The tag value associated with the node to add to this pool.
     * 
     */
    private @Nullable String sdAzureTagVal;
    /**
     * @return Empty string (default) means region in which ADC is running.
     * 
     */
    private @Nullable String sdGceRegion;
    /**
     * @return The tag key associated with the node to add to this pool
     * 
     */
    private @Nullable String sdGceTagKey;
    /**
     * @return The tag value associated with the node to add to this pool.
     * 
     */
    private @Nullable String sdGceTagVal;
    /**
     * @return port number of serviceport to be used for FAST-Generated Pool.
     * 
     */
    private Integer sdPort;
    /**
     * @return service discovery account type, options [`aws`,`azure`,`gce`]
     * 
     */
    private String sdType;
    /**
     * @return Action to take when node cannot be detected. Default `remove`.
     * 
     */
    private @Nullable String sdUndetectableAction;

    private FastHttpsAppServiceDiscovery() {}
    /**
     * @return Specifies whether to look for public or private IP addresses. Default :`private`
     * 
     */
    public Optional<String> sdAddressRealm() {
        return Optional.ofNullable(this.sdAddressRealm);
    }
    /**
     * @return Information for discovering AWS nodes that are not in the same region as your BIG-IP.
     * 
     */
    public Optional<String> sdAwsAccessKey() {
        return Optional.ofNullable(this.sdAwsAccessKey);
    }
    /**
     * @return Empty string (default) means region in which ADC is running.
     * 
     */
    public Optional<String> sdAwsRegion() {
        return Optional.ofNullable(this.sdAwsRegion);
    }
    /**
     * @return Will be stored in the declaration as an encrypted string.
     * 
     */
    public Optional<String> sdAwsSecretAccessKey() {
        return Optional.ofNullable(this.sdAwsSecretAccessKey);
    }
    /**
     * @return The tag key associated with the node to add to this pool.
     * 
     */
    public Optional<String> sdAwsTagKey() {
        return Optional.ofNullable(this.sdAwsTagKey);
    }
    /**
     * @return The tag value associated with the node to add to this pool.
     * 
     */
    public Optional<String> sdAwsTagVal() {
        return Optional.ofNullable(this.sdAwsTagVal);
    }
    /**
     * @return Azure Active Directory ID (AKA tenant ID).
     * 
     */
    public Optional<String> sdAzureDirectoryId() {
        return Optional.ofNullable(this.sdAzureDirectoryId);
    }
    /**
     * @return Azure Resource Group name.
     * 
     */
    public Optional<String> sdAzureResourceGroup() {
        return Optional.ofNullable(this.sdAzureResourceGroup);
    }
    /**
     * @return ID of resource to find nodes by.
     * 
     */
    public Optional<String> sdAzureResourceId() {
        return Optional.ofNullable(this.sdAzureResourceId);
    }
    /**
     * @return Azure subscription ID.
     * 
     */
    public Optional<String> sdAzureSubscriptionId() {
        return Optional.ofNullable(this.sdAzureSubscriptionId);
    }
    /**
     * @return The tag key associated with the node to add to this pool.
     * 
     */
    public Optional<String> sdAzureTagKey() {
        return Optional.ofNullable(this.sdAzureTagKey);
    }
    /**
     * @return The tag value associated with the node to add to this pool.
     * 
     */
    public Optional<String> sdAzureTagVal() {
        return Optional.ofNullable(this.sdAzureTagVal);
    }
    /**
     * @return Empty string (default) means region in which ADC is running.
     * 
     */
    public Optional<String> sdGceRegion() {
        return Optional.ofNullable(this.sdGceRegion);
    }
    /**
     * @return The tag key associated with the node to add to this pool
     * 
     */
    public Optional<String> sdGceTagKey() {
        return Optional.ofNullable(this.sdGceTagKey);
    }
    /**
     * @return The tag value associated with the node to add to this pool.
     * 
     */
    public Optional<String> sdGceTagVal() {
        return Optional.ofNullable(this.sdGceTagVal);
    }
    /**
     * @return port number of serviceport to be used for FAST-Generated Pool.
     * 
     */
    public Integer sdPort() {
        return this.sdPort;
    }
    /**
     * @return service discovery account type, options [`aws`,`azure`,`gce`]
     * 
     */
    public String sdType() {
        return this.sdType;
    }
    /**
     * @return Action to take when node cannot be detected. Default `remove`.
     * 
     */
    public Optional<String> sdUndetectableAction() {
        return Optional.ofNullable(this.sdUndetectableAction);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(FastHttpsAppServiceDiscovery defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String sdAddressRealm;
        private @Nullable String sdAwsAccessKey;
        private @Nullable String sdAwsRegion;
        private @Nullable String sdAwsSecretAccessKey;
        private @Nullable String sdAwsTagKey;
        private @Nullable String sdAwsTagVal;
        private @Nullable String sdAzureDirectoryId;
        private @Nullable String sdAzureResourceGroup;
        private @Nullable String sdAzureResourceId;
        private @Nullable String sdAzureSubscriptionId;
        private @Nullable String sdAzureTagKey;
        private @Nullable String sdAzureTagVal;
        private @Nullable String sdGceRegion;
        private @Nullable String sdGceTagKey;
        private @Nullable String sdGceTagVal;
        private Integer sdPort;
        private String sdType;
        private @Nullable String sdUndetectableAction;
        public Builder() {}
        public Builder(FastHttpsAppServiceDiscovery defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.sdAddressRealm = defaults.sdAddressRealm;
    	      this.sdAwsAccessKey = defaults.sdAwsAccessKey;
    	      this.sdAwsRegion = defaults.sdAwsRegion;
    	      this.sdAwsSecretAccessKey = defaults.sdAwsSecretAccessKey;
    	      this.sdAwsTagKey = defaults.sdAwsTagKey;
    	      this.sdAwsTagVal = defaults.sdAwsTagVal;
    	      this.sdAzureDirectoryId = defaults.sdAzureDirectoryId;
    	      this.sdAzureResourceGroup = defaults.sdAzureResourceGroup;
    	      this.sdAzureResourceId = defaults.sdAzureResourceId;
    	      this.sdAzureSubscriptionId = defaults.sdAzureSubscriptionId;
    	      this.sdAzureTagKey = defaults.sdAzureTagKey;
    	      this.sdAzureTagVal = defaults.sdAzureTagVal;
    	      this.sdGceRegion = defaults.sdGceRegion;
    	      this.sdGceTagKey = defaults.sdGceTagKey;
    	      this.sdGceTagVal = defaults.sdGceTagVal;
    	      this.sdPort = defaults.sdPort;
    	      this.sdType = defaults.sdType;
    	      this.sdUndetectableAction = defaults.sdUndetectableAction;
        }

        @CustomType.Setter
        public Builder sdAddressRealm(@Nullable String sdAddressRealm) {
            this.sdAddressRealm = sdAddressRealm;
            return this;
        }
        @CustomType.Setter
        public Builder sdAwsAccessKey(@Nullable String sdAwsAccessKey) {
            this.sdAwsAccessKey = sdAwsAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder sdAwsRegion(@Nullable String sdAwsRegion) {
            this.sdAwsRegion = sdAwsRegion;
            return this;
        }
        @CustomType.Setter
        public Builder sdAwsSecretAccessKey(@Nullable String sdAwsSecretAccessKey) {
            this.sdAwsSecretAccessKey = sdAwsSecretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder sdAwsTagKey(@Nullable String sdAwsTagKey) {
            this.sdAwsTagKey = sdAwsTagKey;
            return this;
        }
        @CustomType.Setter
        public Builder sdAwsTagVal(@Nullable String sdAwsTagVal) {
            this.sdAwsTagVal = sdAwsTagVal;
            return this;
        }
        @CustomType.Setter
        public Builder sdAzureDirectoryId(@Nullable String sdAzureDirectoryId) {
            this.sdAzureDirectoryId = sdAzureDirectoryId;
            return this;
        }
        @CustomType.Setter
        public Builder sdAzureResourceGroup(@Nullable String sdAzureResourceGroup) {
            this.sdAzureResourceGroup = sdAzureResourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder sdAzureResourceId(@Nullable String sdAzureResourceId) {
            this.sdAzureResourceId = sdAzureResourceId;
            return this;
        }
        @CustomType.Setter
        public Builder sdAzureSubscriptionId(@Nullable String sdAzureSubscriptionId) {
            this.sdAzureSubscriptionId = sdAzureSubscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder sdAzureTagKey(@Nullable String sdAzureTagKey) {
            this.sdAzureTagKey = sdAzureTagKey;
            return this;
        }
        @CustomType.Setter
        public Builder sdAzureTagVal(@Nullable String sdAzureTagVal) {
            this.sdAzureTagVal = sdAzureTagVal;
            return this;
        }
        @CustomType.Setter
        public Builder sdGceRegion(@Nullable String sdGceRegion) {
            this.sdGceRegion = sdGceRegion;
            return this;
        }
        @CustomType.Setter
        public Builder sdGceTagKey(@Nullable String sdGceTagKey) {
            this.sdGceTagKey = sdGceTagKey;
            return this;
        }
        @CustomType.Setter
        public Builder sdGceTagVal(@Nullable String sdGceTagVal) {
            this.sdGceTagVal = sdGceTagVal;
            return this;
        }
        @CustomType.Setter
        public Builder sdPort(Integer sdPort) {
            this.sdPort = Objects.requireNonNull(sdPort);
            return this;
        }
        @CustomType.Setter
        public Builder sdType(String sdType) {
            this.sdType = Objects.requireNonNull(sdType);
            return this;
        }
        @CustomType.Setter
        public Builder sdUndetectableAction(@Nullable String sdUndetectableAction) {
            this.sdUndetectableAction = sdUndetectableAction;
            return this;
        }
        public FastHttpsAppServiceDiscovery build() {
            final var o = new FastHttpsAppServiceDiscovery();
            o.sdAddressRealm = sdAddressRealm;
            o.sdAwsAccessKey = sdAwsAccessKey;
            o.sdAwsRegion = sdAwsRegion;
            o.sdAwsSecretAccessKey = sdAwsSecretAccessKey;
            o.sdAwsTagKey = sdAwsTagKey;
            o.sdAwsTagVal = sdAwsTagVal;
            o.sdAzureDirectoryId = sdAzureDirectoryId;
            o.sdAzureResourceGroup = sdAzureResourceGroup;
            o.sdAzureResourceId = sdAzureResourceId;
            o.sdAzureSubscriptionId = sdAzureSubscriptionId;
            o.sdAzureTagKey = sdAzureTagKey;
            o.sdAzureTagVal = sdAzureTagVal;
            o.sdGceRegion = sdGceRegion;
            o.sdGceTagKey = sdGceTagKey;
            o.sdGceTagVal = sdGceTagVal;
            o.sdPort = sdPort;
            o.sdType = sdType;
            o.sdUndetectableAction = sdUndetectableAction;
            return o;
        }
    }
}
