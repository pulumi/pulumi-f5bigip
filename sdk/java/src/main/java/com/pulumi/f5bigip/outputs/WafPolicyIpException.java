// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class WafPolicyIpException {
    /**
     * @return Specifies how the system responds to blocking requests sent from this IP address. Possible options [`always`, `never`, `policy-default`].
     * 
     */
    private @Nullable String blockRequests;
    /**
     * @return Specifies the description of the policy.
     * 
     */
    private @Nullable String description;
    /**
     * @return Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.
     * 
     */
    private @Nullable Boolean ignoreAnomalies;
    /**
     * @return Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).
     * 
     */
    private @Nullable Boolean ignoreIpreputation;
    /**
     * @return Specifies the IP address that you want the system to trust.
     * 
     */
    private String ipAddress;
    /**
     * @return Specifies the netmask of the exceptional IP address. This is an optional field.
     * 
     */
    private String ipMask;
    /**
     * @return Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.
     * 
     */
    private @Nullable Boolean trustedbyPolicybuilder;

    private WafPolicyIpException() {}
    /**
     * @return Specifies how the system responds to blocking requests sent from this IP address. Possible options [`always`, `never`, `policy-default`].
     * 
     */
    public Optional<String> blockRequests() {
        return Optional.ofNullable(this.blockRequests);
    }
    /**
     * @return Specifies the description of the policy.
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    /**
     * @return Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.
     * 
     */
    public Optional<Boolean> ignoreAnomalies() {
        return Optional.ofNullable(this.ignoreAnomalies);
    }
    /**
     * @return Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).
     * 
     */
    public Optional<Boolean> ignoreIpreputation() {
        return Optional.ofNullable(this.ignoreIpreputation);
    }
    /**
     * @return Specifies the IP address that you want the system to trust.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }
    /**
     * @return Specifies the netmask of the exceptional IP address. This is an optional field.
     * 
     */
    public String ipMask() {
        return this.ipMask;
    }
    /**
     * @return Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.
     * 
     */
    public Optional<Boolean> trustedbyPolicybuilder() {
        return Optional.ofNullable(this.trustedbyPolicybuilder);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(WafPolicyIpException defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String blockRequests;
        private @Nullable String description;
        private @Nullable Boolean ignoreAnomalies;
        private @Nullable Boolean ignoreIpreputation;
        private String ipAddress;
        private String ipMask;
        private @Nullable Boolean trustedbyPolicybuilder;
        public Builder() {}
        public Builder(WafPolicyIpException defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.blockRequests = defaults.blockRequests;
    	      this.description = defaults.description;
    	      this.ignoreAnomalies = defaults.ignoreAnomalies;
    	      this.ignoreIpreputation = defaults.ignoreIpreputation;
    	      this.ipAddress = defaults.ipAddress;
    	      this.ipMask = defaults.ipMask;
    	      this.trustedbyPolicybuilder = defaults.trustedbyPolicybuilder;
        }

        @CustomType.Setter
        public Builder blockRequests(@Nullable String blockRequests) {
            this.blockRequests = blockRequests;
            return this;
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreAnomalies(@Nullable Boolean ignoreAnomalies) {
            this.ignoreAnomalies = ignoreAnomalies;
            return this;
        }
        @CustomType.Setter
        public Builder ignoreIpreputation(@Nullable Boolean ignoreIpreputation) {
            this.ignoreIpreputation = ignoreIpreputation;
            return this;
        }
        @CustomType.Setter
        public Builder ipAddress(String ipAddress) {
            this.ipAddress = Objects.requireNonNull(ipAddress);
            return this;
        }
        @CustomType.Setter
        public Builder ipMask(String ipMask) {
            this.ipMask = Objects.requireNonNull(ipMask);
            return this;
        }
        @CustomType.Setter
        public Builder trustedbyPolicybuilder(@Nullable Boolean trustedbyPolicybuilder) {
            this.trustedbyPolicybuilder = trustedbyPolicybuilder;
            return this;
        }
        public WafPolicyIpException build() {
            final var _resultValue = new WafPolicyIpException();
            _resultValue.blockRequests = blockRequests;
            _resultValue.description = description;
            _resultValue.ignoreAnomalies = ignoreAnomalies;
            _resultValue.ignoreIpreputation = ignoreIpreputation;
            _resultValue.ipAddress = ipAddress;
            _resultValue.ipMask = ipMask;
            _resultValue.trustedbyPolicybuilder = trustedbyPolicybuilder;
            return _resultValue;
        }
    }
}
