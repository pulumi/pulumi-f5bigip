// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ssl;

import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.deployment.InvokeOutputOptions;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.ssl.inputs.GetCertificateArgs;
import com.pulumi.f5bigip.ssl.inputs.GetCertificatePlainArgs;
import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigArgs;
import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigPlainArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafEntityParameterArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafEntityParameterPlainArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlPlainArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsPlainArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyPlainArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesArgs;
import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesPlainArgs;
import com.pulumi.f5bigip.ssl.outputs.GetCertificateResult;
import com.pulumi.f5bigip.ssl.outputs.GetVWanConfigResult;
import com.pulumi.f5bigip.ssl.outputs.GetWafEntityParameterResult;
import com.pulumi.f5bigip.ssl.outputs.GetWafEntityUrlResult;
import com.pulumi.f5bigip.ssl.outputs.GetWafPbSuggestionsResult;
import com.pulumi.f5bigip.ssl.outputs.GetWafPolicyResult;
import com.pulumi.f5bigip.ssl.outputs.GetWafSignaturesResult;
import java.util.concurrent.CompletableFuture;

public final class SslFunctions {
    /**
     * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = SslFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("terraform_ssl_certificate")
     *             .partition("Common")
     *             .build());
     * 
     *         ctx.export("bigipSslCertificateName", test.name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args) {
        return getCertificate(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = SslFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("terraform_ssl_certificate")
     *             .partition("Common")
     *             .build());
     * 
     *         ctx.export("bigipSslCertificateName", test.name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args) {
        return getCertificatePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = SslFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("terraform_ssl_certificate")
     *             .partition("Common")
     *             .build());
     * 
     *         ctx.export("bigipSslCertificateName", test.name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = SslFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("terraform_ssl_certificate")
     *             .partition("Common")
     *             .build());
     * 
     *         ctx.export("bigipSslCertificateName", test.name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetCertificateResult> getCertificate(GetCertificateArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetCertificateArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var test = SslFunctions.getCertificate(GetCertificateArgs.builder()
     *             .name("terraform_ssl_certificate")
     *             .partition("Common")
     *             .build());
     * 
     *         ctx.export("bigipSslCertificateName", test.name());
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetCertificateResult> getCertificatePlain(GetCertificatePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getCertificate:getCertificate", TypeShape.of(GetCertificateResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getVWanConfig`) to get the vWAN site config from Azure VWAN Site
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vwanconfig = SslFunctions.getVWanConfig(GetVWanConfigArgs.builder()
     *             .azureVwanResourcegroup("azurevwan-bigip-rg-9c8d")
     *             .azureVwanName("azurevwan-bigip-vwan-9c8d")
     *             .azureVwanVpnsite("azurevwan-bigip-vsite-9c8d")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Pre-required Environment Settings:
     * 
     * * `AZURE_CLIENT_ID` - (Required) Set this environment variable with the Azure app client ID to use.
     * 
     * * `AZURE_CLIENT_SECRET` - (Required) Set this environment variable with the Azure app secret to use.
     * 
     * * `AZURE_SUBSCRIPTION_ID` - (Required) Set this environment variable with the Azure subscription ID to use.
     * 
     * * `AZURE_TENANT_ID` - (Required) Set this environment variable with the Tenant ID to which to authenticate.
     * 
     * * `STORAGE_ACCOUNT_NAME` - (Required) Set this environment variable with the storage account for download config.
     * 
     * * `STORAGE_ACCOUNT_KEY` - (Required) Specifies the storage account key to authenticate,set this Environment variable with account key value.
     * 
     */
    public static Output<GetVWanConfigResult> getVWanConfig(GetVWanConfigArgs args) {
        return getVWanConfig(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getVWanConfig`) to get the vWAN site config from Azure VWAN Site
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vwanconfig = SslFunctions.getVWanConfig(GetVWanConfigArgs.builder()
     *             .azureVwanResourcegroup("azurevwan-bigip-rg-9c8d")
     *             .azureVwanName("azurevwan-bigip-vwan-9c8d")
     *             .azureVwanVpnsite("azurevwan-bigip-vsite-9c8d")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Pre-required Environment Settings:
     * 
     * * `AZURE_CLIENT_ID` - (Required) Set this environment variable with the Azure app client ID to use.
     * 
     * * `AZURE_CLIENT_SECRET` - (Required) Set this environment variable with the Azure app secret to use.
     * 
     * * `AZURE_SUBSCRIPTION_ID` - (Required) Set this environment variable with the Azure subscription ID to use.
     * 
     * * `AZURE_TENANT_ID` - (Required) Set this environment variable with the Tenant ID to which to authenticate.
     * 
     * * `STORAGE_ACCOUNT_NAME` - (Required) Set this environment variable with the storage account for download config.
     * 
     * * `STORAGE_ACCOUNT_KEY` - (Required) Specifies the storage account key to authenticate,set this Environment variable with account key value.
     * 
     */
    public static CompletableFuture<GetVWanConfigResult> getVWanConfigPlain(GetVWanConfigPlainArgs args) {
        return getVWanConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getVWanConfig`) to get the vWAN site config from Azure VWAN Site
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vwanconfig = SslFunctions.getVWanConfig(GetVWanConfigArgs.builder()
     *             .azureVwanResourcegroup("azurevwan-bigip-rg-9c8d")
     *             .azureVwanName("azurevwan-bigip-vwan-9c8d")
     *             .azureVwanVpnsite("azurevwan-bigip-vsite-9c8d")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Pre-required Environment Settings:
     * 
     * * `AZURE_CLIENT_ID` - (Required) Set this environment variable with the Azure app client ID to use.
     * 
     * * `AZURE_CLIENT_SECRET` - (Required) Set this environment variable with the Azure app secret to use.
     * 
     * * `AZURE_SUBSCRIPTION_ID` - (Required) Set this environment variable with the Azure subscription ID to use.
     * 
     * * `AZURE_TENANT_ID` - (Required) Set this environment variable with the Tenant ID to which to authenticate.
     * 
     * * `STORAGE_ACCOUNT_NAME` - (Required) Set this environment variable with the storage account for download config.
     * 
     * * `STORAGE_ACCOUNT_KEY` - (Required) Specifies the storage account key to authenticate,set this Environment variable with account key value.
     * 
     */
    public static Output<GetVWanConfigResult> getVWanConfig(GetVWanConfigArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getVWanConfig:getVWanConfig", TypeShape.of(GetVWanConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getVWanConfig`) to get the vWAN site config from Azure VWAN Site
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vwanconfig = SslFunctions.getVWanConfig(GetVWanConfigArgs.builder()
     *             .azureVwanResourcegroup("azurevwan-bigip-rg-9c8d")
     *             .azureVwanName("azurevwan-bigip-vwan-9c8d")
     *             .azureVwanVpnsite("azurevwan-bigip-vsite-9c8d")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Pre-required Environment Settings:
     * 
     * * `AZURE_CLIENT_ID` - (Required) Set this environment variable with the Azure app client ID to use.
     * 
     * * `AZURE_CLIENT_SECRET` - (Required) Set this environment variable with the Azure app secret to use.
     * 
     * * `AZURE_SUBSCRIPTION_ID` - (Required) Set this environment variable with the Azure subscription ID to use.
     * 
     * * `AZURE_TENANT_ID` - (Required) Set this environment variable with the Tenant ID to which to authenticate.
     * 
     * * `STORAGE_ACCOUNT_NAME` - (Required) Set this environment variable with the storage account for download config.
     * 
     * * `STORAGE_ACCOUNT_KEY` - (Required) Specifies the storage account key to authenticate,set this Environment variable with account key value.
     * 
     */
    public static Output<GetVWanConfigResult> getVWanConfig(GetVWanConfigArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getVWanConfig:getVWanConfig", TypeShape.of(GetVWanConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getVWanConfig`) to get the vWAN site config from Azure VWAN Site
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetVWanConfigArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var vwanconfig = SslFunctions.getVWanConfig(GetVWanConfigArgs.builder()
     *             .azureVwanResourcegroup("azurevwan-bigip-rg-9c8d")
     *             .azureVwanName("azurevwan-bigip-vwan-9c8d")
     *             .azureVwanVpnsite("azurevwan-bigip-vsite-9c8d")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Pre-required Environment Settings:
     * 
     * * `AZURE_CLIENT_ID` - (Required) Set this environment variable with the Azure app client ID to use.
     * 
     * * `AZURE_CLIENT_SECRET` - (Required) Set this environment variable with the Azure app secret to use.
     * 
     * * `AZURE_SUBSCRIPTION_ID` - (Required) Set this environment variable with the Azure subscription ID to use.
     * 
     * * `AZURE_TENANT_ID` - (Required) Set this environment variable with the Tenant ID to which to authenticate.
     * 
     * * `STORAGE_ACCOUNT_NAME` - (Required) Set this environment variable with the storage account for download config.
     * 
     * * `STORAGE_ACCOUNT_KEY` - (Required) Specifies the storage account key to authenticate,set this Environment variable with account key value.
     * 
     */
    public static CompletableFuture<GetVWanConfigResult> getVWanConfigPlain(GetVWanConfigPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getVWanConfig:getVWanConfig", TypeShape.of(GetVWanConfigResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetWafEntityParameterResult> getWafEntityParameter(GetWafEntityParameterArgs args) {
        return getWafEntityParameter(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetWafEntityParameterResult> getWafEntityParameterPlain(GetWafEntityParameterPlainArgs args) {
        return getWafEntityParameterPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetWafEntityParameterResult> getWafEntityParameter(GetWafEntityParameterArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafEntityParameter:getWafEntityParameter", TypeShape.of(GetWafEntityParameterResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetWafEntityParameterResult> getWafEntityParameter(GetWafEntityParameterArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafEntityParameter:getWafEntityParameter", TypeShape.of(GetWafEntityParameterResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetWafEntityParameterResult> getWafEntityParameterPlain(GetWafEntityParameterPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getWafEntityParameter:getWafEntityParameter", TypeShape.of(GetWafEntityParameterResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to create JSON for WAF URL to later use with an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFURL1 = SslFunctions.getWafEntityUrl(GetWafEntityUrlArgs.builder()
     *             .name("/foobar")
     *             .description("this is a test")
     *             .type("explicit")
     *             .protocol("HTTP")
     *             .performStaging(true)
     *             .signatureOverridesDisables(            
     *                 12345678,
     *                 87654321)
     *             .methodOverrides(            
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(false)
     *                     .method("BCOPY")
     *                     .build(),
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(true)
     *                     .method("BDELETE")
     *                     .build())
     *             .crossOriginRequestsEnforcements(            
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app1.com")
     *                     .originPort("80")
     *                     .originProtocol("http")
     *                     .build(),
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app2.com")
     *                     .originPort("443")
     *                     .originProtocol("http")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafEntityUrlResult> getWafEntityUrl(GetWafEntityUrlArgs args) {
        return getWafEntityUrl(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to create JSON for WAF URL to later use with an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFURL1 = SslFunctions.getWafEntityUrl(GetWafEntityUrlArgs.builder()
     *             .name("/foobar")
     *             .description("this is a test")
     *             .type("explicit")
     *             .protocol("HTTP")
     *             .performStaging(true)
     *             .signatureOverridesDisables(            
     *                 12345678,
     *                 87654321)
     *             .methodOverrides(            
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(false)
     *                     .method("BCOPY")
     *                     .build(),
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(true)
     *                     .method("BDELETE")
     *                     .build())
     *             .crossOriginRequestsEnforcements(            
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app1.com")
     *                     .originPort("80")
     *                     .originProtocol("http")
     *                     .build(),
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app2.com")
     *                     .originPort("443")
     *                     .originProtocol("http")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafEntityUrlResult> getWafEntityUrlPlain(GetWafEntityUrlPlainArgs args) {
        return getWafEntityUrlPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to create JSON for WAF URL to later use with an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFURL1 = SslFunctions.getWafEntityUrl(GetWafEntityUrlArgs.builder()
     *             .name("/foobar")
     *             .description("this is a test")
     *             .type("explicit")
     *             .protocol("HTTP")
     *             .performStaging(true)
     *             .signatureOverridesDisables(            
     *                 12345678,
     *                 87654321)
     *             .methodOverrides(            
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(false)
     *                     .method("BCOPY")
     *                     .build(),
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(true)
     *                     .method("BDELETE")
     *                     .build())
     *             .crossOriginRequestsEnforcements(            
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app1.com")
     *                     .originPort("80")
     *                     .originProtocol("http")
     *                     .build(),
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app2.com")
     *                     .originPort("443")
     *                     .originProtocol("http")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafEntityUrlResult> getWafEntityUrl(GetWafEntityUrlArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafEntityUrl:getWafEntityUrl", TypeShape.of(GetWafEntityUrlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to create JSON for WAF URL to later use with an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFURL1 = SslFunctions.getWafEntityUrl(GetWafEntityUrlArgs.builder()
     *             .name("/foobar")
     *             .description("this is a test")
     *             .type("explicit")
     *             .protocol("HTTP")
     *             .performStaging(true)
     *             .signatureOverridesDisables(            
     *                 12345678,
     *                 87654321)
     *             .methodOverrides(            
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(false)
     *                     .method("BCOPY")
     *                     .build(),
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(true)
     *                     .method("BDELETE")
     *                     .build())
     *             .crossOriginRequestsEnforcements(            
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app1.com")
     *                     .originPort("80")
     *                     .originProtocol("http")
     *                     .build(),
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app2.com")
     *                     .originPort("443")
     *                     .originProtocol("http")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafEntityUrlResult> getWafEntityUrl(GetWafEntityUrlArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafEntityUrl:getWafEntityUrl", TypeShape.of(GetWafEntityUrlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to create JSON for WAF URL to later use with an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafEntityUrlArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFURL1 = SslFunctions.getWafEntityUrl(GetWafEntityUrlArgs.builder()
     *             .name("/foobar")
     *             .description("this is a test")
     *             .type("explicit")
     *             .protocol("HTTP")
     *             .performStaging(true)
     *             .signatureOverridesDisables(            
     *                 12345678,
     *                 87654321)
     *             .methodOverrides(            
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(false)
     *                     .method("BCOPY")
     *                     .build(),
     *                 GetWafEntityUrlMethodOverrideArgs.builder()
     *                     .allow(true)
     *                     .method("BDELETE")
     *                     .build())
     *             .crossOriginRequestsEnforcements(            
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app1.com")
     *                     .originPort("80")
     *                     .originProtocol("http")
     *                     .build(),
     *                 GetWafEntityUrlCrossOriginRequestsEnforcementArgs.builder()
     *                     .includeSubdomains(true)
     *                     .originName("app2.com")
     *                     .originPort("443")
     *                     .originProtocol("http")
     *                     .build())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafEntityUrlResult> getWafEntityUrlPlain(GetWafEntityUrlPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getWafEntityUrl:getWafEntityUrl", TypeShape.of(GetWafEntityUrlResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to export PB suggestions from an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var PBWAF1 = SslFunctions.getWafPbSuggestions(GetWafPbSuggestionsArgs.builder()
     *             .policyName("protect_me_policy")
     *             .partition("Common")
     *             .minimumLearningScore(20)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafPbSuggestionsResult> getWafPbSuggestions(GetWafPbSuggestionsArgs args) {
        return getWafPbSuggestions(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to export PB suggestions from an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var PBWAF1 = SslFunctions.getWafPbSuggestions(GetWafPbSuggestionsArgs.builder()
     *             .policyName("protect_me_policy")
     *             .partition("Common")
     *             .minimumLearningScore(20)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafPbSuggestionsResult> getWafPbSuggestionsPlain(GetWafPbSuggestionsPlainArgs args) {
        return getWafPbSuggestionsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to export PB suggestions from an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var PBWAF1 = SslFunctions.getWafPbSuggestions(GetWafPbSuggestionsArgs.builder()
     *             .policyName("protect_me_policy")
     *             .partition("Common")
     *             .minimumLearningScore(20)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafPbSuggestionsResult> getWafPbSuggestions(GetWafPbSuggestionsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafPbSuggestions:getWafPbSuggestions", TypeShape.of(GetWafPbSuggestionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to export PB suggestions from an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var PBWAF1 = SslFunctions.getWafPbSuggestions(GetWafPbSuggestionsArgs.builder()
     *             .policyName("protect_me_policy")
     *             .partition("Common")
     *             .minimumLearningScore(20)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafPbSuggestionsResult> getWafPbSuggestions(GetWafPbSuggestionsArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafPbSuggestions:getWafPbSuggestions", TypeShape.of(GetWafPbSuggestionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafPbSuggestions`) to export PB suggestions from an existing WAF policy.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPbSuggestionsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var PBWAF1 = SslFunctions.getWafPbSuggestions(GetWafPbSuggestionsArgs.builder()
     *             .policyName("protect_me_policy")
     *             .partition("Common")
     *             .minimumLearningScore(20)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafPbSuggestionsResult> getWafPbSuggestionsPlain(GetWafPbSuggestionsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getWafPbSuggestions:getWafPbSuggestions", TypeShape.of(GetWafPbSuggestionsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.WafPolicy`) to get the details of exist WAF policy BIG-IP.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var existpolicy = SslFunctions.getWafPolicy(GetWafPolicyArgs.builder()
     *             .policyId("xxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafPolicyResult> getWafPolicy(GetWafPolicyArgs args) {
        return getWafPolicy(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.WafPolicy`) to get the details of exist WAF policy BIG-IP.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var existpolicy = SslFunctions.getWafPolicy(GetWafPolicyArgs.builder()
     *             .policyId("xxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafPolicyResult> getWafPolicyPlain(GetWafPolicyPlainArgs args) {
        return getWafPolicyPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.WafPolicy`) to get the details of exist WAF policy BIG-IP.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var existpolicy = SslFunctions.getWafPolicy(GetWafPolicyArgs.builder()
     *             .policyId("xxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafPolicyResult> getWafPolicy(GetWafPolicyArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafPolicy:getWafPolicy", TypeShape.of(GetWafPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.WafPolicy`) to get the details of exist WAF policy BIG-IP.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var existpolicy = SslFunctions.getWafPolicy(GetWafPolicyArgs.builder()
     *             .policyId("xxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafPolicyResult> getWafPolicy(GetWafPolicyArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafPolicy:getWafPolicy", TypeShape.of(GetWafPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.WafPolicy`) to get the details of exist WAF policy BIG-IP.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafPolicyArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var existpolicy = SslFunctions.getWafPolicy(GetWafPolicyArgs.builder()
     *             .policyId("xxxxx")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafPolicyResult> getWafPolicyPlain(GetWafPolicyPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getWafPolicy:getWafPolicy", TypeShape.of(GetWafPolicyResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafSignatures`) to get the details of attack signatures available on BIG-IP WAF
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFSIG1 = SslFunctions.getWafSignatures(GetWafSignaturesArgs.builder()
     *             .signatureId(200104004)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafSignaturesResult> getWafSignatures(GetWafSignaturesArgs args) {
        return getWafSignatures(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafSignatures`) to get the details of attack signatures available on BIG-IP WAF
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFSIG1 = SslFunctions.getWafSignatures(GetWafSignaturesArgs.builder()
     *             .signatureId(200104004)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafSignaturesResult> getWafSignaturesPlain(GetWafSignaturesPlainArgs args) {
        return getWafSignaturesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafSignatures`) to get the details of attack signatures available on BIG-IP WAF
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFSIG1 = SslFunctions.getWafSignatures(GetWafSignaturesArgs.builder()
     *             .signatureId(200104004)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafSignaturesResult> getWafSignatures(GetWafSignaturesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafSignatures:getWafSignatures", TypeShape.of(GetWafSignaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafSignatures`) to get the details of attack signatures available on BIG-IP WAF
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFSIG1 = SslFunctions.getWafSignatures(GetWafSignaturesArgs.builder()
     *             .signatureId(200104004)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetWafSignaturesResult> getWafSignatures(GetWafSignaturesArgs args, InvokeOutputOptions options) {
        return Deployment.getInstance().invoke("f5bigip:ssl/getWafSignatures:getWafSignatures", TypeShape.of(GetWafSignaturesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source (`f5bigip.ssl.getWafSignatures`) to get the details of attack signatures available on BIG-IP WAF
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.f5bigip.ssl.SslFunctions;
     * import com.pulumi.f5bigip.ssl.inputs.GetWafSignaturesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var WAFSIG1 = SslFunctions.getWafSignatures(GetWafSignaturesArgs.builder()
     *             .signatureId(200104004)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetWafSignaturesResult> getWafSignaturesPlain(GetWafSignaturesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("f5bigip:ssl/getWafSignatures:getWafSignatures", TypeShape.of(GetWafSignaturesResult.class), args, Utilities.withVersion(options));
    }
}
