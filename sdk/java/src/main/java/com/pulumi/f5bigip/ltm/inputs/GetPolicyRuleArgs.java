// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.f5bigip.ltm.inputs.GetPolicyRuleActionArgs;
import com.pulumi.f5bigip.ltm.inputs.GetPolicyRuleConditionArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPolicyRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPolicyRuleArgs Empty = new GetPolicyRuleArgs();

    @Import(name="actions")
    private @Nullable Output<List<GetPolicyRuleActionArgs>> actions;

    public Optional<Output<List<GetPolicyRuleActionArgs>>> actions() {
        return Optional.ofNullable(this.actions);
    }

    @Import(name="conditions")
    private @Nullable Output<List<GetPolicyRuleConditionArgs>> conditions;

    public Optional<Output<List<GetPolicyRuleConditionArgs>>> conditions() {
        return Optional.ofNullable(this.conditions);
    }

    /**
     * Name of the policy which includes partion ( /partition/policy-name )
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the policy which includes partion ( /partition/policy-name )
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private GetPolicyRuleArgs() {}

    private GetPolicyRuleArgs(GetPolicyRuleArgs $) {
        this.actions = $.actions;
        this.conditions = $.conditions;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPolicyRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPolicyRuleArgs $;

        public Builder() {
            $ = new GetPolicyRuleArgs();
        }

        public Builder(GetPolicyRuleArgs defaults) {
            $ = new GetPolicyRuleArgs(Objects.requireNonNull(defaults));
        }

        public Builder actions(@Nullable Output<List<GetPolicyRuleActionArgs>> actions) {
            $.actions = actions;
            return this;
        }

        public Builder actions(List<GetPolicyRuleActionArgs> actions) {
            return actions(Output.of(actions));
        }

        public Builder actions(GetPolicyRuleActionArgs... actions) {
            return actions(List.of(actions));
        }

        public Builder conditions(@Nullable Output<List<GetPolicyRuleConditionArgs>> conditions) {
            $.conditions = conditions;
            return this;
        }

        public Builder conditions(List<GetPolicyRuleConditionArgs> conditions) {
            return conditions(Output.of(conditions));
        }

        public Builder conditions(GetPolicyRuleConditionArgs... conditions) {
            return conditions(List.of(conditions));
        }

        /**
         * @param name Name of the policy which includes partion ( /partition/policy-name )
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the policy which includes partion ( /partition/policy-name )
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public GetPolicyRuleArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetPolicyRuleArgs", "name");
            }
            return $;
        }
    }

}
