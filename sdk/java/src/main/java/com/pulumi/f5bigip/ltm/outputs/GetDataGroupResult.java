// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.f5bigip.ltm.outputs.GetDataGroupRecord;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDataGroupResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    private String partition;
    /**
     * @return Specifies record of type (string/ip/integer)
     * 
     */
    private List<GetDataGroupRecord> records;
    /**
     * @return The Data Group type (string, ip, integer)&#34;
     * 
     */
    private String type;

    private GetDataGroupResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    public String partition() {
        return this.partition;
    }
    /**
     * @return Specifies record of type (string/ip/integer)
     * 
     */
    public List<GetDataGroupRecord> records() {
        return this.records;
    }
    /**
     * @return The Data Group type (string, ip, integer)&#34;
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDataGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String name;
        private String partition;
        private List<GetDataGroupRecord> records;
        private String type;
        public Builder() {}
        public Builder(GetDataGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.partition = defaults.partition;
    	      this.records = defaults.records;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDataGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetDataGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder partition(String partition) {
            if (partition == null) {
              throw new MissingRequiredPropertyException("GetDataGroupResult", "partition");
            }
            this.partition = partition;
            return this;
        }
        @CustomType.Setter
        public Builder records(List<GetDataGroupRecord> records) {
            if (records == null) {
              throw new MissingRequiredPropertyException("GetDataGroupResult", "records");
            }
            this.records = records;
            return this;
        }
        public Builder records(GetDataGroupRecord... records) {
            return records(List.of(records));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetDataGroupResult", "type");
            }
            this.type = type;
            return this;
        }
        public GetDataGroupResult build() {
            final var _resultValue = new GetDataGroupResult();
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.partition = partition;
            _resultValue.records = records;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
