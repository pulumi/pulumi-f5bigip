// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class FastHttpAppVirtualServerArgs extends com.pulumi.resources.ResourceArgs {

    public static final FastHttpAppVirtualServerArgs Empty = new FastHttpAppVirtualServerArgs();

    /**
     * IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * Port number to used for accessing virtual server/application
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return Port number to used for accessing virtual server/application
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    private FastHttpAppVirtualServerArgs() {}

    private FastHttpAppVirtualServerArgs(FastHttpAppVirtualServerArgs $) {
        this.ip = $.ip;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FastHttpAppVirtualServerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FastHttpAppVirtualServerArgs $;

        public Builder() {
            $ = new FastHttpAppVirtualServerArgs();
        }

        public Builder(FastHttpAppVirtualServerArgs defaults) {
            $ = new FastHttpAppVirtualServerArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ip IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param port Port number to used for accessing virtual server/application
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port Port number to used for accessing virtual server/application
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public FastHttpAppVirtualServerArgs build() {
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("FastHttpAppVirtualServerArgs", "ip");
            }
            if ($.port == null) {
                throw new MissingRequiredPropertyException("FastHttpAppVirtualServerArgs", "port");
            }
            return $;
        }
    }

}
