// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CipherGroupArgs extends com.pulumi.resources.ResourceArgs {

    public static final CipherGroupArgs Empty = new CipherGroupArgs();

    /**
     * Specifies the configuration of the allowed groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
     * 
     */
    @Import(name="allows")
    private @Nullable Output<List<String>> allows;

    /**
     * @return Specifies the configuration of the allowed groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
     * 
     */
    public Optional<Output<List<String>>> allows() {
        return Optional.ofNullable(this.allows);
    }

    /**
     * Specifies descriptive text that identifies the cipher rule
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Specifies descriptive text that identifies the cipher rule
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of the Cipher group. Name should be in pattern `partition` + `cipher_group_name`
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the Cipher group. Name should be in pattern `partition` + `cipher_group_name`
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Controls the order of the Cipher String list in the Cipher Audit section. Options are Default, Speed, Strength, FIPS, and Hardware. The rules are processed in the order listed.
     * 
     */
    @Import(name="ordering")
    private @Nullable Output<String> ordering;

    /**
     * @return Controls the order of the Cipher String list in the Cipher Audit section. Options are Default, Speed, Strength, FIPS, and Hardware. The rules are processed in the order listed.
     * 
     */
    public Optional<Output<String>> ordering() {
        return Optional.ofNullable(this.ordering);
    }

    /**
     * Specifies the configuration of the restrict groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
     * 
     */
    @Import(name="requires")
    private @Nullable Output<List<String>> requires;

    /**
     * @return Specifies the configuration of the restrict groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
     * 
     */
    public Optional<Output<List<String>>> requires() {
        return Optional.ofNullable(this.requires);
    }

    private CipherGroupArgs() {}

    private CipherGroupArgs(CipherGroupArgs $) {
        this.allows = $.allows;
        this.description = $.description;
        this.name = $.name;
        this.ordering = $.ordering;
        this.requires = $.requires;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CipherGroupArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CipherGroupArgs $;

        public Builder() {
            $ = new CipherGroupArgs();
        }

        public Builder(CipherGroupArgs defaults) {
            $ = new CipherGroupArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allows Specifies the configuration of the allowed groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
         * 
         * @return builder
         * 
         */
        public Builder allows(@Nullable Output<List<String>> allows) {
            $.allows = allows;
            return this;
        }

        /**
         * @param allows Specifies the configuration of the allowed groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
         * 
         * @return builder
         * 
         */
        public Builder allows(List<String> allows) {
            return allows(Output.of(allows));
        }

        /**
         * @param allows Specifies the configuration of the allowed groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
         * 
         * @return builder
         * 
         */
        public Builder allows(String... allows) {
            return allows(List.of(allows));
        }

        /**
         * @param description Specifies descriptive text that identifies the cipher rule
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Specifies descriptive text that identifies the cipher rule
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Name of the Cipher group. Name should be in pattern `partition` + `cipher_group_name`
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Cipher group. Name should be in pattern `partition` + `cipher_group_name`
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ordering Controls the order of the Cipher String list in the Cipher Audit section. Options are Default, Speed, Strength, FIPS, and Hardware. The rules are processed in the order listed.
         * 
         * @return builder
         * 
         */
        public Builder ordering(@Nullable Output<String> ordering) {
            $.ordering = ordering;
            return this;
        }

        /**
         * @param ordering Controls the order of the Cipher String list in the Cipher Audit section. Options are Default, Speed, Strength, FIPS, and Hardware. The rules are processed in the order listed.
         * 
         * @return builder
         * 
         */
        public Builder ordering(String ordering) {
            return ordering(Output.of(ordering));
        }

        /**
         * @param requires Specifies the configuration of the restrict groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
         * 
         * @return builder
         * 
         */
        public Builder requires(@Nullable Output<List<String>> requires) {
            $.requires = requires;
            return this;
        }

        /**
         * @param requires Specifies the configuration of the restrict groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
         * 
         * @return builder
         * 
         */
        public Builder requires(List<String> requires) {
            return requires(Output.of(requires));
        }

        /**
         * @param requires Specifies the configuration of the restrict groups of ciphers. You can select a cipher rule from the Available Cipher Rules list.
         * 
         * @return builder
         * 
         */
        public Builder requires(String... requires) {
            return requires(List.of(requires));
        }

        public CipherGroupArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
