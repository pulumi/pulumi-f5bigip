// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetAs3DeviceInformationResult {
    private @Nullable List<String> applications;
    private String as3Json;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String tenant;

    private GetAs3DeviceInformationResult() {}
    public List<String> applications() {
        return this.applications == null ? List.of() : this.applications;
    }
    public String as3Json() {
        return this.as3Json;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String tenant() {
        return this.tenant;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAs3DeviceInformationResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<String> applications;
        private String as3Json;
        private String id;
        private String tenant;
        public Builder() {}
        public Builder(GetAs3DeviceInformationResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applications = defaults.applications;
    	      this.as3Json = defaults.as3Json;
    	      this.id = defaults.id;
    	      this.tenant = defaults.tenant;
        }

        @CustomType.Setter
        public Builder applications(@Nullable List<String> applications) {

            this.applications = applications;
            return this;
        }
        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }
        @CustomType.Setter
        public Builder as3Json(String as3Json) {
            if (as3Json == null) {
              throw new MissingRequiredPropertyException("GetAs3DeviceInformationResult", "as3Json");
            }
            this.as3Json = as3Json;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAs3DeviceInformationResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder tenant(String tenant) {
            if (tenant == null) {
              throw new MissingRequiredPropertyException("GetAs3DeviceInformationResult", "tenant");
            }
            this.tenant = tenant;
            return this;
        }
        public GetAs3DeviceInformationResult build() {
            final var _resultValue = new GetAs3DeviceInformationResult();
            _resultValue.applications = applications;
            _resultValue.as3Json = as3Json;
            _resultValue.id = id;
            _resultValue.tenant = tenant;
            return _resultValue;
        }
    }
}
