// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.sys;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.sys.OcspArgs;
import com.pulumi.f5bigip.sys.inputs.OcspState;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `f5bigip.sys.Ocsp` Manages F5 BIG-IP OCSP responder using iControl REST.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.f5bigip.sys.Ocsp;
 * import com.pulumi.f5bigip.sys.OcspArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test_ocsp = new Ocsp("test-ocsp", OcspArgs.builder()
 *             .name("/Uncommon/test-ocsp")
 *             .proxyServerPool("/Common/test-poolxyz")
 *             .signerKey("/Common/le-ssl")
 *             .signerCert("/Common/le-ssl")
 *             .passphrase("testabcdef")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Importing
 * 
 * An existing OCSP can be imported into this resource by supplying the full path name  ex : `/partition/name`
 * An example is below:
 * ```sh
 * $ terraform import bigip_sys_ocsp.test-ocsp /Common/test-ocsp
 * ```
 * 
 */
@ResourceType(type="f5bigip:sys/ocsp:Ocsp")
public class Ocsp extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the lifetime of an error response in the cache, in seconds. This value must be greater than connection_timeout. The default value is `3600`.
     * 
     */
    @Export(name="cacheErrorTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> cacheErrorTimeout;

    /**
     * @return Specifies the lifetime of an error response in the cache, in seconds. This value must be greater than connection_timeout. The default value is `3600`.
     * 
     */
    public Output<Optional<Integer>> cacheErrorTimeout() {
        return Codegen.optional(this.cacheErrorTimeout);
    }
    /**
     * Specifies the lifetime of the OCSP response in the cache, in seconds. The default value is `indefinite`.
     * 
     */
    @Export(name="cacheTimeout", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> cacheTimeout;

    /**
     * @return Specifies the lifetime of the OCSP response in the cache, in seconds. The default value is `indefinite`.
     * 
     */
    public Output<Optional<String>> cacheTimeout() {
        return Codegen.optional(this.cacheTimeout);
    }
    /**
     * Specifies the time interval that the BIG-IP system allows for clock skew, in seconds. The default value is `300`.
     * 
     */
    @Export(name="clockSkew", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> clockSkew;

    /**
     * @return Specifies the time interval that the BIG-IP system allows for clock skew, in seconds. The default value is `300`.
     * 
     */
    public Output<Optional<Integer>> clockSkew() {
        return Codegen.optional(this.clockSkew);
    }
    /**
     * Specifies the maximum number of connections per second allowed for the OCSP certificate validator. The default value is `50`.
     * 
     */
    @Export(name="concurrentConnectionsLimit", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> concurrentConnectionsLimit;

    /**
     * @return Specifies the maximum number of connections per second allowed for the OCSP certificate validator. The default value is `50`.
     * 
     */
    public Output<Optional<Integer>> concurrentConnectionsLimit() {
        return Codegen.optional(this.concurrentConnectionsLimit);
    }
    /**
     * Specifies the time interval that the BIG-IP system waits for before ending the connection to the OCSP responder, in seconds. The default value is `8`.
     * 
     */
    @Export(name="connectionTimeout", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> connectionTimeout;

    /**
     * @return Specifies the time interval that the BIG-IP system waits for before ending the connection to the OCSP responder, in seconds. The default value is `8`.
     * 
     */
    public Output<Optional<Integer>> connectionTimeout() {
        return Codegen.optional(this.connectionTimeout);
    }
    /**
     * Specifies the internal DNS resolver the BIG-IP system uses to fetch the OCSP response.
     * 
     */
    @Export(name="dnsResolver", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> dnsResolver;

    /**
     * @return Specifies the internal DNS resolver the BIG-IP system uses to fetch the OCSP response.
     * 
     */
    public Output<Optional<String>> dnsResolver() {
        return Codegen.optional(this.dnsResolver);
    }
    /**
     * Name of the OCSP Responder. Name should be in pattern `/partition/ocsp_name`.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the OCSP Responder. Name should be in pattern `/partition/ocsp_name`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Specifies a passphrase used to sign an OCSP request.
     * 
     */
    @Export(name="passphrase", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> passphrase;

    /**
     * @return Specifies a passphrase used to sign an OCSP request.
     * 
     */
    public Output<Optional<String>> passphrase() {
        return Codegen.optional(this.passphrase);
    }
    /**
     * Specifies the proxy server pool the BIG-IP system uses to fetch the OCSP response.
     * 
     */
    @Export(name="proxyServerPool", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> proxyServerPool;

    /**
     * @return Specifies the proxy server pool the BIG-IP system uses to fetch the OCSP response.
     * 
     */
    public Output<Optional<String>> proxyServerPool() {
        return Codegen.optional(this.proxyServerPool);
    }
    /**
     * Specifies the URL of the OCSP responder.
     * 
     */
    @Export(name="responderUrl", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> responderUrl;

    /**
     * @return Specifies the URL of the OCSP responder.
     * 
     */
    public Output<Optional<String>> responderUrl() {
        return Codegen.optional(this.responderUrl);
    }
    /**
     * Specifies the route domain for the OCSP responder.
     * 
     */
    @Export(name="routeDomain", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routeDomain;

    /**
     * @return Specifies the route domain for the OCSP responder.
     * 
     */
    public Output<Optional<String>> routeDomain() {
        return Codegen.optional(this.routeDomain);
    }
    /**
     * Specifies the hash algorithm used to sign the OCSP request. The default value is `sha256`.
     * 
     */
    @Export(name="signHash", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signHash;

    /**
     * @return Specifies the hash algorithm used to sign the OCSP request. The default value is `sha256`.
     * 
     */
    public Output<Optional<String>> signHash() {
        return Codegen.optional(this.signHash);
    }
    /**
     * Specifies the certificate used to sign the OCSP request.
     * 
     */
    @Export(name="signerCert", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signerCert;

    /**
     * @return Specifies the certificate used to sign the OCSP request.
     * 
     */
    public Output<Optional<String>> signerCert() {
        return Codegen.optional(this.signerCert);
    }
    /**
     * Specifies the key used to sign the OCSP request.
     * 
     */
    @Export(name="signerKey", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> signerKey;

    /**
     * @return Specifies the key used to sign the OCSP request.
     * 
     */
    public Output<Optional<String>> signerKey() {
        return Codegen.optional(this.signerKey);
    }
    /**
     * Specifies the maximum allowed lag time that the BIG-IP system accepts for the &#39;thisUpdate&#39; time in the OCSP response, in seconds. The default value is `0`.
     * 
     */
    @Export(name="statusAge", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> statusAge;

    /**
     * @return Specifies the maximum allowed lag time that the BIG-IP system accepts for the &#39;thisUpdate&#39; time in the OCSP response, in seconds. The default value is `0`.
     * 
     */
    public Output<Optional<Integer>> statusAge() {
        return Codegen.optional(this.statusAge);
    }
    /**
     * Specifies whether the responder&#39;s certificate is checked for an OCSP signing extension. The default value is `enabled`.
     * 
     */
    @Export(name="strictRespCertCheck", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> strictRespCertCheck;

    /**
     * @return Specifies whether the responder&#39;s certificate is checked for an OCSP signing extension. The default value is `enabled`.
     * 
     */
    public Output<Optional<String>> strictRespCertCheck() {
        return Codegen.optional(this.strictRespCertCheck);
    }
    /**
     * Specifies the certificates used for validating the OCSP response.
     * 
     */
    @Export(name="trustedResponders", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> trustedResponders;

    /**
     * @return Specifies the certificates used for validating the OCSP response.
     * 
     */
    public Output<Optional<String>> trustedResponders() {
        return Codegen.optional(this.trustedResponders);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Ocsp(String name) {
        this(name, OcspArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Ocsp(String name, OcspArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Ocsp(String name, OcspArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:sys/ocsp:Ocsp", name, args == null ? OcspArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Ocsp(String name, Output<String> id, @Nullable OcspState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:sys/ocsp:Ocsp", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "passphrase"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Ocsp get(String name, Output<String> id, @Nullable OcspState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Ocsp(name, id, state, options);
    }
}
