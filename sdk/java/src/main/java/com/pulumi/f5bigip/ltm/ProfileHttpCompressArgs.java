// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileHttpCompressArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileHttpCompressArgs Empty = new ProfileHttpCompressArgs();

    /**
     * Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    @Import(name="contentTypeExcludes")
    private @Nullable Output<List<String>> contentTypeExcludes;

    /**
     * @return Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    public Optional<Output<List<String>>> contentTypeExcludes() {
        return Optional.ofNullable(this.contentTypeExcludes);
    }

    /**
     * Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    @Import(name="contentTypeIncludes")
    private @Nullable Output<List<String>> contentTypeIncludes;

    /**
     * @return Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     * 
     */
    public Optional<Output<List<String>>> contentTypeIncludes() {
        return Optional.ofNullable(this.contentTypeIncludes);
    }

    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     * 
     */
    @Import(name="defaultsFrom")
    private @Nullable Output<String> defaultsFrom;

    /**
     * @return Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     * 
     */
    public Optional<Output<String>> defaultsFrom() {
        return Optional.ofNullable(this.defaultsFrom);
    }

    /**
     * Name of the profile_httpcompress
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the profile_httpcompress
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     * 
     */
    @Import(name="uriExcludes")
    private @Nullable Output<List<String>> uriExcludes;

    /**
     * @return Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     * 
     */
    public Optional<Output<List<String>>> uriExcludes() {
        return Optional.ofNullable(this.uriExcludes);
    }

    /**
     * Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     * 
     */
    @Import(name="uriIncludes")
    private @Nullable Output<List<String>> uriIncludes;

    /**
     * @return Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     * 
     */
    public Optional<Output<List<String>>> uriIncludes() {
        return Optional.ofNullable(this.uriIncludes);
    }

    private ProfileHttpCompressArgs() {}

    private ProfileHttpCompressArgs(ProfileHttpCompressArgs $) {
        this.contentTypeExcludes = $.contentTypeExcludes;
        this.contentTypeIncludes = $.contentTypeIncludes;
        this.defaultsFrom = $.defaultsFrom;
        this.name = $.name;
        this.uriExcludes = $.uriExcludes;
        this.uriIncludes = $.uriIncludes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileHttpCompressArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileHttpCompressArgs $;

        public Builder() {
            $ = new ProfileHttpCompressArgs();
        }

        public Builder(ProfileHttpCompressArgs defaults) {
            $ = new ProfileHttpCompressArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param contentTypeExcludes Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeExcludes(@Nullable Output<List<String>> contentTypeExcludes) {
            $.contentTypeExcludes = contentTypeExcludes;
            return this;
        }

        /**
         * @param contentTypeExcludes Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeExcludes(List<String> contentTypeExcludes) {
            return contentTypeExcludes(Output.of(contentTypeExcludes));
        }

        /**
         * @param contentTypeExcludes Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeExcludes(String... contentTypeExcludes) {
            return contentTypeExcludes(List.of(contentTypeExcludes));
        }

        /**
         * @param contentTypeIncludes Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeIncludes(@Nullable Output<List<String>> contentTypeIncludes) {
            $.contentTypeIncludes = contentTypeIncludes;
            return this;
        }

        /**
         * @param contentTypeIncludes Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeIncludes(List<String> contentTypeIncludes) {
            return contentTypeIncludes(Output.of(contentTypeIncludes));
        }

        /**
         * @param contentTypeIncludes Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder contentTypeIncludes(String... contentTypeIncludes) {
            return contentTypeIncludes(List.of(contentTypeIncludes));
        }

        /**
         * @param defaultsFrom Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
         * 
         * @return builder
         * 
         */
        public Builder defaultsFrom(@Nullable Output<String> defaultsFrom) {
            $.defaultsFrom = defaultsFrom;
            return this;
        }

        /**
         * @param defaultsFrom Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
         * 
         * @return builder
         * 
         */
        public Builder defaultsFrom(String defaultsFrom) {
            return defaultsFrom(Output.of(defaultsFrom));
        }

        /**
         * @param name Name of the profile_httpcompress
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the profile_httpcompress
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param uriExcludes Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
         * 
         * @return builder
         * 
         */
        public Builder uriExcludes(@Nullable Output<List<String>> uriExcludes) {
            $.uriExcludes = uriExcludes;
            return this;
        }

        /**
         * @param uriExcludes Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
         * 
         * @return builder
         * 
         */
        public Builder uriExcludes(List<String> uriExcludes) {
            return uriExcludes(Output.of(uriExcludes));
        }

        /**
         * @param uriExcludes Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
         * 
         * @return builder
         * 
         */
        public Builder uriExcludes(String... uriExcludes) {
            return uriExcludes(List.of(uriExcludes));
        }

        /**
         * @param uriIncludes Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder uriIncludes(@Nullable Output<List<String>> uriIncludes) {
            $.uriIncludes = uriIncludes;
            return this;
        }

        /**
         * @param uriIncludes Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder uriIncludes(List<String> uriIncludes) {
            return uriIncludes(Output.of(uriIncludes));
        }

        /**
         * @param uriIncludes Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
         * 
         * @return builder
         * 
         */
        public Builder uriIncludes(String... uriIncludes) {
            return uriIncludes(List.of(uriIncludes));
        }

        public ProfileHttpCompressArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
