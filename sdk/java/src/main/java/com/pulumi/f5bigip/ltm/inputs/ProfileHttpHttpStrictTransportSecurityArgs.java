// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProfileHttpHttpStrictTransportSecurityArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProfileHttpHttpStrictTransportSecurityArgs Empty = new ProfileHttpHttpStrictTransportSecurityArgs();

    /**
     * The Include Subdomains setting applies the HSTS policy to the HSTS host and its subdomains. The default is &#34;enabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If includeSubdomains is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;enabled&#34; explicitly.
     * 
     */
    @Import(name="includeSubdomains")
    private @Nullable Output<String> includeSubdomains;

    /**
     * @return The Include Subdomains setting applies the HSTS policy to the HSTS host and its subdomains. The default is &#34;enabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If includeSubdomains is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;enabled&#34; explicitly.
     * 
     */
    public Optional<Output<String>> includeSubdomains() {
        return Optional.ofNullable(this.includeSubdomains);
    }

    /**
     * The Maximum Age value specifies the length of time, in seconds, that HSTS functionality requests that clients only use HTTPS to connect to the current host and any subdomains of the current host&#39;s domain name.  The default is 16070400 seconds. If no value is specified during Create, then default value will be assigned by BigIp. If maximumAge is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value , we need to pass 16070400 explicitly.
     * 
     */
    @Import(name="maximumAge")
    private @Nullable Output<Integer> maximumAge;

    /**
     * @return The Maximum Age value specifies the length of time, in seconds, that HSTS functionality requests that clients only use HTTPS to connect to the current host and any subdomains of the current host&#39;s domain name.  The default is 16070400 seconds. If no value is specified during Create, then default value will be assigned by BigIp. If maximumAge is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value , we need to pass 16070400 explicitly.
     * 
     */
    public Optional<Output<Integer>> maximumAge() {
        return Optional.ofNullable(this.maximumAge);
    }

    /**
     * The Mode setting enables and disables HSTS functionality within the HTTP profile. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If mode is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    @Import(name="mode")
    private @Nullable Output<String> mode;

    /**
     * @return The Mode setting enables and disables HSTS functionality within the HTTP profile. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If mode is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    public Optional<Output<String>> mode() {
        return Optional.ofNullable(this.mode);
    }

    /**
     * An HSTS preload list is a list of domains built into a web browser. When you enable the Preload setting, the domain for the web site that this HTTP profile is associated with is submitted for inclusion in the browser&#39;s preload list. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If preload is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    @Import(name="preload")
    private @Nullable Output<String> preload;

    /**
     * @return An HSTS preload list is a list of domains built into a web browser. When you enable the Preload setting, the domain for the web site that this HTTP profile is associated with is submitted for inclusion in the browser&#39;s preload list. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If preload is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    public Optional<Output<String>> preload() {
        return Optional.ofNullable(this.preload);
    }

    private ProfileHttpHttpStrictTransportSecurityArgs() {}

    private ProfileHttpHttpStrictTransportSecurityArgs(ProfileHttpHttpStrictTransportSecurityArgs $) {
        this.includeSubdomains = $.includeSubdomains;
        this.maximumAge = $.maximumAge;
        this.mode = $.mode;
        this.preload = $.preload;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProfileHttpHttpStrictTransportSecurityArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProfileHttpHttpStrictTransportSecurityArgs $;

        public Builder() {
            $ = new ProfileHttpHttpStrictTransportSecurityArgs();
        }

        public Builder(ProfileHttpHttpStrictTransportSecurityArgs defaults) {
            $ = new ProfileHttpHttpStrictTransportSecurityArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param includeSubdomains The Include Subdomains setting applies the HSTS policy to the HSTS host and its subdomains. The default is &#34;enabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If includeSubdomains is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;enabled&#34; explicitly.
         * 
         * @return builder
         * 
         */
        public Builder includeSubdomains(@Nullable Output<String> includeSubdomains) {
            $.includeSubdomains = includeSubdomains;
            return this;
        }

        /**
         * @param includeSubdomains The Include Subdomains setting applies the HSTS policy to the HSTS host and its subdomains. The default is &#34;enabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If includeSubdomains is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;enabled&#34; explicitly.
         * 
         * @return builder
         * 
         */
        public Builder includeSubdomains(String includeSubdomains) {
            return includeSubdomains(Output.of(includeSubdomains));
        }

        /**
         * @param maximumAge The Maximum Age value specifies the length of time, in seconds, that HSTS functionality requests that clients only use HTTPS to connect to the current host and any subdomains of the current host&#39;s domain name.  The default is 16070400 seconds. If no value is specified during Create, then default value will be assigned by BigIp. If maximumAge is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value , we need to pass 16070400 explicitly.
         * 
         * @return builder
         * 
         */
        public Builder maximumAge(@Nullable Output<Integer> maximumAge) {
            $.maximumAge = maximumAge;
            return this;
        }

        /**
         * @param maximumAge The Maximum Age value specifies the length of time, in seconds, that HSTS functionality requests that clients only use HTTPS to connect to the current host and any subdomains of the current host&#39;s domain name.  The default is 16070400 seconds. If no value is specified during Create, then default value will be assigned by BigIp. If maximumAge is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value , we need to pass 16070400 explicitly.
         * 
         * @return builder
         * 
         */
        public Builder maximumAge(Integer maximumAge) {
            return maximumAge(Output.of(maximumAge));
        }

        /**
         * @param mode The Mode setting enables and disables HSTS functionality within the HTTP profile. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If mode is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
         * 
         * @return builder
         * 
         */
        public Builder mode(@Nullable Output<String> mode) {
            $.mode = mode;
            return this;
        }

        /**
         * @param mode The Mode setting enables and disables HSTS functionality within the HTTP profile. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If mode is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
         * 
         * @return builder
         * 
         */
        public Builder mode(String mode) {
            return mode(Output.of(mode));
        }

        /**
         * @param preload An HSTS preload list is a list of domains built into a web browser. When you enable the Preload setting, the domain for the web site that this HTTP profile is associated with is submitted for inclusion in the browser&#39;s preload list. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If preload is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
         * 
         * @return builder
         * 
         */
        public Builder preload(@Nullable Output<String> preload) {
            $.preload = preload;
            return this;
        }

        /**
         * @param preload An HSTS preload list is a list of domains built into a web browser. When you enable the Preload setting, the domain for the web site that this HTTP profile is associated with is submitted for inclusion in the browser&#39;s preload list. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If preload is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
         * 
         * @return builder
         * 
         */
        public Builder preload(String preload) {
            return preload(Output.of(preload));
        }

        public ProfileHttpHttpStrictTransportSecurityArgs build() {
            return $;
        }
    }

}
