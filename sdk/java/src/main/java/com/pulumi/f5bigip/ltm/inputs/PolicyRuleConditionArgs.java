// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PolicyRuleConditionArgs extends com.pulumi.resources.ResourceArgs {

    public static final PolicyRuleConditionArgs Empty = new PolicyRuleConditionArgs();

    @Import(name="address")
    private @Nullable Output<Boolean> address;

    public Optional<Output<Boolean>> address() {
        return Optional.ofNullable(this.address);
    }

    @Import(name="all")
    private @Nullable Output<Boolean> all;

    public Optional<Output<Boolean>> all() {
        return Optional.ofNullable(this.all);
    }

    @Import(name="appService")
    private @Nullable Output<String> appService;

    public Optional<Output<String>> appService() {
        return Optional.ofNullable(this.appService);
    }

    @Import(name="browserType")
    private @Nullable Output<Boolean> browserType;

    public Optional<Output<Boolean>> browserType() {
        return Optional.ofNullable(this.browserType);
    }

    @Import(name="browserVersion")
    private @Nullable Output<Boolean> browserVersion;

    public Optional<Output<Boolean>> browserVersion() {
        return Optional.ofNullable(this.browserVersion);
    }

    @Import(name="caseInsensitive")
    private @Nullable Output<Boolean> caseInsensitive;

    public Optional<Output<Boolean>> caseInsensitive() {
        return Optional.ofNullable(this.caseInsensitive);
    }

    @Import(name="caseSensitive")
    private @Nullable Output<Boolean> caseSensitive;

    public Optional<Output<Boolean>> caseSensitive() {
        return Optional.ofNullable(this.caseSensitive);
    }

    @Import(name="cipher")
    private @Nullable Output<Boolean> cipher;

    public Optional<Output<Boolean>> cipher() {
        return Optional.ofNullable(this.cipher);
    }

    @Import(name="cipherBits")
    private @Nullable Output<Boolean> cipherBits;

    public Optional<Output<Boolean>> cipherBits() {
        return Optional.ofNullable(this.cipherBits);
    }

    @Import(name="clientAccepted")
    private @Nullable Output<Boolean> clientAccepted;

    public Optional<Output<Boolean>> clientAccepted() {
        return Optional.ofNullable(this.clientAccepted);
    }

    @Import(name="clientSsl")
    private @Nullable Output<Boolean> clientSsl;

    public Optional<Output<Boolean>> clientSsl() {
        return Optional.ofNullable(this.clientSsl);
    }

    @Import(name="code")
    private @Nullable Output<Boolean> code;

    public Optional<Output<Boolean>> code() {
        return Optional.ofNullable(this.code);
    }

    @Import(name="commonName")
    private @Nullable Output<Boolean> commonName;

    public Optional<Output<Boolean>> commonName() {
        return Optional.ofNullable(this.commonName);
    }

    @Import(name="contains")
    private @Nullable Output<Boolean> contains;

    public Optional<Output<Boolean>> contains() {
        return Optional.ofNullable(this.contains);
    }

    @Import(name="continent")
    private @Nullable Output<Boolean> continent;

    public Optional<Output<Boolean>> continent() {
        return Optional.ofNullable(this.continent);
    }

    @Import(name="countryCode")
    private @Nullable Output<Boolean> countryCode;

    public Optional<Output<Boolean>> countryCode() {
        return Optional.ofNullable(this.countryCode);
    }

    @Import(name="countryName")
    private @Nullable Output<Boolean> countryName;

    public Optional<Output<Boolean>> countryName() {
        return Optional.ofNullable(this.countryName);
    }

    @Import(name="cpuUsage")
    private @Nullable Output<Boolean> cpuUsage;

    public Optional<Output<Boolean>> cpuUsage() {
        return Optional.ofNullable(this.cpuUsage);
    }

    @Import(name="datagroup")
    private @Nullable Output<String> datagroup;

    public Optional<Output<String>> datagroup() {
        return Optional.ofNullable(this.datagroup);
    }

    @Import(name="deviceMake")
    private @Nullable Output<Boolean> deviceMake;

    public Optional<Output<Boolean>> deviceMake() {
        return Optional.ofNullable(this.deviceMake);
    }

    @Import(name="deviceModel")
    private @Nullable Output<Boolean> deviceModel;

    public Optional<Output<Boolean>> deviceModel() {
        return Optional.ofNullable(this.deviceModel);
    }

    @Import(name="domain")
    private @Nullable Output<Boolean> domain;

    public Optional<Output<Boolean>> domain() {
        return Optional.ofNullable(this.domain);
    }

    @Import(name="endsWith")
    private @Nullable Output<Boolean> endsWith;

    public Optional<Output<Boolean>> endsWith() {
        return Optional.ofNullable(this.endsWith);
    }

    @Import(name="equals")
    private @Nullable Output<Boolean> equals;

    public Optional<Output<Boolean>> equals_() {
        return Optional.ofNullable(this.equals);
    }

    @Import(name="exists")
    private @Nullable Output<Boolean> exists;

    public Optional<Output<Boolean>> exists() {
        return Optional.ofNullable(this.exists);
    }

    @Import(name="expiry")
    private @Nullable Output<Boolean> expiry;

    public Optional<Output<Boolean>> expiry() {
        return Optional.ofNullable(this.expiry);
    }

    @Import(name="extension")
    private @Nullable Output<Boolean> extension;

    public Optional<Output<Boolean>> extension() {
        return Optional.ofNullable(this.extension);
    }

    @Import(name="external")
    private @Nullable Output<Boolean> external;

    public Optional<Output<Boolean>> external() {
        return Optional.ofNullable(this.external);
    }

    @Import(name="geoip")
    private @Nullable Output<Boolean> geoip;

    public Optional<Output<Boolean>> geoip() {
        return Optional.ofNullable(this.geoip);
    }

    @Import(name="greater")
    private @Nullable Output<Boolean> greater;

    public Optional<Output<Boolean>> greater() {
        return Optional.ofNullable(this.greater);
    }

    @Import(name="greaterOrEqual")
    private @Nullable Output<Boolean> greaterOrEqual;

    public Optional<Output<Boolean>> greaterOrEqual() {
        return Optional.ofNullable(this.greaterOrEqual);
    }

    @Import(name="host")
    private @Nullable Output<Boolean> host;

    public Optional<Output<Boolean>> host() {
        return Optional.ofNullable(this.host);
    }

    @Import(name="httpBasicAuth")
    private @Nullable Output<Boolean> httpBasicAuth;

    public Optional<Output<Boolean>> httpBasicAuth() {
        return Optional.ofNullable(this.httpBasicAuth);
    }

    @Import(name="httpCookie")
    private @Nullable Output<Boolean> httpCookie;

    public Optional<Output<Boolean>> httpCookie() {
        return Optional.ofNullable(this.httpCookie);
    }

    @Import(name="httpHeader")
    private @Nullable Output<Boolean> httpHeader;

    public Optional<Output<Boolean>> httpHeader() {
        return Optional.ofNullable(this.httpHeader);
    }

    @Import(name="httpHost")
    private @Nullable Output<Boolean> httpHost;

    public Optional<Output<Boolean>> httpHost() {
        return Optional.ofNullable(this.httpHost);
    }

    @Import(name="httpMethod")
    private @Nullable Output<Boolean> httpMethod;

    public Optional<Output<Boolean>> httpMethod() {
        return Optional.ofNullable(this.httpMethod);
    }

    @Import(name="httpReferer")
    private @Nullable Output<Boolean> httpReferer;

    public Optional<Output<Boolean>> httpReferer() {
        return Optional.ofNullable(this.httpReferer);
    }

    @Import(name="httpSetCookie")
    private @Nullable Output<Boolean> httpSetCookie;

    public Optional<Output<Boolean>> httpSetCookie() {
        return Optional.ofNullable(this.httpSetCookie);
    }

    @Import(name="httpStatus")
    private @Nullable Output<Boolean> httpStatus;

    public Optional<Output<Boolean>> httpStatus() {
        return Optional.ofNullable(this.httpStatus);
    }

    @Import(name="httpUri")
    private @Nullable Output<Boolean> httpUri;

    public Optional<Output<Boolean>> httpUri() {
        return Optional.ofNullable(this.httpUri);
    }

    @Import(name="httpUserAgent")
    private @Nullable Output<Boolean> httpUserAgent;

    public Optional<Output<Boolean>> httpUserAgent() {
        return Optional.ofNullable(this.httpUserAgent);
    }

    @Import(name="httpVersion")
    private @Nullable Output<Boolean> httpVersion;

    public Optional<Output<Boolean>> httpVersion() {
        return Optional.ofNullable(this.httpVersion);
    }

    @Import(name="index")
    private @Nullable Output<Integer> index;

    public Optional<Output<Integer>> index() {
        return Optional.ofNullable(this.index);
    }

    @Import(name="internal")
    private @Nullable Output<Boolean> internal;

    public Optional<Output<Boolean>> internal() {
        return Optional.ofNullable(this.internal);
    }

    @Import(name="isp")
    private @Nullable Output<Boolean> isp;

    public Optional<Output<Boolean>> isp() {
        return Optional.ofNullable(this.isp);
    }

    @Import(name="last15secs")
    private @Nullable Output<Boolean> last15secs;

    public Optional<Output<Boolean>> last15secs() {
        return Optional.ofNullable(this.last15secs);
    }

    @Import(name="last1min")
    private @Nullable Output<Boolean> last1min;

    public Optional<Output<Boolean>> last1min() {
        return Optional.ofNullable(this.last1min);
    }

    @Import(name="last5mins")
    private @Nullable Output<Boolean> last5mins;

    public Optional<Output<Boolean>> last5mins() {
        return Optional.ofNullable(this.last5mins);
    }

    @Import(name="less")
    private @Nullable Output<Boolean> less;

    public Optional<Output<Boolean>> less() {
        return Optional.ofNullable(this.less);
    }

    @Import(name="lessOrEqual")
    private @Nullable Output<Boolean> lessOrEqual;

    public Optional<Output<Boolean>> lessOrEqual() {
        return Optional.ofNullable(this.lessOrEqual);
    }

    @Import(name="local")
    private @Nullable Output<Boolean> local;

    public Optional<Output<Boolean>> local() {
        return Optional.ofNullable(this.local);
    }

    @Import(name="major")
    private @Nullable Output<Boolean> major;

    public Optional<Output<Boolean>> major() {
        return Optional.ofNullable(this.major);
    }

    @Import(name="matches")
    private @Nullable Output<Boolean> matches;

    public Optional<Output<Boolean>> matches() {
        return Optional.ofNullable(this.matches);
    }

    @Import(name="minor")
    private @Nullable Output<Boolean> minor;

    public Optional<Output<Boolean>> minor() {
        return Optional.ofNullable(this.minor);
    }

    @Import(name="missing")
    private @Nullable Output<Boolean> missing;

    public Optional<Output<Boolean>> missing() {
        return Optional.ofNullable(this.missing);
    }

    @Import(name="mss")
    private @Nullable Output<Boolean> mss;

    public Optional<Output<Boolean>> mss() {
        return Optional.ofNullable(this.mss);
    }

    @Import(name="not")
    private @Nullable Output<Boolean> not;

    public Optional<Output<Boolean>> not() {
        return Optional.ofNullable(this.not);
    }

    @Import(name="org")
    private @Nullable Output<Boolean> org;

    public Optional<Output<Boolean>> org() {
        return Optional.ofNullable(this.org);
    }

    @Import(name="password")
    private @Nullable Output<Boolean> password;

    public Optional<Output<Boolean>> password() {
        return Optional.ofNullable(this.password);
    }

    @Import(name="path")
    private @Nullable Output<Boolean> path;

    public Optional<Output<Boolean>> path() {
        return Optional.ofNullable(this.path);
    }

    @Import(name="pathSegment")
    private @Nullable Output<Boolean> pathSegment;

    public Optional<Output<Boolean>> pathSegment() {
        return Optional.ofNullable(this.pathSegment);
    }

    @Import(name="port")
    private @Nullable Output<Boolean> port;

    public Optional<Output<Boolean>> port() {
        return Optional.ofNullable(this.port);
    }

    @Import(name="present")
    private @Nullable Output<Boolean> present;

    public Optional<Output<Boolean>> present() {
        return Optional.ofNullable(this.present);
    }

    @Import(name="protocol")
    private @Nullable Output<Boolean> protocol;

    public Optional<Output<Boolean>> protocol() {
        return Optional.ofNullable(this.protocol);
    }

    @Import(name="queryParameter")
    private @Nullable Output<Boolean> queryParameter;

    public Optional<Output<Boolean>> queryParameter() {
        return Optional.ofNullable(this.queryParameter);
    }

    @Import(name="queryString")
    private @Nullable Output<Boolean> queryString;

    public Optional<Output<Boolean>> queryString() {
        return Optional.ofNullable(this.queryString);
    }

    @Import(name="regionCode")
    private @Nullable Output<Boolean> regionCode;

    public Optional<Output<Boolean>> regionCode() {
        return Optional.ofNullable(this.regionCode);
    }

    @Import(name="regionName")
    private @Nullable Output<Boolean> regionName;

    public Optional<Output<Boolean>> regionName() {
        return Optional.ofNullable(this.regionName);
    }

    @Import(name="remote")
    private @Nullable Output<Boolean> remote;

    public Optional<Output<Boolean>> remote() {
        return Optional.ofNullable(this.remote);
    }

    @Import(name="request")
    private @Nullable Output<Boolean> request;

    public Optional<Output<Boolean>> request() {
        return Optional.ofNullable(this.request);
    }

    @Import(name="response")
    private @Nullable Output<Boolean> response;

    public Optional<Output<Boolean>> response() {
        return Optional.ofNullable(this.response);
    }

    @Import(name="routeDomain")
    private @Nullable Output<Boolean> routeDomain;

    public Optional<Output<Boolean>> routeDomain() {
        return Optional.ofNullable(this.routeDomain);
    }

    @Import(name="rtt")
    private @Nullable Output<Boolean> rtt;

    public Optional<Output<Boolean>> rtt() {
        return Optional.ofNullable(this.rtt);
    }

    @Import(name="scheme")
    private @Nullable Output<Boolean> scheme;

    public Optional<Output<Boolean>> scheme() {
        return Optional.ofNullable(this.scheme);
    }

    @Import(name="serverName")
    private @Nullable Output<Boolean> serverName;

    public Optional<Output<Boolean>> serverName() {
        return Optional.ofNullable(this.serverName);
    }

    @Import(name="sslCert")
    private @Nullable Output<Boolean> sslCert;

    public Optional<Output<Boolean>> sslCert() {
        return Optional.ofNullable(this.sslCert);
    }

    @Import(name="sslClientHello")
    private @Nullable Output<Boolean> sslClientHello;

    public Optional<Output<Boolean>> sslClientHello() {
        return Optional.ofNullable(this.sslClientHello);
    }

    @Import(name="sslExtension")
    private @Nullable Output<Boolean> sslExtension;

    public Optional<Output<Boolean>> sslExtension() {
        return Optional.ofNullable(this.sslExtension);
    }

    @Import(name="sslServerHandshake")
    private @Nullable Output<Boolean> sslServerHandshake;

    public Optional<Output<Boolean>> sslServerHandshake() {
        return Optional.ofNullable(this.sslServerHandshake);
    }

    @Import(name="sslServerHello")
    private @Nullable Output<Boolean> sslServerHello;

    public Optional<Output<Boolean>> sslServerHello() {
        return Optional.ofNullable(this.sslServerHello);
    }

    @Import(name="startsWith")
    private @Nullable Output<Boolean> startsWith;

    public Optional<Output<Boolean>> startsWith() {
        return Optional.ofNullable(this.startsWith);
    }

    @Import(name="tcp")
    private @Nullable Output<Boolean> tcp;

    public Optional<Output<Boolean>> tcp() {
        return Optional.ofNullable(this.tcp);
    }

    @Import(name="text")
    private @Nullable Output<Boolean> text;

    public Optional<Output<Boolean>> text() {
        return Optional.ofNullable(this.text);
    }

    @Import(name="tmName")
    private @Nullable Output<String> tmName;

    public Optional<Output<String>> tmName() {
        return Optional.ofNullable(this.tmName);
    }

    @Import(name="unnamedQueryParameter")
    private @Nullable Output<Boolean> unnamedQueryParameter;

    public Optional<Output<Boolean>> unnamedQueryParameter() {
        return Optional.ofNullable(this.unnamedQueryParameter);
    }

    @Import(name="userAgentToken")
    private @Nullable Output<Boolean> userAgentToken;

    public Optional<Output<Boolean>> userAgentToken() {
        return Optional.ofNullable(this.userAgentToken);
    }

    @Import(name="username")
    private @Nullable Output<Boolean> username;

    public Optional<Output<Boolean>> username() {
        return Optional.ofNullable(this.username);
    }

    @Import(name="value")
    private @Nullable Output<Boolean> value;

    public Optional<Output<Boolean>> value() {
        return Optional.ofNullable(this.value);
    }

    @Import(name="values")
    private @Nullable Output<List<String>> values;

    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    @Import(name="version")
    private @Nullable Output<Boolean> version;

    public Optional<Output<Boolean>> version() {
        return Optional.ofNullable(this.version);
    }

    @Import(name="vlan")
    private @Nullable Output<Boolean> vlan;

    public Optional<Output<Boolean>> vlan() {
        return Optional.ofNullable(this.vlan);
    }

    @Import(name="vlanId")
    private @Nullable Output<Boolean> vlanId;

    public Optional<Output<Boolean>> vlanId() {
        return Optional.ofNullable(this.vlanId);
    }

    private PolicyRuleConditionArgs() {}

    private PolicyRuleConditionArgs(PolicyRuleConditionArgs $) {
        this.address = $.address;
        this.all = $.all;
        this.appService = $.appService;
        this.browserType = $.browserType;
        this.browserVersion = $.browserVersion;
        this.caseInsensitive = $.caseInsensitive;
        this.caseSensitive = $.caseSensitive;
        this.cipher = $.cipher;
        this.cipherBits = $.cipherBits;
        this.clientAccepted = $.clientAccepted;
        this.clientSsl = $.clientSsl;
        this.code = $.code;
        this.commonName = $.commonName;
        this.contains = $.contains;
        this.continent = $.continent;
        this.countryCode = $.countryCode;
        this.countryName = $.countryName;
        this.cpuUsage = $.cpuUsage;
        this.datagroup = $.datagroup;
        this.deviceMake = $.deviceMake;
        this.deviceModel = $.deviceModel;
        this.domain = $.domain;
        this.endsWith = $.endsWith;
        this.equals = $.equals;
        this.exists = $.exists;
        this.expiry = $.expiry;
        this.extension = $.extension;
        this.external = $.external;
        this.geoip = $.geoip;
        this.greater = $.greater;
        this.greaterOrEqual = $.greaterOrEqual;
        this.host = $.host;
        this.httpBasicAuth = $.httpBasicAuth;
        this.httpCookie = $.httpCookie;
        this.httpHeader = $.httpHeader;
        this.httpHost = $.httpHost;
        this.httpMethod = $.httpMethod;
        this.httpReferer = $.httpReferer;
        this.httpSetCookie = $.httpSetCookie;
        this.httpStatus = $.httpStatus;
        this.httpUri = $.httpUri;
        this.httpUserAgent = $.httpUserAgent;
        this.httpVersion = $.httpVersion;
        this.index = $.index;
        this.internal = $.internal;
        this.isp = $.isp;
        this.last15secs = $.last15secs;
        this.last1min = $.last1min;
        this.last5mins = $.last5mins;
        this.less = $.less;
        this.lessOrEqual = $.lessOrEqual;
        this.local = $.local;
        this.major = $.major;
        this.matches = $.matches;
        this.minor = $.minor;
        this.missing = $.missing;
        this.mss = $.mss;
        this.not = $.not;
        this.org = $.org;
        this.password = $.password;
        this.path = $.path;
        this.pathSegment = $.pathSegment;
        this.port = $.port;
        this.present = $.present;
        this.protocol = $.protocol;
        this.queryParameter = $.queryParameter;
        this.queryString = $.queryString;
        this.regionCode = $.regionCode;
        this.regionName = $.regionName;
        this.remote = $.remote;
        this.request = $.request;
        this.response = $.response;
        this.routeDomain = $.routeDomain;
        this.rtt = $.rtt;
        this.scheme = $.scheme;
        this.serverName = $.serverName;
        this.sslCert = $.sslCert;
        this.sslClientHello = $.sslClientHello;
        this.sslExtension = $.sslExtension;
        this.sslServerHandshake = $.sslServerHandshake;
        this.sslServerHello = $.sslServerHello;
        this.startsWith = $.startsWith;
        this.tcp = $.tcp;
        this.text = $.text;
        this.tmName = $.tmName;
        this.unnamedQueryParameter = $.unnamedQueryParameter;
        this.userAgentToken = $.userAgentToken;
        this.username = $.username;
        this.value = $.value;
        this.values = $.values;
        this.version = $.version;
        this.vlan = $.vlan;
        this.vlanId = $.vlanId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PolicyRuleConditionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PolicyRuleConditionArgs $;

        public Builder() {
            $ = new PolicyRuleConditionArgs();
        }

        public Builder(PolicyRuleConditionArgs defaults) {
            $ = new PolicyRuleConditionArgs(Objects.requireNonNull(defaults));
        }

        public Builder address(@Nullable Output<Boolean> address) {
            $.address = address;
            return this;
        }

        public Builder address(Boolean address) {
            return address(Output.of(address));
        }

        public Builder all(@Nullable Output<Boolean> all) {
            $.all = all;
            return this;
        }

        public Builder all(Boolean all) {
            return all(Output.of(all));
        }

        public Builder appService(@Nullable Output<String> appService) {
            $.appService = appService;
            return this;
        }

        public Builder appService(String appService) {
            return appService(Output.of(appService));
        }

        public Builder browserType(@Nullable Output<Boolean> browserType) {
            $.browserType = browserType;
            return this;
        }

        public Builder browserType(Boolean browserType) {
            return browserType(Output.of(browserType));
        }

        public Builder browserVersion(@Nullable Output<Boolean> browserVersion) {
            $.browserVersion = browserVersion;
            return this;
        }

        public Builder browserVersion(Boolean browserVersion) {
            return browserVersion(Output.of(browserVersion));
        }

        public Builder caseInsensitive(@Nullable Output<Boolean> caseInsensitive) {
            $.caseInsensitive = caseInsensitive;
            return this;
        }

        public Builder caseInsensitive(Boolean caseInsensitive) {
            return caseInsensitive(Output.of(caseInsensitive));
        }

        public Builder caseSensitive(@Nullable Output<Boolean> caseSensitive) {
            $.caseSensitive = caseSensitive;
            return this;
        }

        public Builder caseSensitive(Boolean caseSensitive) {
            return caseSensitive(Output.of(caseSensitive));
        }

        public Builder cipher(@Nullable Output<Boolean> cipher) {
            $.cipher = cipher;
            return this;
        }

        public Builder cipher(Boolean cipher) {
            return cipher(Output.of(cipher));
        }

        public Builder cipherBits(@Nullable Output<Boolean> cipherBits) {
            $.cipherBits = cipherBits;
            return this;
        }

        public Builder cipherBits(Boolean cipherBits) {
            return cipherBits(Output.of(cipherBits));
        }

        public Builder clientAccepted(@Nullable Output<Boolean> clientAccepted) {
            $.clientAccepted = clientAccepted;
            return this;
        }

        public Builder clientAccepted(Boolean clientAccepted) {
            return clientAccepted(Output.of(clientAccepted));
        }

        public Builder clientSsl(@Nullable Output<Boolean> clientSsl) {
            $.clientSsl = clientSsl;
            return this;
        }

        public Builder clientSsl(Boolean clientSsl) {
            return clientSsl(Output.of(clientSsl));
        }

        public Builder code(@Nullable Output<Boolean> code) {
            $.code = code;
            return this;
        }

        public Builder code(Boolean code) {
            return code(Output.of(code));
        }

        public Builder commonName(@Nullable Output<Boolean> commonName) {
            $.commonName = commonName;
            return this;
        }

        public Builder commonName(Boolean commonName) {
            return commonName(Output.of(commonName));
        }

        public Builder contains(@Nullable Output<Boolean> contains) {
            $.contains = contains;
            return this;
        }

        public Builder contains(Boolean contains) {
            return contains(Output.of(contains));
        }

        public Builder continent(@Nullable Output<Boolean> continent) {
            $.continent = continent;
            return this;
        }

        public Builder continent(Boolean continent) {
            return continent(Output.of(continent));
        }

        public Builder countryCode(@Nullable Output<Boolean> countryCode) {
            $.countryCode = countryCode;
            return this;
        }

        public Builder countryCode(Boolean countryCode) {
            return countryCode(Output.of(countryCode));
        }

        public Builder countryName(@Nullable Output<Boolean> countryName) {
            $.countryName = countryName;
            return this;
        }

        public Builder countryName(Boolean countryName) {
            return countryName(Output.of(countryName));
        }

        public Builder cpuUsage(@Nullable Output<Boolean> cpuUsage) {
            $.cpuUsage = cpuUsage;
            return this;
        }

        public Builder cpuUsage(Boolean cpuUsage) {
            return cpuUsage(Output.of(cpuUsage));
        }

        public Builder datagroup(@Nullable Output<String> datagroup) {
            $.datagroup = datagroup;
            return this;
        }

        public Builder datagroup(String datagroup) {
            return datagroup(Output.of(datagroup));
        }

        public Builder deviceMake(@Nullable Output<Boolean> deviceMake) {
            $.deviceMake = deviceMake;
            return this;
        }

        public Builder deviceMake(Boolean deviceMake) {
            return deviceMake(Output.of(deviceMake));
        }

        public Builder deviceModel(@Nullable Output<Boolean> deviceModel) {
            $.deviceModel = deviceModel;
            return this;
        }

        public Builder deviceModel(Boolean deviceModel) {
            return deviceModel(Output.of(deviceModel));
        }

        public Builder domain(@Nullable Output<Boolean> domain) {
            $.domain = domain;
            return this;
        }

        public Builder domain(Boolean domain) {
            return domain(Output.of(domain));
        }

        public Builder endsWith(@Nullable Output<Boolean> endsWith) {
            $.endsWith = endsWith;
            return this;
        }

        public Builder endsWith(Boolean endsWith) {
            return endsWith(Output.of(endsWith));
        }

        public Builder equals_(@Nullable Output<Boolean> equals) {
            $.equals = equals;
            return this;
        }

        public Builder equals_(Boolean equals) {
            return equals_(Output.of(equals));
        }

        public Builder exists(@Nullable Output<Boolean> exists) {
            $.exists = exists;
            return this;
        }

        public Builder exists(Boolean exists) {
            return exists(Output.of(exists));
        }

        public Builder expiry(@Nullable Output<Boolean> expiry) {
            $.expiry = expiry;
            return this;
        }

        public Builder expiry(Boolean expiry) {
            return expiry(Output.of(expiry));
        }

        public Builder extension(@Nullable Output<Boolean> extension) {
            $.extension = extension;
            return this;
        }

        public Builder extension(Boolean extension) {
            return extension(Output.of(extension));
        }

        public Builder external(@Nullable Output<Boolean> external) {
            $.external = external;
            return this;
        }

        public Builder external(Boolean external) {
            return external(Output.of(external));
        }

        public Builder geoip(@Nullable Output<Boolean> geoip) {
            $.geoip = geoip;
            return this;
        }

        public Builder geoip(Boolean geoip) {
            return geoip(Output.of(geoip));
        }

        public Builder greater(@Nullable Output<Boolean> greater) {
            $.greater = greater;
            return this;
        }

        public Builder greater(Boolean greater) {
            return greater(Output.of(greater));
        }

        public Builder greaterOrEqual(@Nullable Output<Boolean> greaterOrEqual) {
            $.greaterOrEqual = greaterOrEqual;
            return this;
        }

        public Builder greaterOrEqual(Boolean greaterOrEqual) {
            return greaterOrEqual(Output.of(greaterOrEqual));
        }

        public Builder host(@Nullable Output<Boolean> host) {
            $.host = host;
            return this;
        }

        public Builder host(Boolean host) {
            return host(Output.of(host));
        }

        public Builder httpBasicAuth(@Nullable Output<Boolean> httpBasicAuth) {
            $.httpBasicAuth = httpBasicAuth;
            return this;
        }

        public Builder httpBasicAuth(Boolean httpBasicAuth) {
            return httpBasicAuth(Output.of(httpBasicAuth));
        }

        public Builder httpCookie(@Nullable Output<Boolean> httpCookie) {
            $.httpCookie = httpCookie;
            return this;
        }

        public Builder httpCookie(Boolean httpCookie) {
            return httpCookie(Output.of(httpCookie));
        }

        public Builder httpHeader(@Nullable Output<Boolean> httpHeader) {
            $.httpHeader = httpHeader;
            return this;
        }

        public Builder httpHeader(Boolean httpHeader) {
            return httpHeader(Output.of(httpHeader));
        }

        public Builder httpHost(@Nullable Output<Boolean> httpHost) {
            $.httpHost = httpHost;
            return this;
        }

        public Builder httpHost(Boolean httpHost) {
            return httpHost(Output.of(httpHost));
        }

        public Builder httpMethod(@Nullable Output<Boolean> httpMethod) {
            $.httpMethod = httpMethod;
            return this;
        }

        public Builder httpMethod(Boolean httpMethod) {
            return httpMethod(Output.of(httpMethod));
        }

        public Builder httpReferer(@Nullable Output<Boolean> httpReferer) {
            $.httpReferer = httpReferer;
            return this;
        }

        public Builder httpReferer(Boolean httpReferer) {
            return httpReferer(Output.of(httpReferer));
        }

        public Builder httpSetCookie(@Nullable Output<Boolean> httpSetCookie) {
            $.httpSetCookie = httpSetCookie;
            return this;
        }

        public Builder httpSetCookie(Boolean httpSetCookie) {
            return httpSetCookie(Output.of(httpSetCookie));
        }

        public Builder httpStatus(@Nullable Output<Boolean> httpStatus) {
            $.httpStatus = httpStatus;
            return this;
        }

        public Builder httpStatus(Boolean httpStatus) {
            return httpStatus(Output.of(httpStatus));
        }

        public Builder httpUri(@Nullable Output<Boolean> httpUri) {
            $.httpUri = httpUri;
            return this;
        }

        public Builder httpUri(Boolean httpUri) {
            return httpUri(Output.of(httpUri));
        }

        public Builder httpUserAgent(@Nullable Output<Boolean> httpUserAgent) {
            $.httpUserAgent = httpUserAgent;
            return this;
        }

        public Builder httpUserAgent(Boolean httpUserAgent) {
            return httpUserAgent(Output.of(httpUserAgent));
        }

        public Builder httpVersion(@Nullable Output<Boolean> httpVersion) {
            $.httpVersion = httpVersion;
            return this;
        }

        public Builder httpVersion(Boolean httpVersion) {
            return httpVersion(Output.of(httpVersion));
        }

        public Builder index(@Nullable Output<Integer> index) {
            $.index = index;
            return this;
        }

        public Builder index(Integer index) {
            return index(Output.of(index));
        }

        public Builder internal(@Nullable Output<Boolean> internal) {
            $.internal = internal;
            return this;
        }

        public Builder internal(Boolean internal) {
            return internal(Output.of(internal));
        }

        public Builder isp(@Nullable Output<Boolean> isp) {
            $.isp = isp;
            return this;
        }

        public Builder isp(Boolean isp) {
            return isp(Output.of(isp));
        }

        public Builder last15secs(@Nullable Output<Boolean> last15secs) {
            $.last15secs = last15secs;
            return this;
        }

        public Builder last15secs(Boolean last15secs) {
            return last15secs(Output.of(last15secs));
        }

        public Builder last1min(@Nullable Output<Boolean> last1min) {
            $.last1min = last1min;
            return this;
        }

        public Builder last1min(Boolean last1min) {
            return last1min(Output.of(last1min));
        }

        public Builder last5mins(@Nullable Output<Boolean> last5mins) {
            $.last5mins = last5mins;
            return this;
        }

        public Builder last5mins(Boolean last5mins) {
            return last5mins(Output.of(last5mins));
        }

        public Builder less(@Nullable Output<Boolean> less) {
            $.less = less;
            return this;
        }

        public Builder less(Boolean less) {
            return less(Output.of(less));
        }

        public Builder lessOrEqual(@Nullable Output<Boolean> lessOrEqual) {
            $.lessOrEqual = lessOrEqual;
            return this;
        }

        public Builder lessOrEqual(Boolean lessOrEqual) {
            return lessOrEqual(Output.of(lessOrEqual));
        }

        public Builder local(@Nullable Output<Boolean> local) {
            $.local = local;
            return this;
        }

        public Builder local(Boolean local) {
            return local(Output.of(local));
        }

        public Builder major(@Nullable Output<Boolean> major) {
            $.major = major;
            return this;
        }

        public Builder major(Boolean major) {
            return major(Output.of(major));
        }

        public Builder matches(@Nullable Output<Boolean> matches) {
            $.matches = matches;
            return this;
        }

        public Builder matches(Boolean matches) {
            return matches(Output.of(matches));
        }

        public Builder minor(@Nullable Output<Boolean> minor) {
            $.minor = minor;
            return this;
        }

        public Builder minor(Boolean minor) {
            return minor(Output.of(minor));
        }

        public Builder missing(@Nullable Output<Boolean> missing) {
            $.missing = missing;
            return this;
        }

        public Builder missing(Boolean missing) {
            return missing(Output.of(missing));
        }

        public Builder mss(@Nullable Output<Boolean> mss) {
            $.mss = mss;
            return this;
        }

        public Builder mss(Boolean mss) {
            return mss(Output.of(mss));
        }

        public Builder not(@Nullable Output<Boolean> not) {
            $.not = not;
            return this;
        }

        public Builder not(Boolean not) {
            return not(Output.of(not));
        }

        public Builder org(@Nullable Output<Boolean> org) {
            $.org = org;
            return this;
        }

        public Builder org(Boolean org) {
            return org(Output.of(org));
        }

        public Builder password(@Nullable Output<Boolean> password) {
            $.password = password;
            return this;
        }

        public Builder password(Boolean password) {
            return password(Output.of(password));
        }

        public Builder path(@Nullable Output<Boolean> path) {
            $.path = path;
            return this;
        }

        public Builder path(Boolean path) {
            return path(Output.of(path));
        }

        public Builder pathSegment(@Nullable Output<Boolean> pathSegment) {
            $.pathSegment = pathSegment;
            return this;
        }

        public Builder pathSegment(Boolean pathSegment) {
            return pathSegment(Output.of(pathSegment));
        }

        public Builder port(@Nullable Output<Boolean> port) {
            $.port = port;
            return this;
        }

        public Builder port(Boolean port) {
            return port(Output.of(port));
        }

        public Builder present(@Nullable Output<Boolean> present) {
            $.present = present;
            return this;
        }

        public Builder present(Boolean present) {
            return present(Output.of(present));
        }

        public Builder protocol(@Nullable Output<Boolean> protocol) {
            $.protocol = protocol;
            return this;
        }

        public Builder protocol(Boolean protocol) {
            return protocol(Output.of(protocol));
        }

        public Builder queryParameter(@Nullable Output<Boolean> queryParameter) {
            $.queryParameter = queryParameter;
            return this;
        }

        public Builder queryParameter(Boolean queryParameter) {
            return queryParameter(Output.of(queryParameter));
        }

        public Builder queryString(@Nullable Output<Boolean> queryString) {
            $.queryString = queryString;
            return this;
        }

        public Builder queryString(Boolean queryString) {
            return queryString(Output.of(queryString));
        }

        public Builder regionCode(@Nullable Output<Boolean> regionCode) {
            $.regionCode = regionCode;
            return this;
        }

        public Builder regionCode(Boolean regionCode) {
            return regionCode(Output.of(regionCode));
        }

        public Builder regionName(@Nullable Output<Boolean> regionName) {
            $.regionName = regionName;
            return this;
        }

        public Builder regionName(Boolean regionName) {
            return regionName(Output.of(regionName));
        }

        public Builder remote(@Nullable Output<Boolean> remote) {
            $.remote = remote;
            return this;
        }

        public Builder remote(Boolean remote) {
            return remote(Output.of(remote));
        }

        public Builder request(@Nullable Output<Boolean> request) {
            $.request = request;
            return this;
        }

        public Builder request(Boolean request) {
            return request(Output.of(request));
        }

        public Builder response(@Nullable Output<Boolean> response) {
            $.response = response;
            return this;
        }

        public Builder response(Boolean response) {
            return response(Output.of(response));
        }

        public Builder routeDomain(@Nullable Output<Boolean> routeDomain) {
            $.routeDomain = routeDomain;
            return this;
        }

        public Builder routeDomain(Boolean routeDomain) {
            return routeDomain(Output.of(routeDomain));
        }

        public Builder rtt(@Nullable Output<Boolean> rtt) {
            $.rtt = rtt;
            return this;
        }

        public Builder rtt(Boolean rtt) {
            return rtt(Output.of(rtt));
        }

        public Builder scheme(@Nullable Output<Boolean> scheme) {
            $.scheme = scheme;
            return this;
        }

        public Builder scheme(Boolean scheme) {
            return scheme(Output.of(scheme));
        }

        public Builder serverName(@Nullable Output<Boolean> serverName) {
            $.serverName = serverName;
            return this;
        }

        public Builder serverName(Boolean serverName) {
            return serverName(Output.of(serverName));
        }

        public Builder sslCert(@Nullable Output<Boolean> sslCert) {
            $.sslCert = sslCert;
            return this;
        }

        public Builder sslCert(Boolean sslCert) {
            return sslCert(Output.of(sslCert));
        }

        public Builder sslClientHello(@Nullable Output<Boolean> sslClientHello) {
            $.sslClientHello = sslClientHello;
            return this;
        }

        public Builder sslClientHello(Boolean sslClientHello) {
            return sslClientHello(Output.of(sslClientHello));
        }

        public Builder sslExtension(@Nullable Output<Boolean> sslExtension) {
            $.sslExtension = sslExtension;
            return this;
        }

        public Builder sslExtension(Boolean sslExtension) {
            return sslExtension(Output.of(sslExtension));
        }

        public Builder sslServerHandshake(@Nullable Output<Boolean> sslServerHandshake) {
            $.sslServerHandshake = sslServerHandshake;
            return this;
        }

        public Builder sslServerHandshake(Boolean sslServerHandshake) {
            return sslServerHandshake(Output.of(sslServerHandshake));
        }

        public Builder sslServerHello(@Nullable Output<Boolean> sslServerHello) {
            $.sslServerHello = sslServerHello;
            return this;
        }

        public Builder sslServerHello(Boolean sslServerHello) {
            return sslServerHello(Output.of(sslServerHello));
        }

        public Builder startsWith(@Nullable Output<Boolean> startsWith) {
            $.startsWith = startsWith;
            return this;
        }

        public Builder startsWith(Boolean startsWith) {
            return startsWith(Output.of(startsWith));
        }

        public Builder tcp(@Nullable Output<Boolean> tcp) {
            $.tcp = tcp;
            return this;
        }

        public Builder tcp(Boolean tcp) {
            return tcp(Output.of(tcp));
        }

        public Builder text(@Nullable Output<Boolean> text) {
            $.text = text;
            return this;
        }

        public Builder text(Boolean text) {
            return text(Output.of(text));
        }

        public Builder tmName(@Nullable Output<String> tmName) {
            $.tmName = tmName;
            return this;
        }

        public Builder tmName(String tmName) {
            return tmName(Output.of(tmName));
        }

        public Builder unnamedQueryParameter(@Nullable Output<Boolean> unnamedQueryParameter) {
            $.unnamedQueryParameter = unnamedQueryParameter;
            return this;
        }

        public Builder unnamedQueryParameter(Boolean unnamedQueryParameter) {
            return unnamedQueryParameter(Output.of(unnamedQueryParameter));
        }

        public Builder userAgentToken(@Nullable Output<Boolean> userAgentToken) {
            $.userAgentToken = userAgentToken;
            return this;
        }

        public Builder userAgentToken(Boolean userAgentToken) {
            return userAgentToken(Output.of(userAgentToken));
        }

        public Builder username(@Nullable Output<Boolean> username) {
            $.username = username;
            return this;
        }

        public Builder username(Boolean username) {
            return username(Output.of(username));
        }

        public Builder value(@Nullable Output<Boolean> value) {
            $.value = value;
            return this;
        }

        public Builder value(Boolean value) {
            return value(Output.of(value));
        }

        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        public Builder values(String... values) {
            return values(List.of(values));
        }

        public Builder version(@Nullable Output<Boolean> version) {
            $.version = version;
            return this;
        }

        public Builder version(Boolean version) {
            return version(Output.of(version));
        }

        public Builder vlan(@Nullable Output<Boolean> vlan) {
            $.vlan = vlan;
            return this;
        }

        public Builder vlan(Boolean vlan) {
            return vlan(Output.of(vlan));
        }

        public Builder vlanId(@Nullable Output<Boolean> vlanId) {
            $.vlanId = vlanId;
            return this;
        }

        public Builder vlanId(Boolean vlanId) {
            return vlanId(Output.of(vlanId));
        }

        public PolicyRuleConditionArgs build() {
            return $;
        }
    }

}
