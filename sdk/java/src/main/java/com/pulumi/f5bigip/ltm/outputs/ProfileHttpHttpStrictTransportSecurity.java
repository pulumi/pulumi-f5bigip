// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ProfileHttpHttpStrictTransportSecurity {
    /**
     * @return The Include Subdomains setting applies the HSTS policy to the HSTS host and its subdomains. The default is &#34;enabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If include_subdomains is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;enabled&#34; explicitly.
     * 
     */
    private @Nullable String includeSubdomains;
    /**
     * @return The Maximum Age value specifies the length of time, in seconds, that HSTS functionality requests that clients only use HTTPS to connect to the current host and any subdomains of the current host&#39;s domain name.  The default is 16070400 seconds. If no value is specified during Create, then default value will be assigned by BigIp. If maximum_age is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value , we need to pass 16070400 explicitly.
     * 
     */
    private @Nullable Integer maximumAge;
    /**
     * @return The Mode setting enables and disables HSTS functionality within the HTTP profile. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If mode is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    private @Nullable String mode;
    /**
     * @return An HSTS preload list is a list of domains built into a web browser. When you enable the Preload setting, the domain for the web site that this HTTP profile is associated with is submitted for inclusion in the browser&#39;s preload list. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If preload is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    private @Nullable String preload;

    private ProfileHttpHttpStrictTransportSecurity() {}
    /**
     * @return The Include Subdomains setting applies the HSTS policy to the HSTS host and its subdomains. The default is &#34;enabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If include_subdomains is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;enabled&#34; explicitly.
     * 
     */
    public Optional<String> includeSubdomains() {
        return Optional.ofNullable(this.includeSubdomains);
    }
    /**
     * @return The Maximum Age value specifies the length of time, in seconds, that HSTS functionality requests that clients only use HTTPS to connect to the current host and any subdomains of the current host&#39;s domain name.  The default is 16070400 seconds. If no value is specified during Create, then default value will be assigned by BigIp. If maximum_age is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value , we need to pass 16070400 explicitly.
     * 
     */
    public Optional<Integer> maximumAge() {
        return Optional.ofNullable(this.maximumAge);
    }
    /**
     * @return The Mode setting enables and disables HSTS functionality within the HTTP profile. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If mode is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    public Optional<String> mode() {
        return Optional.ofNullable(this.mode);
    }
    /**
     * @return An HSTS preload list is a list of domains built into a web browser. When you enable the Preload setting, the domain for the web site that this HTTP profile is associated with is submitted for inclusion in the browser&#39;s preload list. The default is &#34;disabled&#34;. If no string is specified during Create, then default value will be assigned by BigIp. If preload is commented (or not passed) during the update call, then no changes would be applied and previous value will persist. In order to put default value, we need to pass &#34;disabled&#34; explicitly.
     * 
     */
    public Optional<String> preload() {
        return Optional.ofNullable(this.preload);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ProfileHttpHttpStrictTransportSecurity defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String includeSubdomains;
        private @Nullable Integer maximumAge;
        private @Nullable String mode;
        private @Nullable String preload;
        public Builder() {}
        public Builder(ProfileHttpHttpStrictTransportSecurity defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.includeSubdomains = defaults.includeSubdomains;
    	      this.maximumAge = defaults.maximumAge;
    	      this.mode = defaults.mode;
    	      this.preload = defaults.preload;
        }

        @CustomType.Setter
        public Builder includeSubdomains(@Nullable String includeSubdomains) {
            this.includeSubdomains = includeSubdomains;
            return this;
        }
        @CustomType.Setter
        public Builder maximumAge(@Nullable Integer maximumAge) {
            this.maximumAge = maximumAge;
            return this;
        }
        @CustomType.Setter
        public Builder mode(@Nullable String mode) {
            this.mode = mode;
            return this;
        }
        @CustomType.Setter
        public Builder preload(@Nullable String preload) {
            this.preload = preload;
            return this;
        }
        public ProfileHttpHttpStrictTransportSecurity build() {
            final var _resultValue = new ProfileHttpHttpStrictTransportSecurity();
            _resultValue.includeSubdomains = includeSubdomains;
            _resultValue.maximumAge = maximumAge;
            _resultValue.mode = mode;
            _resultValue.preload = preload;
            return _resultValue;
        }
    }
}
