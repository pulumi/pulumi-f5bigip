// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetAs3DeviceInformationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetAs3DeviceInformationArgs Empty = new GetAs3DeviceInformationArgs();

    @Import(name="applications")
    private @Nullable Output<List<String>> applications;

    public Optional<Output<List<String>>> applications() {
        return Optional.ofNullable(this.applications);
    }

    @Import(name="tenant", required=true)
    private Output<String> tenant;

    public Output<String> tenant() {
        return this.tenant;
    }

    private GetAs3DeviceInformationArgs() {}

    private GetAs3DeviceInformationArgs(GetAs3DeviceInformationArgs $) {
        this.applications = $.applications;
        this.tenant = $.tenant;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAs3DeviceInformationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAs3DeviceInformationArgs $;

        public Builder() {
            $ = new GetAs3DeviceInformationArgs();
        }

        public Builder(GetAs3DeviceInformationArgs defaults) {
            $ = new GetAs3DeviceInformationArgs(Objects.requireNonNull(defaults));
        }

        public Builder applications(@Nullable Output<List<String>> applications) {
            $.applications = applications;
            return this;
        }

        public Builder applications(List<String> applications) {
            return applications(Output.of(applications));
        }

        public Builder applications(String... applications) {
            return applications(List.of(applications));
        }

        public Builder tenant(Output<String> tenant) {
            $.tenant = tenant;
            return this;
        }

        public Builder tenant(String tenant) {
            return tenant(Output.of(tenant));
        }

        public GetAs3DeviceInformationArgs build() {
            if ($.tenant == null) {
                throw new MissingRequiredPropertyException("GetAs3DeviceInformationArgs", "tenant");
            }
            return $;
        }
    }

}
