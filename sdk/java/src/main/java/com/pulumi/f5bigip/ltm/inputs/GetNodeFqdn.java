// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetNodeFqdn extends com.pulumi.resources.InvokeArgs {

    public static final GetNodeFqdn Empty = new GetNodeFqdn();

    /**
     * The FQDN node&#39;s address family.
     * 
     */
    @Import(name="addressFamily")
    private @Nullable String addressFamily;

    /**
     * @return The FQDN node&#39;s address family.
     * 
     */
    public Optional<String> addressFamily() {
        return Optional.ofNullable(this.addressFamily);
    }

    /**
     * Specifies if the node should scale to the IP address set returned by DNS.
     * 
     */
    @Import(name="autopopulate", required=true)
    private String autopopulate;

    /**
     * @return Specifies if the node should scale to the IP address set returned by DNS.
     * 
     */
    public String autopopulate() {
        return this.autopopulate;
    }

    /**
     * The number of attempts to resolve a domain name.
     * 
     */
    @Import(name="downinterval", required=true)
    private Integer downinterval;

    /**
     * @return The number of attempts to resolve a domain name.
     * 
     */
    public Integer downinterval() {
        return this.downinterval;
    }

    /**
     * The amount of time before sending the next DNS query.
     * 
     */
    @Import(name="interval", required=true)
    private String interval;

    /**
     * @return The amount of time before sending the next DNS query.
     * 
     */
    public String interval() {
        return this.interval;
    }

    /**
     * Name of the node.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the node.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    private GetNodeFqdn() {}

    private GetNodeFqdn(GetNodeFqdn $) {
        this.addressFamily = $.addressFamily;
        this.autopopulate = $.autopopulate;
        this.downinterval = $.downinterval;
        this.interval = $.interval;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetNodeFqdn defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetNodeFqdn $;

        public Builder() {
            $ = new GetNodeFqdn();
        }

        public Builder(GetNodeFqdn defaults) {
            $ = new GetNodeFqdn(Objects.requireNonNull(defaults));
        }

        /**
         * @param addressFamily The FQDN node&#39;s address family.
         * 
         * @return builder
         * 
         */
        public Builder addressFamily(@Nullable String addressFamily) {
            $.addressFamily = addressFamily;
            return this;
        }

        /**
         * @param autopopulate Specifies if the node should scale to the IP address set returned by DNS.
         * 
         * @return builder
         * 
         */
        public Builder autopopulate(String autopopulate) {
            $.autopopulate = autopopulate;
            return this;
        }

        /**
         * @param downinterval The number of attempts to resolve a domain name.
         * 
         * @return builder
         * 
         */
        public Builder downinterval(Integer downinterval) {
            $.downinterval = downinterval;
            return this;
        }

        /**
         * @param interval The amount of time before sending the next DNS query.
         * 
         * @return builder
         * 
         */
        public Builder interval(String interval) {
            $.interval = interval;
            return this;
        }

        /**
         * @param name Name of the node.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public GetNodeFqdn build() {
            $.autopopulate = Objects.requireNonNull($.autopopulate, "expected parameter 'autopopulate' to be non-null");
            $.downinterval = Objects.requireNonNull($.downinterval, "expected parameter 'downinterval' to be non-null");
            $.interval = Objects.requireNonNull($.interval, "expected parameter 'interval' to be non-null");
            return $;
        }
    }

}
