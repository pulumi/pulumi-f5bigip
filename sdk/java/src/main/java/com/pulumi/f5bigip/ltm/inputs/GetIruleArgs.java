// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIruleArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIruleArgs Empty = new GetIruleArgs();

    /**
     * Irule configured on bigip
     * 
     */
    @Import(name="irule")
    private @Nullable Output<String> irule;

    /**
     * @return Irule configured on bigip
     * 
     */
    public Optional<Output<String>> irule() {
        return Optional.ofNullable(this.irule);
    }

    /**
     * Name of the irule
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the irule
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * partition of the ltm irule
     * 
     */
    @Import(name="partition", required=true)
    private Output<String> partition;

    /**
     * @return partition of the ltm irule
     * 
     */
    public Output<String> partition() {
        return this.partition;
    }

    private GetIruleArgs() {}

    private GetIruleArgs(GetIruleArgs $) {
        this.irule = $.irule;
        this.name = $.name;
        this.partition = $.partition;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIruleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIruleArgs $;

        public Builder() {
            $ = new GetIruleArgs();
        }

        public Builder(GetIruleArgs defaults) {
            $ = new GetIruleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param irule Irule configured on bigip
         * 
         * @return builder
         * 
         */
        public Builder irule(@Nullable Output<String> irule) {
            $.irule = irule;
            return this;
        }

        /**
         * @param irule Irule configured on bigip
         * 
         * @return builder
         * 
         */
        public Builder irule(String irule) {
            return irule(Output.of(irule));
        }

        /**
         * @param name Name of the irule
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the irule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param partition partition of the ltm irule
         * 
         * @return builder
         * 
         */
        public Builder partition(Output<String> partition) {
            $.partition = partition;
            return this;
        }

        /**
         * @param partition partition of the ltm irule
         * 
         * @return builder
         * 
         */
        public Builder partition(String partition) {
            return partition(Output.of(partition));
        }

        public GetIruleArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            $.partition = Objects.requireNonNull($.partition, "expected parameter 'partition' to be non-null");
            return $;
        }
    }

}
