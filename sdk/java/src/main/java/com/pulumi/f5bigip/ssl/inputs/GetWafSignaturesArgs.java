// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ssl.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetWafSignaturesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetWafSignaturesArgs Empty = new GetWafSignaturesArgs();

    /**
     * The relative detection accuracy of the signature.
     * 
     */
    @Import(name="accuracy")
    private @Nullable Output<String> accuracy;

    /**
     * @return The relative detection accuracy of the signature.
     * 
     */
    public Optional<Output<String>> accuracy() {
        return Optional.ofNullable(this.accuracy);
    }

    /**
     * Description of the signature.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description of the signature.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="enabled")
    private @Nullable Output<Boolean> enabled;

    public Optional<Output<Boolean>> enabled() {
        return Optional.ofNullable(this.enabled);
    }

    /**
     * Name of the signature as configured on the system.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the signature as configured on the system.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="performStaging")
    private @Nullable Output<Boolean> performStaging;

    public Optional<Output<Boolean>> performStaging() {
        return Optional.ofNullable(this.performStaging);
    }

    /**
     * The relative risk level of the attack that matches this signature.
     * 
     */
    @Import(name="risk")
    private @Nullable Output<String> risk;

    /**
     * @return The relative risk level of the attack that matches this signature.
     * 
     */
    public Optional<Output<String>> risk() {
        return Optional.ofNullable(this.risk);
    }

    /**
     * ID of the signature in the BIG-IP WAF database.
     * 
     */
    @Import(name="signatureId", required=true)
    private Output<Integer> signatureId;

    /**
     * @return ID of the signature in the BIG-IP WAF database.
     * 
     */
    public Output<Integer> signatureId() {
        return this.signatureId;
    }

    /**
     * System generated ID of the signature.
     * 
     */
    @Import(name="systemSignatureId")
    private @Nullable Output<String> systemSignatureId;

    /**
     * @return System generated ID of the signature.
     * 
     */
    public Optional<Output<String>> systemSignatureId() {
        return Optional.ofNullable(this.systemSignatureId);
    }

    @Import(name="tag")
    private @Nullable Output<String> tag;

    public Optional<Output<String>> tag() {
        return Optional.ofNullable(this.tag);
    }

    /**
     * Type of the signature.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Type of the signature.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private GetWafSignaturesArgs() {}

    private GetWafSignaturesArgs(GetWafSignaturesArgs $) {
        this.accuracy = $.accuracy;
        this.description = $.description;
        this.enabled = $.enabled;
        this.name = $.name;
        this.performStaging = $.performStaging;
        this.risk = $.risk;
        this.signatureId = $.signatureId;
        this.systemSignatureId = $.systemSignatureId;
        this.tag = $.tag;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetWafSignaturesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetWafSignaturesArgs $;

        public Builder() {
            $ = new GetWafSignaturesArgs();
        }

        public Builder(GetWafSignaturesArgs defaults) {
            $ = new GetWafSignaturesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accuracy The relative detection accuracy of the signature.
         * 
         * @return builder
         * 
         */
        public Builder accuracy(@Nullable Output<String> accuracy) {
            $.accuracy = accuracy;
            return this;
        }

        /**
         * @param accuracy The relative detection accuracy of the signature.
         * 
         * @return builder
         * 
         */
        public Builder accuracy(String accuracy) {
            return accuracy(Output.of(accuracy));
        }

        /**
         * @param description Description of the signature.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description of the signature.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder enabled(@Nullable Output<Boolean> enabled) {
            $.enabled = enabled;
            return this;
        }

        public Builder enabled(Boolean enabled) {
            return enabled(Output.of(enabled));
        }

        /**
         * @param name Name of the signature as configured on the system.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the signature as configured on the system.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder performStaging(@Nullable Output<Boolean> performStaging) {
            $.performStaging = performStaging;
            return this;
        }

        public Builder performStaging(Boolean performStaging) {
            return performStaging(Output.of(performStaging));
        }

        /**
         * @param risk The relative risk level of the attack that matches this signature.
         * 
         * @return builder
         * 
         */
        public Builder risk(@Nullable Output<String> risk) {
            $.risk = risk;
            return this;
        }

        /**
         * @param risk The relative risk level of the attack that matches this signature.
         * 
         * @return builder
         * 
         */
        public Builder risk(String risk) {
            return risk(Output.of(risk));
        }

        /**
         * @param signatureId ID of the signature in the BIG-IP WAF database.
         * 
         * @return builder
         * 
         */
        public Builder signatureId(Output<Integer> signatureId) {
            $.signatureId = signatureId;
            return this;
        }

        /**
         * @param signatureId ID of the signature in the BIG-IP WAF database.
         * 
         * @return builder
         * 
         */
        public Builder signatureId(Integer signatureId) {
            return signatureId(Output.of(signatureId));
        }

        /**
         * @param systemSignatureId System generated ID of the signature.
         * 
         * @return builder
         * 
         */
        public Builder systemSignatureId(@Nullable Output<String> systemSignatureId) {
            $.systemSignatureId = systemSignatureId;
            return this;
        }

        /**
         * @param systemSignatureId System generated ID of the signature.
         * 
         * @return builder
         * 
         */
        public Builder systemSignatureId(String systemSignatureId) {
            return systemSignatureId(Output.of(systemSignatureId));
        }

        public Builder tag(@Nullable Output<String> tag) {
            $.tag = tag;
            return this;
        }

        public Builder tag(String tag) {
            return tag(Output.of(tag));
        }

        /**
         * @param type Type of the signature.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Type of the signature.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public GetWafSignaturesArgs build() {
            $.signatureId = Objects.requireNonNull($.signatureId, "expected parameter 'signatureId' to be non-null");
            return $;
        }
    }

}
