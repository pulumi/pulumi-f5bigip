// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.f5bigip.DoArgs;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.inputs.DoState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `f5bigip.Do` provides details about bigip do resource
 * 
 * This resource is helpful to configure do declarative JSON on BIG-IP.
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.f5bigip.Do;
 * import com.pulumi.f5bigip.DoArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var do_example = new Do(&#34;do-example&#34;, DoArgs.builder()        
 *             .doJson(Files.readString(Paths.get(&#34;example.json&#34;)))
 *             .timeout(15)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="f5bigip:index/do:Do")
public class Do extends com.pulumi.resources.CustomResource {
    /**
     * IP Address of BIGIP Host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    @Export(name="bigipAddress", type=String.class, parameters={})
    private Output</* @Nullable */ String> bigipAddress;

    /**
     * @return IP Address of BIGIP Host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    public Output<Optional<String>> bigipAddress() {
        return Codegen.optional(this.bigipAddress);
    }
    /**
     * Password of  BIGIP host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    @Export(name="bigipPassword", type=String.class, parameters={})
    private Output</* @Nullable */ String> bigipPassword;

    /**
     * @return Password of  BIGIP host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    public Output<Optional<String>> bigipPassword() {
        return Codegen.optional(this.bigipPassword);
    }
    /**
     * Port number of BIGIP host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    @Export(name="bigipPort", type=String.class, parameters={})
    private Output</* @Nullable */ String> bigipPort;

    /**
     * @return Port number of BIGIP host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    public Output<Optional<String>> bigipPort() {
        return Codegen.optional(this.bigipPort);
    }
    /**
     * Enable to use an external authentication source (LDAP, TACACS, etc)
     * 
     */
    @Export(name="bigipTokenAuth", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> bigipTokenAuth;

    /**
     * @return Enable to use an external authentication source (LDAP, TACACS, etc)
     * 
     */
    public Output<Optional<Boolean>> bigipTokenAuth() {
        return Codegen.optional(this.bigipTokenAuth);
    }
    /**
     * UserName of BIGIP host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    @Export(name="bigipUser", type=String.class, parameters={})
    private Output</* @Nullable */ String> bigipUser;

    /**
     * @return UserName of BIGIP host to be used for this resource,this is optional parameter.
     * whenever we specify this parameter it gets overwrite provider configuration
     * 
     */
    public Output<Optional<String>> bigipUser() {
        return Codegen.optional(this.bigipUser);
    }
    /**
     * Name of the of the Declarative DO JSON file
     * 
     */
    @Export(name="doJson", type=String.class, parameters={})
    private Output<String> doJson;

    /**
     * @return Name of the of the Declarative DO JSON file
     * 
     */
    public Output<String> doJson() {
        return this.doJson;
    }
    /**
     * unique identifier for DO resource
     * 
     * @deprecated
     * this attribute is no longer in use
     * 
     */
    @Deprecated /* this attribute is no longer in use */
    @Export(name="tenantName", type=String.class, parameters={})
    private Output</* @Nullable */ String> tenantName;

    /**
     * @return unique identifier for DO resource
     * 
     */
    public Output<Optional<String>> tenantName() {
        return Codegen.optional(this.tenantName);
    }
    /**
     * DO json
     * 
     */
    @Export(name="timeout", type=Integer.class, parameters={})
    private Output</* @Nullable */ Integer> timeout;

    /**
     * @return DO json
     * 
     */
    public Output<Optional<Integer>> timeout() {
        return Codegen.optional(this.timeout);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Do(String name) {
        this(name, DoArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Do(String name, DoArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Do(String name, DoArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:index/do:Do", name, args == null ? DoArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Do(String name, Output<String> id, @Nullable DoState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:index/do:Do", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Do get(String name, Output<String> id, @Nullable DoState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Do(name, id, state, options);
    }
}
