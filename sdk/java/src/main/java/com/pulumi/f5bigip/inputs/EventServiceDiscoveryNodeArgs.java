// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class EventServiceDiscoveryNodeArgs extends com.pulumi.resources.ResourceArgs {

    public static final EventServiceDiscoveryNodeArgs Empty = new EventServiceDiscoveryNodeArgs();

    /**
     * name of node
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return name of node
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * ip of nonde
     * 
     */
    @Import(name="ip")
    private @Nullable Output<String> ip;

    /**
     * @return ip of nonde
     * 
     */
    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * port
     * 
     */
    @Import(name="port")
    private @Nullable Output<Integer> port;

    /**
     * @return port
     * 
     */
    public Optional<Output<Integer>> port() {
        return Optional.ofNullable(this.port);
    }

    private EventServiceDiscoveryNodeArgs() {}

    private EventServiceDiscoveryNodeArgs(EventServiceDiscoveryNodeArgs $) {
        this.id = $.id;
        this.ip = $.ip;
        this.port = $.port;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(EventServiceDiscoveryNodeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private EventServiceDiscoveryNodeArgs $;

        public Builder() {
            $ = new EventServiceDiscoveryNodeArgs();
        }

        public Builder(EventServiceDiscoveryNodeArgs defaults) {
            $ = new EventServiceDiscoveryNodeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id name of node
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id name of node
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ip ip of nonde
         * 
         * @return builder
         * 
         */
        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip ip of nonde
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param port port
         * 
         * @return builder
         * 
         */
        public Builder port(@Nullable Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port port
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        public EventServiceDiscoveryNodeArgs build() {
            return $;
        }
    }

}
