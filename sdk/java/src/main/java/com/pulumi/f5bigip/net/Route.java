// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.net;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.net.RouteArgs;
import com.pulumi.f5bigip.net.inputs.RouteState;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `f5bigip.net.Route` Manages a route configuration
 * 
 * For resources should be named with their &#34;full path&#34;. The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.f5bigip.net.Route;
 * import com.pulumi.f5bigip.net.RouteArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var route2 = new Route(&#34;route2&#34;, RouteArgs.builder()        
 *             .gw(&#34;1.1.1.2&#34;)
 *             .name(&#34;/Common/external-route&#34;)
 *             .network(&#34;10.10.10.0/24&#34;)
 *             .build());
 * 
 *     }
 * }
 * ```
 * 
 */
@ResourceType(type="f5bigip:net/route:Route")
public class Route extends com.pulumi.resources.CustomResource {
    /**
     * Specifies a gateway address for the route.
     * 
     */
    @Export(name="gw", type=String.class, parameters={})
    private Output</* @Nullable */ String> gw;

    /**
     * @return Specifies a gateway address for the route.
     * 
     */
    public Output<Optional<String>> gw() {
        return Codegen.optional(this.gw);
    }
    /**
     * Name of the route.Name of Route should be full path,full path is the combination of the `partition + route name`,For ex: `/Common/test-net-route`.
     * 
     */
    @Export(name="name", type=String.class, parameters={})
    private Output<String> name;

    /**
     * @return Name of the route.Name of Route should be full path,full path is the combination of the `partition + route name`,For ex: `/Common/test-net-route`.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The destination subnet and netmask for the route.
     * 
     */
    @Export(name="network", type=String.class, parameters={})
    private Output<String> network;

    /**
     * @return The destination subnet and netmask for the route.
     * 
     */
    public Output<String> network() {
        return this.network;
    }
    /**
     * reject route
     * 
     */
    @Export(name="reject", type=Boolean.class, parameters={})
    private Output</* @Nullable */ Boolean> reject;

    /**
     * @return reject route
     * 
     */
    public Output<Optional<Boolean>> reject() {
        return Codegen.optional(this.reject);
    }
    /**
     * tunnel_ref to route traffic
     * 
     */
    @Export(name="tunnelRef", type=String.class, parameters={})
    private Output</* @Nullable */ String> tunnelRef;

    /**
     * @return tunnel_ref to route traffic
     * 
     */
    public Output<Optional<String>> tunnelRef() {
        return Codegen.optional(this.tunnelRef);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Route(String name) {
        this(name, RouteArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Route(String name, RouteArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Route(String name, RouteArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:net/route:Route", name, args == null ? RouteArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private Route(String name, Output<String> id, @Nullable RouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:net/route:Route", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Route get(String name, Output<String> id, @Nullable RouteState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Route(name, id, state, options);
    }
}
