// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class WafPolicyGraphqlProfileDefenseAttributeArgs extends com.pulumi.resources.ResourceArgs {

    public static final WafPolicyGraphqlProfileDefenseAttributeArgs Empty = new WafPolicyGraphqlProfileDefenseAttributeArgs();

    /**
     * Introspection queries can also be enforced to prevent attackers from using them to
     * understand the API structure and potentially breach an application.
     * 
     */
    @Import(name="allowIntrospectionQueries")
    private @Nullable Output<Boolean> allowIntrospectionQueries;

    /**
     * @return Introspection queries can also be enforced to prevent attackers from using them to
     * understand the API structure and potentially breach an application.
     * 
     */
    public Optional<Output<Boolean>> allowIntrospectionQueries() {
        return Optional.ofNullable(this.allowIntrospectionQueries);
    }

    /**
     * Specifies the highest number of batched queries allowed by the security policy.
     * 
     */
    @Import(name="maximumBatchedQueries")
    private @Nullable Output<String> maximumBatchedQueries;

    /**
     * @return Specifies the highest number of batched queries allowed by the security policy.
     * 
     */
    public Optional<Output<String>> maximumBatchedQueries() {
        return Optional.ofNullable(this.maximumBatchedQueries);
    }

    /**
     * Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
     * 
     */
    @Import(name="maximumStructureDepth")
    private @Nullable Output<String> maximumStructureDepth;

    /**
     * @return Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
     * 
     */
    public Optional<Output<String>> maximumStructureDepth() {
        return Optional.ofNullable(this.maximumStructureDepth);
    }

    /**
     * Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
     * 
     */
    @Import(name="maximumTotalLength")
    private @Nullable Output<String> maximumTotalLength;

    /**
     * @return Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
     * 
     */
    public Optional<Output<String>> maximumTotalLength() {
        return Optional.ofNullable(this.maximumTotalLength);
    }

    /**
     * Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
     * 
     */
    @Import(name="maximumValueLength")
    private @Nullable Output<String> maximumValueLength;

    /**
     * @return Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
     * 
     */
    public Optional<Output<String>> maximumValueLength() {
        return Optional.ofNullable(this.maximumValueLength);
    }

    /**
     * Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
     * 
     */
    @Import(name="tolerateParsingWarnings")
    private @Nullable Output<Boolean> tolerateParsingWarnings;

    /**
     * @return Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
     * 
     */
    public Optional<Output<Boolean>> tolerateParsingWarnings() {
        return Optional.ofNullable(this.tolerateParsingWarnings);
    }

    private WafPolicyGraphqlProfileDefenseAttributeArgs() {}

    private WafPolicyGraphqlProfileDefenseAttributeArgs(WafPolicyGraphqlProfileDefenseAttributeArgs $) {
        this.allowIntrospectionQueries = $.allowIntrospectionQueries;
        this.maximumBatchedQueries = $.maximumBatchedQueries;
        this.maximumStructureDepth = $.maximumStructureDepth;
        this.maximumTotalLength = $.maximumTotalLength;
        this.maximumValueLength = $.maximumValueLength;
        this.tolerateParsingWarnings = $.tolerateParsingWarnings;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WafPolicyGraphqlProfileDefenseAttributeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WafPolicyGraphqlProfileDefenseAttributeArgs $;

        public Builder() {
            $ = new WafPolicyGraphqlProfileDefenseAttributeArgs();
        }

        public Builder(WafPolicyGraphqlProfileDefenseAttributeArgs defaults) {
            $ = new WafPolicyGraphqlProfileDefenseAttributeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowIntrospectionQueries Introspection queries can also be enforced to prevent attackers from using them to
         * understand the API structure and potentially breach an application.
         * 
         * @return builder
         * 
         */
        public Builder allowIntrospectionQueries(@Nullable Output<Boolean> allowIntrospectionQueries) {
            $.allowIntrospectionQueries = allowIntrospectionQueries;
            return this;
        }

        /**
         * @param allowIntrospectionQueries Introspection queries can also be enforced to prevent attackers from using them to
         * understand the API structure and potentially breach an application.
         * 
         * @return builder
         * 
         */
        public Builder allowIntrospectionQueries(Boolean allowIntrospectionQueries) {
            return allowIntrospectionQueries(Output.of(allowIntrospectionQueries));
        }

        /**
         * @param maximumBatchedQueries Specifies the highest number of batched queries allowed by the security policy.
         * 
         * @return builder
         * 
         */
        public Builder maximumBatchedQueries(@Nullable Output<String> maximumBatchedQueries) {
            $.maximumBatchedQueries = maximumBatchedQueries;
            return this;
        }

        /**
         * @param maximumBatchedQueries Specifies the highest number of batched queries allowed by the security policy.
         * 
         * @return builder
         * 
         */
        public Builder maximumBatchedQueries(String maximumBatchedQueries) {
            return maximumBatchedQueries(Output.of(maximumBatchedQueries));
        }

        /**
         * @param maximumStructureDepth Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
         * 
         * @return builder
         * 
         */
        public Builder maximumStructureDepth(@Nullable Output<String> maximumStructureDepth) {
            $.maximumStructureDepth = maximumStructureDepth;
            return this;
        }

        /**
         * @param maximumStructureDepth Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
         * 
         * @return builder
         * 
         */
        public Builder maximumStructureDepth(String maximumStructureDepth) {
            return maximumStructureDepth(Output.of(maximumStructureDepth));
        }

        /**
         * @param maximumTotalLength Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
         * 
         * @return builder
         * 
         */
        public Builder maximumTotalLength(@Nullable Output<String> maximumTotalLength) {
            $.maximumTotalLength = maximumTotalLength;
            return this;
        }

        /**
         * @param maximumTotalLength Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
         * 
         * @return builder
         * 
         */
        public Builder maximumTotalLength(String maximumTotalLength) {
            return maximumTotalLength(Output.of(maximumTotalLength));
        }

        /**
         * @param maximumValueLength Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
         * 
         * @return builder
         * 
         */
        public Builder maximumValueLength(@Nullable Output<String> maximumValueLength) {
            $.maximumValueLength = maximumValueLength;
            return this;
        }

        /**
         * @param maximumValueLength Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
         * 
         * @return builder
         * 
         */
        public Builder maximumValueLength(String maximumValueLength) {
            return maximumValueLength(Output.of(maximumValueLength));
        }

        /**
         * @param tolerateParsingWarnings Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
         * 
         * @return builder
         * 
         */
        public Builder tolerateParsingWarnings(@Nullable Output<Boolean> tolerateParsingWarnings) {
            $.tolerateParsingWarnings = tolerateParsingWarnings;
            return this;
        }

        /**
         * @param tolerateParsingWarnings Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
         * 
         * @return builder
         * 
         */
        public Builder tolerateParsingWarnings(Boolean tolerateParsingWarnings) {
            return tolerateParsingWarnings(Output.of(tolerateParsingWarnings));
        }

        public WafPolicyGraphqlProfileDefenseAttributeArgs build() {
            return $;
        }
    }

}
