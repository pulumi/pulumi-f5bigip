// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.ltm;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.f5bigip.Utilities;
import com.pulumi.f5bigip.ltm.IfileArgs;
import com.pulumi.f5bigip.ltm.inputs.IfileState;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * `f5bigip.ltm.Ifile` This resource creates an LTM iFile on F5 BIG-IP that references an existing system iFile.
 * LTM iFiles are used in iRules and LTM policies to access file content for traffic processing and decision making.
 * 
 * ## Example Usage
 * 
 * ### Using LTM iFile in iRule
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.f5bigip.ltm.IRule;
 * import com.pulumi.f5bigip.ltm.IRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var serverList = new com.pulumi.f5bigip.sys.Ifile("serverList", com.pulumi.f5bigip.sys.IfileArgs.builder()
 *             .name("server-mapping")
 *             .partition("Production")
 *             .content("""
 * web1:10.1.1.10
 * web2:10.1.1.11
 * web3:10.1.1.12
 *             """)
 *             .build());
 * 
 *         var ltmServers = new com.pulumi.f5bigip.ltm.Ifile("ltmServers", com.pulumi.f5bigip.ltm.IfileArgs.builder()
 *             .name("ltm-server-mapping")
 *             .partition("Production")
 *             .fileName("/Production/server-mapping")
 *             .build());
 * 
 *         var serverSelector = new IRule("serverSelector", IRuleArgs.builder()
 *             .name("select-server-rule")
 *             .irule("""
 * when HTTP_REQUEST {
 *   set server_map [ifile get ltm-server-mapping]
 *   # Process server mapping logic
 *   foreach line [split $server_map \"\
 * \"] {
 *     set parts [split $line \":\"]
 *     # Implement server selection logic
 *   }
 * }
 *             """)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Notes
 * 
 * * The referenced system iFile (specified in `fileName`) must exist before creating the LTM iFile.
 * * LTM iFiles are primarily used in iRules and LTM policies for traffic processing.
 * * Changes to `name`, `partition`, or `subPath` will force recreation of the resource.
 * * The LTM iFile acts as a reference to the system iFile and doesn&#39;t store content directly.
 * * Use `f5bigip.sys.Ifile` to upload file content, then reference it with `f5bigip.ltm.Ifile` for LTM usage.
 * 
 * ## Related Resources
 * 
 * * `f5bigip.sys.Ifile` - Creates system iFiles with content
 * * `f5bigip.ltm.IRule` - Creates iRules that can reference LTM iFiles
 * * `f5bigip.ltm.Policy` - Creates LTM policies that can use LTM iFiles
 * 
 * ## Import
 * 
 * LTM iFiles can be imported using their full path:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import f5bigip:ltm/ifile:Ifile example /Common/my-ltm-ifile
 * ```
 * 
 * For iFiles with sub-paths:
 * 
 * bash
 * 
 * ```sh
 * $ pulumi import f5bigip:ltm/ifile:Ifile example /Common/templates/my-ltm-ifile
 * ```
 * 
 */
@ResourceType(type="f5bigip:ltm/ifile:Ifile")
public class Ifile extends com.pulumi.resources.CustomResource {
    /**
     * The system iFile name to reference (e.g., `/Common/my-sys-ifile`). This should reference an existing system iFile created with `f5bigip.sys.Ifile`.
     * 
     */
    @Export(name="fileName", refs={String.class}, tree="[0]")
    private Output<String> fileName;

    /**
     * @return The system iFile name to reference (e.g., `/Common/my-sys-ifile`). This should reference an existing system iFile created with `f5bigip.sys.Ifile`.
     * 
     */
    public Output<String> fileName() {
        return this.fileName;
    }
    /**
     * The complete path of the LTM iFile on the BIG-IP system.
     * 
     */
    @Export(name="fullPath", refs={String.class}, tree="[0]")
    private Output<String> fullPath;

    /**
     * @return The complete path of the LTM iFile on the BIG-IP system.
     * 
     */
    public Output<String> fullPath() {
        return this.fullPath;
    }
    /**
     * Name of the LTM iFile to be created on BIG-IP.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the LTM iFile to be created on BIG-IP.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Partition where the LTM iFile will be created. Defaults to `Common`.
     * 
     */
    @Export(name="partition", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> partition;

    /**
     * @return Partition where the LTM iFile will be created. Defaults to `Common`.
     * 
     */
    public Output<Optional<String>> partition() {
        return Codegen.optional(this.partition);
    }
    /**
     * Subdirectory within the partition for organizing iFiles.
     * 
     */
    @Export(name="subPath", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subPath;

    /**
     * @return Subdirectory within the partition for organizing iFiles.
     * 
     */
    public Output<Optional<String>> subPath() {
        return Codegen.optional(this.subPath);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Ifile(java.lang.String name) {
        this(name, IfileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Ifile(java.lang.String name, IfileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Ifile(java.lang.String name, IfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:ltm/ifile:Ifile", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Ifile(java.lang.String name, Output<java.lang.String> id, @Nullable IfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("f5bigip:ltm/ifile:Ifile", name, state, makeResourceOptions(options, id), false);
    }

    private static IfileArgs makeArgs(IfileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? IfileArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Ifile get(java.lang.String name, Output<java.lang.String> id, @Nullable IfileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Ifile(name, id, state, options);
    }
}
