// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class As3DeleteApps {
    /**
     * @return List of application names to delete from the specified tenant.
     * 
     * &gt; `deleteApps` cannot be used together with `as3Json`.
     * 
     */
    private List<String> apps;
    /**
     * @return Name of the tenant containing the apps to delete.
     * 
     */
    private String tenantName;

    private As3DeleteApps() {}
    /**
     * @return List of application names to delete from the specified tenant.
     * 
     * &gt; `deleteApps` cannot be used together with `as3Json`.
     * 
     */
    public List<String> apps() {
        return this.apps;
    }
    /**
     * @return Name of the tenant containing the apps to delete.
     * 
     */
    public String tenantName() {
        return this.tenantName;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(As3DeleteApps defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> apps;
        private String tenantName;
        public Builder() {}
        public Builder(As3DeleteApps defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.apps = defaults.apps;
    	      this.tenantName = defaults.tenantName;
        }

        @CustomType.Setter
        public Builder apps(List<String> apps) {
            if (apps == null) {
              throw new MissingRequiredPropertyException("As3DeleteApps", "apps");
            }
            this.apps = apps;
            return this;
        }
        public Builder apps(String... apps) {
            return apps(List.of(apps));
        }
        @CustomType.Setter
        public Builder tenantName(String tenantName) {
            if (tenantName == null) {
              throw new MissingRequiredPropertyException("As3DeleteApps", "tenantName");
            }
            this.tenantName = tenantName;
            return this;
        }
        public As3DeleteApps build() {
            final var _resultValue = new As3DeleteApps();
            _resultValue.apps = apps;
            _resultValue.tenantName = tenantName;
            return _resultValue;
        }
    }
}
