// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.f5bigip.fast.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetAwsServiceDiscoveryResult {
    private @Nullable String addressRealm;
    private @Nullable String awsAccessKey;
    private String awsRegion;
    /**
     * @return The JSON for AWS service discovery block.
     * 
     */
    private String awsSdJson;
    private @Nullable String awsSecretAccessKey;
    private @Nullable Boolean credentialUpdate;
    private String externalId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String minimumMonitors;
    private @Nullable Integer port;
    private String roleArn;
    private String tagKey;
    private String tagValue;
    private @Nullable String type;
    private @Nullable String undetectableAction;
    private @Nullable String updateInterval;

    private GetAwsServiceDiscoveryResult() {}
    public Optional<String> addressRealm() {
        return Optional.ofNullable(this.addressRealm);
    }
    public Optional<String> awsAccessKey() {
        return Optional.ofNullable(this.awsAccessKey);
    }
    public String awsRegion() {
        return this.awsRegion;
    }
    /**
     * @return The JSON for AWS service discovery block.
     * 
     */
    public String awsSdJson() {
        return this.awsSdJson;
    }
    public Optional<String> awsSecretAccessKey() {
        return Optional.ofNullable(this.awsSecretAccessKey);
    }
    public Optional<Boolean> credentialUpdate() {
        return Optional.ofNullable(this.credentialUpdate);
    }
    public String externalId() {
        return this.externalId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> minimumMonitors() {
        return Optional.ofNullable(this.minimumMonitors);
    }
    public Optional<Integer> port() {
        return Optional.ofNullable(this.port);
    }
    public String roleArn() {
        return this.roleArn;
    }
    public String tagKey() {
        return this.tagKey;
    }
    public String tagValue() {
        return this.tagValue;
    }
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public Optional<String> undetectableAction() {
        return Optional.ofNullable(this.undetectableAction);
    }
    public Optional<String> updateInterval() {
        return Optional.ofNullable(this.updateInterval);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAwsServiceDiscoveryResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String addressRealm;
        private @Nullable String awsAccessKey;
        private String awsRegion;
        private String awsSdJson;
        private @Nullable String awsSecretAccessKey;
        private @Nullable Boolean credentialUpdate;
        private String externalId;
        private String id;
        private @Nullable String minimumMonitors;
        private @Nullable Integer port;
        private String roleArn;
        private String tagKey;
        private String tagValue;
        private @Nullable String type;
        private @Nullable String undetectableAction;
        private @Nullable String updateInterval;
        public Builder() {}
        public Builder(GetAwsServiceDiscoveryResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressRealm = defaults.addressRealm;
    	      this.awsAccessKey = defaults.awsAccessKey;
    	      this.awsRegion = defaults.awsRegion;
    	      this.awsSdJson = defaults.awsSdJson;
    	      this.awsSecretAccessKey = defaults.awsSecretAccessKey;
    	      this.credentialUpdate = defaults.credentialUpdate;
    	      this.externalId = defaults.externalId;
    	      this.id = defaults.id;
    	      this.minimumMonitors = defaults.minimumMonitors;
    	      this.port = defaults.port;
    	      this.roleArn = defaults.roleArn;
    	      this.tagKey = defaults.tagKey;
    	      this.tagValue = defaults.tagValue;
    	      this.type = defaults.type;
    	      this.undetectableAction = defaults.undetectableAction;
    	      this.updateInterval = defaults.updateInterval;
        }

        @CustomType.Setter
        public Builder addressRealm(@Nullable String addressRealm) {
            this.addressRealm = addressRealm;
            return this;
        }
        @CustomType.Setter
        public Builder awsAccessKey(@Nullable String awsAccessKey) {
            this.awsAccessKey = awsAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder awsRegion(String awsRegion) {
            this.awsRegion = Objects.requireNonNull(awsRegion);
            return this;
        }
        @CustomType.Setter
        public Builder awsSdJson(String awsSdJson) {
            this.awsSdJson = Objects.requireNonNull(awsSdJson);
            return this;
        }
        @CustomType.Setter
        public Builder awsSecretAccessKey(@Nullable String awsSecretAccessKey) {
            this.awsSecretAccessKey = awsSecretAccessKey;
            return this;
        }
        @CustomType.Setter
        public Builder credentialUpdate(@Nullable Boolean credentialUpdate) {
            this.credentialUpdate = credentialUpdate;
            return this;
        }
        @CustomType.Setter
        public Builder externalId(String externalId) {
            this.externalId = Objects.requireNonNull(externalId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder minimumMonitors(@Nullable String minimumMonitors) {
            this.minimumMonitors = minimumMonitors;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable Integer port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder roleArn(String roleArn) {
            this.roleArn = Objects.requireNonNull(roleArn);
            return this;
        }
        @CustomType.Setter
        public Builder tagKey(String tagKey) {
            this.tagKey = Objects.requireNonNull(tagKey);
            return this;
        }
        @CustomType.Setter
        public Builder tagValue(String tagValue) {
            this.tagValue = Objects.requireNonNull(tagValue);
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder undetectableAction(@Nullable String undetectableAction) {
            this.undetectableAction = undetectableAction;
            return this;
        }
        @CustomType.Setter
        public Builder updateInterval(@Nullable String updateInterval) {
            this.updateInterval = updateInterval;
            return this;
        }
        public GetAwsServiceDiscoveryResult build() {
            final var _resultValue = new GetAwsServiceDiscoveryResult();
            _resultValue.addressRealm = addressRealm;
            _resultValue.awsAccessKey = awsAccessKey;
            _resultValue.awsRegion = awsRegion;
            _resultValue.awsSdJson = awsSdJson;
            _resultValue.awsSecretAccessKey = awsSecretAccessKey;
            _resultValue.credentialUpdate = credentialUpdate;
            _resultValue.externalId = externalId;
            _resultValue.id = id;
            _resultValue.minimumMonitors = minimumMonitors;
            _resultValue.port = port;
            _resultValue.roleArn = roleArn;
            _resultValue.tagKey = tagKey;
            _resultValue.tagValue = tagValue;
            _resultValue.type = type;
            _resultValue.undetectableAction = undetectableAction;
            _resultValue.updateInterval = updateInterval;
            return _resultValue;
        }
    }
}
