# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class PersistenceProfileSrcAddr(pulumi.CustomResource):
    app_service: pulumi.Output[str]
    defaults_from: pulumi.Output[str]
    hash_algorithm: pulumi.Output[str]
    map_proxies: pulumi.Output[str]
    mask: pulumi.Output[str]
    match_across_pools: pulumi.Output[str]
    match_across_services: pulumi.Output[str]
    match_across_virtuals: pulumi.Output[str]
    mirror: pulumi.Output[str]
    name: pulumi.Output[str]
    override_conn_limit: pulumi.Output[str]
    timeout: pulumi.Output[int]
    def __init__(__self__, __name__, __opts__=None, app_service=None, defaults_from=None, hash_algorithm=None, map_proxies=None, mask=None, match_across_pools=None, match_across_services=None, match_across_virtuals=None, mirror=None, name=None, override_conn_limit=None, timeout=None):
        """
        Configures a source address persistence profile
        
        ## Reference
        
        `name` - (Required) Name of the virtual address
        
        `defaults_from` - (Required) Parent cookie persistence profile
        
        `match_across_pools` (Optional) (enabled or disabled) match across pools with given persistence record
        
        `match_across_services` (Optional) (enabled or disabled) match across services with given persistence record
        
        `match_across_virtuals` (Optional) (enabled or disabled) match across virtual servers with given persistence record
        
        `mirror` (Optional) (enabled or disabled) mirror persistence record
        
        `timeout` (Optional) (enabled or disabled) Timeout for persistence of the session in seconds
        
        `override_conn_limit` (Optional) (enabled or disabled) Enable or dissable pool member connection limits are overridden for persisted clients. Per-virtual connection limits remain hard limits and are not overridden.
        
        `hash_algorithm` (Optional) Specify the hash algorithm
        
        `mask` (Optional) Identify a range of source IP addresses to manage together as a single source address affinity persistent connection when connecting to the pool. Must be a valid IPv4 or IPv6 mask.
        
        `map_proxies` (Optional) (enabled or disabled) Directs all to the same single pool member
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] app_service
        :param pulumi.Input[str] defaults_from
        :param pulumi.Input[str] hash_algorithm
        :param pulumi.Input[str] map_proxies
        :param pulumi.Input[str] mask
        :param pulumi.Input[str] match_across_pools
        :param pulumi.Input[str] match_across_services
        :param pulumi.Input[str] match_across_virtuals
        :param pulumi.Input[str] mirror
        :param pulumi.Input[str] name
        :param pulumi.Input[str] override_conn_limit
        :param pulumi.Input[int] timeout
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['app_service'] = app_service

        if not defaults_from:
            raise TypeError('Missing required property defaults_from')
        __props__['defaults_from'] = defaults_from

        __props__['hash_algorithm'] = hash_algorithm

        __props__['map_proxies'] = map_proxies

        __props__['mask'] = mask

        __props__['match_across_pools'] = match_across_pools

        __props__['match_across_services'] = match_across_services

        __props__['match_across_virtuals'] = match_across_virtuals

        __props__['mirror'] = mirror

        if not name:
            raise TypeError('Missing required property name')
        __props__['name'] = name

        __props__['override_conn_limit'] = override_conn_limit

        __props__['timeout'] = timeout

        super(PersistenceProfileSrcAddr, __self__).__init__(
            'f5bigip:ltm/persistenceProfileSrcAddr:PersistenceProfileSrcAddr',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

