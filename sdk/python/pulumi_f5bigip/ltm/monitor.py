# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class Monitor(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, defaults_from=None, destination=None, interval=None, ip_dscp=None, manual_resume=None, name=None, parent=None, receive=None, receive_disable=None, reverse=None, send=None, time_until_up=None, timeout=None, transparent=None):
        """Create a Monitor resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['defaults_from'] = defaults_from

        __props__['destination'] = destination

        __props__['interval'] = interval

        __props__['ip_dscp'] = ip_dscp

        __props__['manual_resume'] = manual_resume

        if not name:
            raise TypeError('Missing required property name')
        __props__['name'] = name

        if not parent:
            raise TypeError('Missing required property parent')
        __props__['parent'] = parent

        __props__['receive'] = receive

        __props__['receive_disable'] = receive_disable

        __props__['reverse'] = reverse

        __props__['send'] = send

        __props__['time_until_up'] = time_until_up

        __props__['timeout'] = timeout

        __props__['transparent'] = transparent

        super(Monitor, __self__).__init__(
            'f5bigip:ltm/monitor:Monitor',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

