# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from .. import utilities, tables

class SelfIp(pulumi.CustomResource):
    ip: pulumi.Output[str]
    """
    The Self IP's address and netmask.
    """
    name: pulumi.Output[str]
    """
    Name of the selfip
    """
    traffic_group: pulumi.Output[str]
    """
    Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.
    """
    vlan: pulumi.Output[str]
    """
    Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.
    """
    def __init__(__self__, resource_name, opts=None, ip=None, name=None, traffic_group=None, vlan=None, __name__=None, __opts__=None):
        """
        `bigip_net_selfip` Manages a selfip configuration
        
        Resource should be named with their "full path". The full path is the combination of the partition + name of the resource, for example /Common/my-selfip.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ip: The Self IP's address and netmask.
        :param pulumi.Input[str] name: Name of the selfip
        :param pulumi.Input[str] traffic_group: Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.
        :param pulumi.Input[str] vlan: Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        if ip is None:
            raise TypeError("Missing required property 'ip'")
        __props__['ip'] = ip

        if name is None:
            raise TypeError("Missing required property 'name'")
        __props__['name'] = name

        __props__['traffic_group'] = traffic_group

        if vlan is None:
            raise TypeError("Missing required property 'vlan'")
        __props__['vlan'] = vlan

        super(SelfIp, __self__).__init__(
            'f5bigip:net/selfIp:SelfIp',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

