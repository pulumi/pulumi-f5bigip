# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Route(pulumi.CustomResource):
    gw: pulumi.Output[str]
    name: pulumi.Output[str]
    """
    Name of the route
    """
    network: pulumi.Output[str]
    """
    Specifies a gateway address for the route.
    """
    def __init__(__self__, __name__, __opts__=None, gw=None, name=None, network=None):
        """
        `bigip_net_route` Manages a route configuration
        
        For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] gw
        :param pulumi.Input[str] name: Name of the route
        :param pulumi.Input[str] network: Specifies a gateway address for the route.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['gw'] = gw

        if not name:
            raise TypeError('Missing required property name')
        __props__['name'] = name

        if not network:
            raise TypeError('Missing required property network')
        __props__['network'] = network

        super(Route, __self__).__init__(
            'f5bigip:net/route:Route',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

