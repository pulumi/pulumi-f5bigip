# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class DeviceGroup(pulumi.CustomResource):
    auto_sync: pulumi.Output[str]
    """
    Specifies if the device-group will automatically sync configuration data to its members
    """
    description: pulumi.Output[str]
    devices: pulumi.Output[list]
    """
    Name of the device to be included in device group, this need to be configured before using devicegroup resource
    """
    full_load_on_sync: pulumi.Output[str]
    incremental_config: pulumi.Output[int]
    name: pulumi.Output[str]
    """
    Is the name of the device Group
    """
    network_failover: pulumi.Output[str]
    partition: pulumi.Output[str]
    save_on_auto_sync: pulumi.Output[str]
    type: pulumi.Output[str]
    """
    Specifies if the device-group will be used for failover or resource syncing
    """
    def __init__(__self__, __name__, __opts__=None, auto_sync=None, description=None, devices=None, full_load_on_sync=None, incremental_config=None, name=None, network_failover=None, partition=None, save_on_auto_sync=None, type=None):
        """
        `bigip_cm_devicegroup` A device group is a collection of BIG-IP devices that are configured to securely synchronize their BIG-IP configuration data, and fail over when needed.
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[str] auto_sync: Specifies if the device-group will automatically sync configuration data to its members
        :param pulumi.Input[str] description
        :param pulumi.Input[list] devices: Name of the device to be included in device group, this need to be configured before using devicegroup resource
        :param pulumi.Input[str] full_load_on_sync
        :param pulumi.Input[int] incremental_config
        :param pulumi.Input[str] name: Is the name of the device Group
        :param pulumi.Input[str] network_failover
        :param pulumi.Input[str] partition
        :param pulumi.Input[str] save_on_auto_sync
        :param pulumi.Input[str] type: Specifies if the device-group will be used for failover or resource syncing
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['auto_sync'] = auto_sync

        __props__['description'] = description

        __props__['devices'] = devices

        __props__['full_load_on_sync'] = full_load_on_sync

        __props__['incremental_config'] = incremental_config

        __props__['name'] = name

        __props__['network_failover'] = network_failover

        __props__['partition'] = partition

        __props__['save_on_auto_sync'] = save_on_auto_sync

        __props__['type'] = type

        super(DeviceGroup, __self__).__init__(
            'f5bigip:cm/deviceGroup:DeviceGroup',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

