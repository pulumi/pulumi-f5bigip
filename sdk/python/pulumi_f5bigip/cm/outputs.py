# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'DeviceGroupDevice',
]

@pulumi.output_type
class DeviceGroupDevice(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "setSyncLeader":
            suggest = "set_sync_leader"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in DeviceGroupDevice. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        DeviceGroupDevice.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        DeviceGroupDevice.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 name: Optional[str] = None,
                 set_sync_leader: Optional[bool] = None):
        """
        :param str name: Is the name of the device Group
        """
        DeviceGroupDevice._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            name=name,
            set_sync_leader=set_sync_leader,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             name: Optional[str] = None,
             set_sync_leader: Optional[bool] = None,
             opts: Optional[pulumi.ResourceOptions]=None):
        if name is not None:
            _setter("name", name)
        if set_sync_leader is not None:
            _setter("set_sync_leader", set_sync_leader)

    @property
    @pulumi.getter
    def name(self) -> Optional[str]:
        """
        Is the name of the device Group
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="setSyncLeader")
    def set_sync_leader(self) -> Optional[bool]:
        return pulumi.get(self, "set_sync_leader")


