# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

import types

__config__ = pulumi.Config('f5bigip')


class _ExportableConfig(types.ModuleType):
    @property
    def address(self) -> Optional[str]:
        """
        Domain name/IP of the BigIP
        """
        return __config__.get('address')

    @property
    def login_ref(self) -> Optional[str]:
        """
        Login reference for token authentication (see BIG-IP REST docs for details)
        """
        return __config__.get('loginRef')

    @property
    def password(self) -> Optional[str]:
        """
        The user's password. Leave empty if using token_value
        """
        return __config__.get('password')

    @property
    def port(self) -> Optional[str]:
        """
        Management Port to connect to Bigip
        """
        return __config__.get('port')

    @property
    def teem_disable(self) -> Optional[bool]:
        """
        If this flag set to true,sending telemetry data to TEEM will be disabled
        """
        return __config__.get_bool('teemDisable')

    @property
    def token_auth(self) -> Optional[bool]:
        """
        Enable to use an external authentication source (LDAP, TACACS, etc)
        """
        return __config__.get_bool('tokenAuth')

    @property
    def token_value(self) -> Optional[str]:
        """
        A token generated outside the provider, in place of password
        """
        return __config__.get('tokenValue')

    @property
    def trusted_cert_path(self) -> Optional[str]:
        """
        Valid Trusted Certificate path
        """
        return __config__.get('trustedCertPath')

    @property
    def username(self) -> Optional[str]:
        """
        Username with API access to the BigIP
        """
        return __config__.get('username')

    @property
    def validate_certs_disable(self) -> Optional[bool]:
        """
        If set to true, Disables TLS certificate check on BIG-IP. Default : True
        """
        return __config__.get_bool('validateCertsDisable')

