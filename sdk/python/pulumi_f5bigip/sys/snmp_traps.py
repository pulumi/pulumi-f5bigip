# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime
from .. import utilities, tables

class SnmpTraps(pulumi.CustomResource):
    def __init__(__self__, __name__, __opts__=None, auth_passwordencrypted=None, auth_protocol=None, community=None, description=None, engine_id=None, host=None, name=None, port=None, privacy_password=None, privacy_password_encrypted=None, privacy_protocol=None, security_level=None, security_name=None, version=None):
        """Create a SnmpTraps resource with the given unique name, props, and options."""
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['auth_passwordencrypted'] = auth_passwordencrypted

        __props__['auth_protocol'] = auth_protocol

        __props__['community'] = community

        __props__['description'] = description

        __props__['engine_id'] = engine_id

        __props__['host'] = host

        __props__['name'] = name

        __props__['port'] = port

        __props__['privacy_password'] = privacy_password

        __props__['privacy_password_encrypted'] = privacy_password_encrypted

        __props__['privacy_protocol'] = privacy_protocol

        __props__['security_level'] = security_level

        __props__['security_name'] = security_name

        __props__['version'] = version

        super(SnmpTraps, __self__).__init__(
            'f5bigip:sys/snmpTraps:SnmpTraps',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

