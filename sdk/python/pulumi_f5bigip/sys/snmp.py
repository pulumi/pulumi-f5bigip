# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import pulumi
import pulumi.runtime
from .. import utilities, tables

class Snmp(pulumi.CustomResource):
    allowedaddresses: pulumi.Output[list]
    """
    Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
    """
    sys_contact: pulumi.Output[str]
    """
    Specifies the contact information for the system administrator.
    """
    sys_location: pulumi.Output[str]
    """
    Describes the system's physical location.
    """
    def __init__(__self__, __name__, __opts__=None, allowedaddresses=None, sys_contact=None, sys_location=None):
        """
        `bigip_sys_snmp` provides details bout how to enable "ilx", "asm" "apm" resource on BIG-IP
        
        :param str __name__: The name of the resource.
        :param pulumi.ResourceOptions __opts__: Options for the resource.
        :param pulumi.Input[list] allowedaddresses: Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
        :param pulumi.Input[str] sys_contact: Specifies the contact information for the system administrator.
        :param pulumi.Input[str] sys_location: Describes the system's physical location.
        """
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['allowedaddresses'] = allowedaddresses

        __props__['sys_contact'] = sys_contact

        __props__['sys_location'] = sys_location

        super(Snmp, __self__).__init__(
            'f5bigip:sys/snmp:Snmp',
            __name__,
            __props__,
            __opts__)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

