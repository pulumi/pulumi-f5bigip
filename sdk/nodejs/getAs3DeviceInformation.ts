// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export function getAs3DeviceInformation(args: GetAs3DeviceInformationArgs, opts?: pulumi.InvokeOptions): Promise<GetAs3DeviceInformationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("f5bigip:index/getAs3DeviceInformation:getAs3DeviceInformation", {
        "applications": args.applications,
        "tenant": args.tenant,
    }, opts);
}

/**
 * A collection of arguments for invoking getAs3DeviceInformation.
 */
export interface GetAs3DeviceInformationArgs {
    applications?: string[];
    tenant: string;
}

/**
 * A collection of values returned by getAs3DeviceInformation.
 */
export interface GetAs3DeviceInformationResult {
    readonly applications?: string[];
    readonly as3Json: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly tenant: string;
}
export function getAs3DeviceInformationOutput(args: GetAs3DeviceInformationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetAs3DeviceInformationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("f5bigip:index/getAs3DeviceInformation:getAs3DeviceInformation", {
        "applications": args.applications,
        "tenant": args.tenant,
    }, opts);
}

/**
 * A collection of arguments for invoking getAs3DeviceInformation.
 */
export interface GetAs3DeviceInformationOutputArgs {
    applications?: pulumi.Input<pulumi.Input<string>[]>;
    tenant: pulumi.Input<string>;
}
