// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `f5bigip.ltm.PoolAttachment` Manages nodes membership in pools
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 *
 * const monitor = new f5bigip.ltm.Monitor("monitor", {
 *     name: "/Common/terraform_monitor",
 *     parent: "/Common/http",
 *     send: "GET /some/path\n",
 *     timeout: "999",
 *     interval: "998",
 * });
 * const pool = new f5bigip.ltm.Pool("pool", {
 *     name: "/Common/terraform-pool",
 *     loadBalancingMode: "round-robin",
 *     monitors: [monitor.name],
 *     allowSnat: "yes",
 *     allowNat: "yes",
 * });
 * const attachNode = new f5bigip.ltm.PoolAttachment("attachNode", {
 *     pool: pool.name,
 *     node: "1.1.1.1:80",
 *     ratio: 2,
 *     connectionLimit: 2,
 *     connectionRateLimit: 2,
 *     priorityGroup: 2,
 *     dynamicRatio: 3,
 * });
 * ```
 */
export class PoolAttachment extends pulumi.CustomResource {
    /**
     * Get an existing PoolAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PoolAttachmentState, opts?: pulumi.CustomResourceOptions): PoolAttachment {
        return new PoolAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5bigip:ltm/poolAttachment:PoolAttachment';

    /**
     * Returns true if the given object is an instance of PoolAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PoolAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PoolAttachment.__pulumiType;
    }

    /**
     * Specifies a maximum established connection limit for a pool member or node.The default is 0, meaning that there is no limit to the number of connections.
     */
    public readonly connectionLimit!: pulumi.Output<number>;
    /**
     * Specifies the maximum number of connections-per-second allowed for a pool member,The default is 0.
     */
    public readonly connectionRateLimit!: pulumi.Output<string>;
    /**
     * Specifies the fixed ratio value used for a node during ratio load balancing.
     */
    public readonly dynamicRatio!: pulumi.Output<number>;
    /**
     * Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN. The default is enabled
     */
    public readonly fqdnAutopopulate!: pulumi.Output<string | undefined>;
    /**
     * Pool member address/fqdn with service port, (ex: `1.1.1.1:80/www.google.com:80`). (Note: Member will be in same partition of Pool)
     */
    public readonly node!: pulumi.Output<string>;
    /**
     * Name of the pool to which members should be attached,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
     */
    public readonly pool!: pulumi.Output<string>;
    /**
     * Specifies a number representing the priority group for the pool member. The default is 0, meaning that the member has no priority
     */
    public readonly priorityGroup!: pulumi.Output<number>;
    /**
     * "Specifies the ratio weight to assign to the pool member. Valid values range from 1 through 65535. The default is 1, which means that each pool member has an equal ratio proportion.".
     */
    public readonly ratio!: pulumi.Output<number>;

    /**
     * Create a PoolAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PoolAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PoolAttachmentArgs | PoolAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as PoolAttachmentState | undefined;
            inputs["connectionLimit"] = state ? state.connectionLimit : undefined;
            inputs["connectionRateLimit"] = state ? state.connectionRateLimit : undefined;
            inputs["dynamicRatio"] = state ? state.dynamicRatio : undefined;
            inputs["fqdnAutopopulate"] = state ? state.fqdnAutopopulate : undefined;
            inputs["node"] = state ? state.node : undefined;
            inputs["pool"] = state ? state.pool : undefined;
            inputs["priorityGroup"] = state ? state.priorityGroup : undefined;
            inputs["ratio"] = state ? state.ratio : undefined;
        } else {
            const args = argsOrState as PoolAttachmentArgs | undefined;
            if ((!args || args.node === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'node'");
            }
            if ((!args || args.pool === undefined) && !(opts && opts.urn)) {
                throw new Error("Missing required property 'pool'");
            }
            inputs["connectionLimit"] = args ? args.connectionLimit : undefined;
            inputs["connectionRateLimit"] = args ? args.connectionRateLimit : undefined;
            inputs["dynamicRatio"] = args ? args.dynamicRatio : undefined;
            inputs["fqdnAutopopulate"] = args ? args.fqdnAutopopulate : undefined;
            inputs["node"] = args ? args.node : undefined;
            inputs["pool"] = args ? args.pool : undefined;
            inputs["priorityGroup"] = args ? args.priorityGroup : undefined;
            inputs["ratio"] = args ? args.ratio : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(PoolAttachment.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PoolAttachment resources.
 */
export interface PoolAttachmentState {
    /**
     * Specifies a maximum established connection limit for a pool member or node.The default is 0, meaning that there is no limit to the number of connections.
     */
    readonly connectionLimit?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of connections-per-second allowed for a pool member,The default is 0.
     */
    readonly connectionRateLimit?: pulumi.Input<string>;
    /**
     * Specifies the fixed ratio value used for a node during ratio load balancing.
     */
    readonly dynamicRatio?: pulumi.Input<number>;
    /**
     * Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN. The default is enabled
     */
    readonly fqdnAutopopulate?: pulumi.Input<string>;
    /**
     * Pool member address/fqdn with service port, (ex: `1.1.1.1:80/www.google.com:80`). (Note: Member will be in same partition of Pool)
     */
    readonly node?: pulumi.Input<string>;
    /**
     * Name of the pool to which members should be attached,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
     */
    readonly pool?: pulumi.Input<string>;
    /**
     * Specifies a number representing the priority group for the pool member. The default is 0, meaning that the member has no priority
     */
    readonly priorityGroup?: pulumi.Input<number>;
    /**
     * "Specifies the ratio weight to assign to the pool member. Valid values range from 1 through 65535. The default is 1, which means that each pool member has an equal ratio proportion.".
     */
    readonly ratio?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a PoolAttachment resource.
 */
export interface PoolAttachmentArgs {
    /**
     * Specifies a maximum established connection limit for a pool member or node.The default is 0, meaning that there is no limit to the number of connections.
     */
    readonly connectionLimit?: pulumi.Input<number>;
    /**
     * Specifies the maximum number of connections-per-second allowed for a pool member,The default is 0.
     */
    readonly connectionRateLimit?: pulumi.Input<string>;
    /**
     * Specifies the fixed ratio value used for a node during ratio load balancing.
     */
    readonly dynamicRatio?: pulumi.Input<number>;
    /**
     * Specifies whether the system automatically creates ephemeral nodes using the IP addresses returned by the resolution of a DNS query for a node defined by an FQDN. The default is enabled
     */
    readonly fqdnAutopopulate?: pulumi.Input<string>;
    /**
     * Pool member address/fqdn with service port, (ex: `1.1.1.1:80/www.google.com:80`). (Note: Member will be in same partition of Pool)
     */
    readonly node: pulumi.Input<string>;
    /**
     * Name of the pool to which members should be attached,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
     */
    readonly pool: pulumi.Input<string>;
    /**
     * Specifies a number representing the priority group for the pool member. The default is 0, meaning that the member has no priority
     */
    readonly priorityGroup?: pulumi.Input<number>;
    /**
     * "Specifies the ratio weight to assign to the pool member. Valid values range from 1 through 65535. The default is 1, which means that each pool member has an equal ratio proportion.".
     */
    readonly ratio?: pulumi.Input<number>;
}
