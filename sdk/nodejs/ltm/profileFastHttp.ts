// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ProfileFastHttp extends pulumi.CustomResource {
    /**
     * Get an existing ProfileFastHttp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileFastHttpState, opts?: pulumi.CustomResourceOptions): ProfileFastHttp {
        return new ProfileFastHttp(name, <any>state, { ...opts, id: id });
    }

    /**
     * connpool_maxreuse timer
     */
    public readonly connpoolMaxreuse: pulumi.Output<number | undefined>;
    /**
     * timer integer
     */
    public readonly connpoolMaxsize: pulumi.Output<number | undefined>;
    /**
     * Pool min size
     */
    public readonly connpoolMinsize: pulumi.Output<number | undefined>;
    /**
     * enabled or disabled
     */
    public readonly connpoolReplenish: pulumi.Output<string | undefined>;
    /**
     * integer value
     */
    public readonly connpoolStep: pulumi.Output<number | undefined>;
    /**
     * idle_timeout can be given value
     */
    public readonly connpoolidleTimeoutoverride: pulumi.Output<number | undefined>;
    /**
     * Use the parent Fasthttp profile
     */
    public readonly defaultsFrom: pulumi.Output<string | undefined>;
    /**
     * disabled or enabled
     */
    public readonly forcehttp10response: pulumi.Output<string | undefined>;
    /**
     * integer value
     */
    public readonly idleTimeout: pulumi.Output<number | undefined>;
    /**
     * integer value
     */
    public readonly maxheaderSize: pulumi.Output<number | undefined>;
    /**
     * Name of the Fasthttp Profile
     */
    public readonly name: pulumi.Output<string>;

    /**
     * Create a ProfileFastHttp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileFastHttpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileFastHttpArgs | ProfileFastHttpState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ProfileFastHttpState = argsOrState as ProfileFastHttpState | undefined;
            inputs["connpoolMaxreuse"] = state ? state.connpoolMaxreuse : undefined;
            inputs["connpoolMaxsize"] = state ? state.connpoolMaxsize : undefined;
            inputs["connpoolMinsize"] = state ? state.connpoolMinsize : undefined;
            inputs["connpoolReplenish"] = state ? state.connpoolReplenish : undefined;
            inputs["connpoolStep"] = state ? state.connpoolStep : undefined;
            inputs["connpoolidleTimeoutoverride"] = state ? state.connpoolidleTimeoutoverride : undefined;
            inputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            inputs["forcehttp10response"] = state ? state.forcehttp10response : undefined;
            inputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            inputs["maxheaderSize"] = state ? state.maxheaderSize : undefined;
            inputs["name"] = state ? state.name : undefined;
        } else {
            const args = argsOrState as ProfileFastHttpArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            inputs["connpoolMaxreuse"] = args ? args.connpoolMaxreuse : undefined;
            inputs["connpoolMaxsize"] = args ? args.connpoolMaxsize : undefined;
            inputs["connpoolMinsize"] = args ? args.connpoolMinsize : undefined;
            inputs["connpoolReplenish"] = args ? args.connpoolReplenish : undefined;
            inputs["connpoolStep"] = args ? args.connpoolStep : undefined;
            inputs["connpoolidleTimeoutoverride"] = args ? args.connpoolidleTimeoutoverride : undefined;
            inputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            inputs["forcehttp10response"] = args ? args.forcehttp10response : undefined;
            inputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            inputs["maxheaderSize"] = args ? args.maxheaderSize : undefined;
            inputs["name"] = args ? args.name : undefined;
        }
        super("f5bigip:ltm/profileFastHttp:ProfileFastHttp", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProfileFastHttp resources.
 */
export interface ProfileFastHttpState {
    /**
     * connpool_maxreuse timer
     */
    readonly connpoolMaxreuse?: pulumi.Input<number>;
    /**
     * timer integer
     */
    readonly connpoolMaxsize?: pulumi.Input<number>;
    /**
     * Pool min size
     */
    readonly connpoolMinsize?: pulumi.Input<number>;
    /**
     * enabled or disabled
     */
    readonly connpoolReplenish?: pulumi.Input<string>;
    /**
     * integer value
     */
    readonly connpoolStep?: pulumi.Input<number>;
    /**
     * idle_timeout can be given value
     */
    readonly connpoolidleTimeoutoverride?: pulumi.Input<number>;
    /**
     * Use the parent Fasthttp profile
     */
    readonly defaultsFrom?: pulumi.Input<string>;
    /**
     * disabled or enabled
     */
    readonly forcehttp10response?: pulumi.Input<string>;
    /**
     * integer value
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * integer value
     */
    readonly maxheaderSize?: pulumi.Input<number>;
    /**
     * Name of the Fasthttp Profile
     */
    readonly name?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProfileFastHttp resource.
 */
export interface ProfileFastHttpArgs {
    /**
     * connpool_maxreuse timer
     */
    readonly connpoolMaxreuse?: pulumi.Input<number>;
    /**
     * timer integer
     */
    readonly connpoolMaxsize?: pulumi.Input<number>;
    /**
     * Pool min size
     */
    readonly connpoolMinsize?: pulumi.Input<number>;
    /**
     * enabled or disabled
     */
    readonly connpoolReplenish?: pulumi.Input<string>;
    /**
     * integer value
     */
    readonly connpoolStep?: pulumi.Input<number>;
    /**
     * idle_timeout can be given value
     */
    readonly connpoolidleTimeoutoverride?: pulumi.Input<number>;
    /**
     * Use the parent Fasthttp profile
     */
    readonly defaultsFrom?: pulumi.Input<string>;
    /**
     * disabled or enabled
     */
    readonly forcehttp10response?: pulumi.Input<string>;
    /**
     * integer value
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * integer value
     */
    readonly maxheaderSize?: pulumi.Input<number>;
    /**
     * Name of the Fasthttp Profile
     */
    readonly name: pulumi.Input<string>;
}
