// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class ProfileTcp extends pulumi.CustomResource {
    /**
     * Get an existing ProfileTcp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileTcpState, opts?: pulumi.CustomResourceOptions): ProfileTcp {
        return new ProfileTcp(name, <any>state, { ...opts, id: id });
    }

    /**
     * close wait timer integer
     */
    public readonly closeWaitTimeout: pulumi.Output<number | undefined>;
    /**
     * Use the parent tcp profile
     */
    public readonly defaultsFrom: pulumi.Output<string | undefined>;
    /**
     * Defferred accept
     */
    public readonly deferredAccept: pulumi.Output<string | undefined>;
    /**
     * fast_open value
     */
    public readonly fastOpen: pulumi.Output<string | undefined>;
    /**
     * timer integer
     */
    public readonly finwait2timeout: pulumi.Output<number | undefined>;
    /**
     * fin wait timer integer
     */
    public readonly finwaitTimeout: pulumi.Output<number | undefined>;
    /**
     * idle_timeout can be given value
     */
    public readonly idleTimeout: pulumi.Output<number | undefined>;
    /**
     * keepalive_interval timer integer
     */
    public readonly keepaliveInterval: pulumi.Output<number | undefined>;
    /**
     * Name of the TCP Profile
     */
    public readonly name: pulumi.Output<string>;
    /**
     * name of partition
     */
    public readonly partition: pulumi.Output<string | undefined>;

    /**
     * Create a ProfileTcp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileTcpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileTcpArgs | ProfileTcpState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: ProfileTcpState = argsOrState as ProfileTcpState | undefined;
            inputs["closeWaitTimeout"] = state ? state.closeWaitTimeout : undefined;
            inputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            inputs["deferredAccept"] = state ? state.deferredAccept : undefined;
            inputs["fastOpen"] = state ? state.fastOpen : undefined;
            inputs["finwait2timeout"] = state ? state.finwait2timeout : undefined;
            inputs["finwaitTimeout"] = state ? state.finwaitTimeout : undefined;
            inputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            inputs["keepaliveInterval"] = state ? state.keepaliveInterval : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["partition"] = state ? state.partition : undefined;
        } else {
            const args = argsOrState as ProfileTcpArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            inputs["closeWaitTimeout"] = args ? args.closeWaitTimeout : undefined;
            inputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            inputs["deferredAccept"] = args ? args.deferredAccept : undefined;
            inputs["fastOpen"] = args ? args.fastOpen : undefined;
            inputs["finwait2timeout"] = args ? args.finwait2timeout : undefined;
            inputs["finwaitTimeout"] = args ? args.finwaitTimeout : undefined;
            inputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            inputs["keepaliveInterval"] = args ? args.keepaliveInterval : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["partition"] = args ? args.partition : undefined;
        }
        super("f5bigip:ltm/profileTcp:ProfileTcp", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProfileTcp resources.
 */
export interface ProfileTcpState {
    /**
     * close wait timer integer
     */
    readonly closeWaitTimeout?: pulumi.Input<number>;
    /**
     * Use the parent tcp profile
     */
    readonly defaultsFrom?: pulumi.Input<string>;
    /**
     * Defferred accept
     */
    readonly deferredAccept?: pulumi.Input<string>;
    /**
     * fast_open value
     */
    readonly fastOpen?: pulumi.Input<string>;
    /**
     * timer integer
     */
    readonly finwait2timeout?: pulumi.Input<number>;
    /**
     * fin wait timer integer
     */
    readonly finwaitTimeout?: pulumi.Input<number>;
    /**
     * idle_timeout can be given value
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * keepalive_interval timer integer
     */
    readonly keepaliveInterval?: pulumi.Input<number>;
    /**
     * Name of the TCP Profile
     */
    readonly name?: pulumi.Input<string>;
    /**
     * name of partition
     */
    readonly partition?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProfileTcp resource.
 */
export interface ProfileTcpArgs {
    /**
     * close wait timer integer
     */
    readonly closeWaitTimeout?: pulumi.Input<number>;
    /**
     * Use the parent tcp profile
     */
    readonly defaultsFrom?: pulumi.Input<string>;
    /**
     * Defferred accept
     */
    readonly deferredAccept?: pulumi.Input<string>;
    /**
     * fast_open value
     */
    readonly fastOpen?: pulumi.Input<string>;
    /**
     * timer integer
     */
    readonly finwait2timeout?: pulumi.Input<number>;
    /**
     * fin wait timer integer
     */
    readonly finwaitTimeout?: pulumi.Input<number>;
    /**
     * idle_timeout can be given value
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * keepalive_interval timer integer
     */
    readonly keepaliveInterval?: pulumi.Input<number>;
    /**
     * Name of the TCP Profile
     */
    readonly name: pulumi.Input<string>;
    /**
     * name of partition
     */
    readonly partition?: pulumi.Input<string>;
}
