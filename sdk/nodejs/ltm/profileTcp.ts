// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `f5bigip.ltm.ProfileTcp` Configures a custom profileTcp for use by health checks.
 *
 * For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 *
 * const sanjose_tcp_lan_profile = new f5bigip.ltm.ProfileTcp("sanjose-tcp-lan-profile", {
 *     closeWaitTimeout: 5,
 *     deferredAccept: "enabled",
 *     fastOpen: "enabled",
 *     finwait2timeout: 5,
 *     finwaitTimeout: 300,
 *     idleTimeout: 200,
 *     keepaliveInterval: 1700,
 *     name: "/Common/sanjose-tcp-lan-profile",
 * });
 * ```
 */
export class ProfileTcp extends pulumi.CustomResource {
    /**
     * Get an existing ProfileTcp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileTcpState, opts?: pulumi.CustomResourceOptions): ProfileTcp {
        return new ProfileTcp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5bigip:ltm/profileTcp:ProfileTcp';

    /**
     * Returns true if the given object is an instance of ProfileTcp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProfileTcp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProfileTcp.__pulumiType;
    }

    /**
     * Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.
     */
    public readonly closeWaitTimeout!: pulumi.Output<number>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    public readonly defaultsFrom!: pulumi.Output<string>;
    /**
     * Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.
     */
    public readonly deferredAccept!: pulumi.Output<string>;
    /**
     * When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.
     */
    public readonly fastOpen!: pulumi.Output<string>;
    /**
     * Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).
     */
    public readonly finwait2timeout!: pulumi.Output<number>;
    /**
     * Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.
     */
    public readonly finwaitTimeout!: pulumi.Output<number>;
    /**
     * Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.
     */
    public readonly idleTimeout!: pulumi.Output<number>;
    /**
     * Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.
     */
    public readonly keepaliveInterval!: pulumi.Output<number>;
    /**
     * Name of the profile_tcp
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Displays the administrative partition within which this profile resides
     */
    public readonly partition!: pulumi.Output<string | undefined>;

    /**
     * Create a ProfileTcp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileTcpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileTcpArgs | ProfileTcpState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as ProfileTcpState | undefined;
            inputs["closeWaitTimeout"] = state ? state.closeWaitTimeout : undefined;
            inputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            inputs["deferredAccept"] = state ? state.deferredAccept : undefined;
            inputs["fastOpen"] = state ? state.fastOpen : undefined;
            inputs["finwait2timeout"] = state ? state.finwait2timeout : undefined;
            inputs["finwaitTimeout"] = state ? state.finwaitTimeout : undefined;
            inputs["idleTimeout"] = state ? state.idleTimeout : undefined;
            inputs["keepaliveInterval"] = state ? state.keepaliveInterval : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["partition"] = state ? state.partition : undefined;
        } else {
            const args = argsOrState as ProfileTcpArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            inputs["closeWaitTimeout"] = args ? args.closeWaitTimeout : undefined;
            inputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            inputs["deferredAccept"] = args ? args.deferredAccept : undefined;
            inputs["fastOpen"] = args ? args.fastOpen : undefined;
            inputs["finwait2timeout"] = args ? args.finwait2timeout : undefined;
            inputs["finwaitTimeout"] = args ? args.finwaitTimeout : undefined;
            inputs["idleTimeout"] = args ? args.idleTimeout : undefined;
            inputs["keepaliveInterval"] = args ? args.keepaliveInterval : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["partition"] = args ? args.partition : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(ProfileTcp.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProfileTcp resources.
 */
export interface ProfileTcpState {
    /**
     * Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.
     */
    readonly closeWaitTimeout?: pulumi.Input<number>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    readonly defaultsFrom?: pulumi.Input<string>;
    /**
     * Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.
     */
    readonly deferredAccept?: pulumi.Input<string>;
    /**
     * When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.
     */
    readonly fastOpen?: pulumi.Input<string>;
    /**
     * Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).
     */
    readonly finwait2timeout?: pulumi.Input<number>;
    /**
     * Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.
     */
    readonly finwaitTimeout?: pulumi.Input<number>;
    /**
     * Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.
     */
    readonly keepaliveInterval?: pulumi.Input<number>;
    /**
     * Name of the profile_tcp
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Displays the administrative partition within which this profile resides
     */
    readonly partition?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProfileTcp resource.
 */
export interface ProfileTcpArgs {
    /**
     * Specifies the number of seconds that a connection remains in a LAST-ACK state before quitting. A value of 0 represents a term of forever (or until the maxrtx of the FIN state). The default value is 5 seconds.
     */
    readonly closeWaitTimeout?: pulumi.Input<number>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    readonly defaultsFrom?: pulumi.Input<string>;
    /**
     * Specifies, when enabled, that the system defers allocation of the connection chain context until the client response is received. This option is useful for dealing with 3-way handshake DOS attacks. The default value is disabled.
     */
    readonly deferredAccept?: pulumi.Input<string>;
    /**
     * When enabled, permits TCP Fast Open, allowing properly equipped TCP clients to send data with the SYN packet.
     */
    readonly fastOpen?: pulumi.Input<string>;
    /**
     * Specifies the number of seconds that a connection is in the FIN-WAIT-2 state before quitting. The default value is 300 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state).
     */
    readonly finwait2timeout?: pulumi.Input<number>;
    /**
     * Specifies the number of seconds that a connection is in the FIN-WAIT-1 or closing state before quitting. The default value is 5 seconds. A value of 0 (zero) represents a term of forever (or until the maxrtx of the FIN state). You can also specify immediate or indefinite.
     */
    readonly finwaitTimeout?: pulumi.Input<number>;
    /**
     * Specifies the number of seconds that a connection is idle before the connection is eligible for deletion. The default value is 300 seconds.
     */
    readonly idleTimeout?: pulumi.Input<number>;
    /**
     * Specifies the keep alive probe interval, in seconds. The default value is 1800 seconds.
     */
    readonly keepaliveInterval?: pulumi.Input<number>;
    /**
     * Name of the profile_tcp
     */
    readonly name: pulumi.Input<string>;
    /**
     * Displays the administrative partition within which this profile resides
     */
    readonly partition?: pulumi.Input<string>;
}
