// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `f5bigip.ltm.ProfileHttpCompress`  Virtual server HTTP compression profile configuration
 *
 * Resources should be named with their `full path`.The full path is the combination of the `partition + name` (example: `/Common/my-httpcompresprofile` ) or  `partition + directory + name` of the resource  (example: `/Common/test/my-httpcompresprofile`)
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 *
 * const sjhttpcompression = new f5bigip.ltm.ProfileHttpCompress("sjhttpcompression", {
 *     name: "/Common/sjhttpcompression2",
 *     defaultsFrom: "/Common/httpcompression",
 *     uriExcludes: [
 *         "www.abc.f5.com",
 *         "www.abc2.f5.com",
 *     ],
 *     uriIncludes: ["www.xyzbc.cisco.com"],
 *     contentTypeIncludes: ["nicecontent.com"],
 *     contentTypeExcludes: ["nicecontentexclude.com"],
 * });
 * ```
 *
 * ## Import
 *
 * BIG-IP LTM HTTP Compress profiles can be imported using the `name`, e.g.
 *
 * ```sh
 * $ pulumi import f5bigip:ltm/profileHttpCompress:ProfileHttpCompress test-httpcomprs_import /Common/test-httpcomprs
 * ```
 */
export class ProfileHttpCompress extends pulumi.CustomResource {
    /**
     * Get an existing ProfileHttpCompress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileHttpCompressState, opts?: pulumi.CustomResourceOptions): ProfileHttpCompress {
        return new ProfileHttpCompress(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5bigip:ltm/profileHttpCompress:ProfileHttpCompress';

    /**
     * Returns true if the given object is an instance of ProfileHttpCompress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProfileHttpCompress {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProfileHttpCompress.__pulumiType;
    }

    /**
     * Specifies the maximum number of compressed bytes that the system buffers before inserting a Content-Length header (which specifies the compressed size) into the response. The default is `4096` bytes.
     */
    public readonly compressionBuffersize!: pulumi.Output<number>;
    /**
     * Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     */
    public readonly contentTypeExcludes!: pulumi.Output<string[]>;
    /**
     * Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     */
    public readonly contentTypeIncludes!: pulumi.Output<string[]>;
    /**
     * Specifies, when checked (enabled), that the system monitors the percent CPU usage and adjusts compression rates automatically when the CPU usage reaches either the CPU Saver High Threshold or the CPU Saver Low Threshold. The default is `enabled`.
     */
    public readonly cpuSaver!: pulumi.Output<string>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    public readonly defaultsFrom!: pulumi.Output<string>;
    /**
     * Specifies the degree to which the system compresses the content. Higher compression levels cause the compression process to be slower. The default is 1 - Least Compression (Fastest)
     */
    public readonly gzipCompressionLevel!: pulumi.Output<number>;
    /**
     * Specifies the number of bytes of memory that the system uses for internal compression buffers when compressing a server response. The default is `8 kilobytes/8192 bytes`.
     */
    public readonly gzipMemoryLevel!: pulumi.Output<number>;
    /**
     * Specifies the number of kilobytes in the window size that the system uses when compressing a server response. The default is `16` kilobytes
     */
    public readonly gzipWindowSize!: pulumi.Output<number>;
    /**
     * Specifies, when checked (enabled), that the system does not remove the Accept-Encoding: header from an HTTP request. The default is `disabled`.
     */
    public readonly keepAcceptEncoding!: pulumi.Output<string>;
    /**
     * Name of the LTM http compress profile,named with their `full path`.The full path is the combination of the `partition + name` (example: `/Common/my-httpcompresprofile` ) or  `partition + directory + name` of the resource  (example: `my-httpcompresprofile`)
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     */
    public readonly uriExcludes!: pulumi.Output<string[]>;
    /**
     * Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     */
    public readonly uriIncludes!: pulumi.Output<string[]>;
    /**
     * Specifies, when checked (enabled), that the system inserts a Vary header into cacheable server responses. The default is `enabled`.
     */
    public readonly varyHeader!: pulumi.Output<string>;

    /**
     * Create a ProfileHttpCompress resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileHttpCompressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileHttpCompressArgs | ProfileHttpCompressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProfileHttpCompressState | undefined;
            resourceInputs["compressionBuffersize"] = state ? state.compressionBuffersize : undefined;
            resourceInputs["contentTypeExcludes"] = state ? state.contentTypeExcludes : undefined;
            resourceInputs["contentTypeIncludes"] = state ? state.contentTypeIncludes : undefined;
            resourceInputs["cpuSaver"] = state ? state.cpuSaver : undefined;
            resourceInputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            resourceInputs["gzipCompressionLevel"] = state ? state.gzipCompressionLevel : undefined;
            resourceInputs["gzipMemoryLevel"] = state ? state.gzipMemoryLevel : undefined;
            resourceInputs["gzipWindowSize"] = state ? state.gzipWindowSize : undefined;
            resourceInputs["keepAcceptEncoding"] = state ? state.keepAcceptEncoding : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["uriExcludes"] = state ? state.uriExcludes : undefined;
            resourceInputs["uriIncludes"] = state ? state.uriIncludes : undefined;
            resourceInputs["varyHeader"] = state ? state.varyHeader : undefined;
        } else {
            const args = argsOrState as ProfileHttpCompressArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["compressionBuffersize"] = args ? args.compressionBuffersize : undefined;
            resourceInputs["contentTypeExcludes"] = args ? args.contentTypeExcludes : undefined;
            resourceInputs["contentTypeIncludes"] = args ? args.contentTypeIncludes : undefined;
            resourceInputs["cpuSaver"] = args ? args.cpuSaver : undefined;
            resourceInputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            resourceInputs["gzipCompressionLevel"] = args ? args.gzipCompressionLevel : undefined;
            resourceInputs["gzipMemoryLevel"] = args ? args.gzipMemoryLevel : undefined;
            resourceInputs["gzipWindowSize"] = args ? args.gzipWindowSize : undefined;
            resourceInputs["keepAcceptEncoding"] = args ? args.keepAcceptEncoding : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["uriExcludes"] = args ? args.uriExcludes : undefined;
            resourceInputs["uriIncludes"] = args ? args.uriIncludes : undefined;
            resourceInputs["varyHeader"] = args ? args.varyHeader : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProfileHttpCompress.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProfileHttpCompress resources.
 */
export interface ProfileHttpCompressState {
    /**
     * Specifies the maximum number of compressed bytes that the system buffers before inserting a Content-Length header (which specifies the compressed size) into the response. The default is `4096` bytes.
     */
    compressionBuffersize?: pulumi.Input<number>;
    /**
     * Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     */
    contentTypeExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     */
    contentTypeIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies, when checked (enabled), that the system monitors the percent CPU usage and adjusts compression rates automatically when the CPU usage reaches either the CPU Saver High Threshold or the CPU Saver Low Threshold. The default is `enabled`.
     */
    cpuSaver?: pulumi.Input<string>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * Specifies the degree to which the system compresses the content. Higher compression levels cause the compression process to be slower. The default is 1 - Least Compression (Fastest)
     */
    gzipCompressionLevel?: pulumi.Input<number>;
    /**
     * Specifies the number of bytes of memory that the system uses for internal compression buffers when compressing a server response. The default is `8 kilobytes/8192 bytes`.
     */
    gzipMemoryLevel?: pulumi.Input<number>;
    /**
     * Specifies the number of kilobytes in the window size that the system uses when compressing a server response. The default is `16` kilobytes
     */
    gzipWindowSize?: pulumi.Input<number>;
    /**
     * Specifies, when checked (enabled), that the system does not remove the Accept-Encoding: header from an HTTP request. The default is `disabled`.
     */
    keepAcceptEncoding?: pulumi.Input<string>;
    /**
     * Name of the LTM http compress profile,named with their `full path`.The full path is the combination of the `partition + name` (example: `/Common/my-httpcompresprofile` ) or  `partition + directory + name` of the resource  (example: `my-httpcompresprofile`)
     */
    name?: pulumi.Input<string>;
    /**
     * Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     */
    uriExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     */
    uriIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies, when checked (enabled), that the system inserts a Vary header into cacheable server responses. The default is `enabled`.
     */
    varyHeader?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ProfileHttpCompress resource.
 */
export interface ProfileHttpCompressArgs {
    /**
     * Specifies the maximum number of compressed bytes that the system buffers before inserting a Content-Length header (which specifies the compressed size) into the response. The default is `4096` bytes.
     */
    compressionBuffersize?: pulumi.Input<number>;
    /**
     * Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     */
    contentTypeExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
     */
    contentTypeIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies, when checked (enabled), that the system monitors the percent CPU usage and adjusts compression rates automatically when the CPU usage reaches either the CPU Saver High Threshold or the CPU Saver Low Threshold. The default is `enabled`.
     */
    cpuSaver?: pulumi.Input<string>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * Specifies the degree to which the system compresses the content. Higher compression levels cause the compression process to be slower. The default is 1 - Least Compression (Fastest)
     */
    gzipCompressionLevel?: pulumi.Input<number>;
    /**
     * Specifies the number of bytes of memory that the system uses for internal compression buffers when compressing a server response. The default is `8 kilobytes/8192 bytes`.
     */
    gzipMemoryLevel?: pulumi.Input<number>;
    /**
     * Specifies the number of kilobytes in the window size that the system uses when compressing a server response. The default is `16` kilobytes
     */
    gzipWindowSize?: pulumi.Input<number>;
    /**
     * Specifies, when checked (enabled), that the system does not remove the Accept-Encoding: header from an HTTP request. The default is `disabled`.
     */
    keepAcceptEncoding?: pulumi.Input<string>;
    /**
     * Name of the LTM http compress profile,named with their `full path`.The full path is the combination of the `partition + name` (example: `/Common/my-httpcompresprofile` ) or  `partition + directory + name` of the resource  (example: `my-httpcompresprofile`)
     */
    name: pulumi.Input<string>;
    /**
     * Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
     */
    uriExcludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
     */
    uriIncludes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies, when checked (enabled), that the system inserts a Vary header into cacheable server responses. The default is `enabled`.
     */
    varyHeader?: pulumi.Input<string>;
}
