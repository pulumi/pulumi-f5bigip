// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Snat extends pulumi.CustomResource {
    /**
     * Get an existing Snat resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnatState, opts?: pulumi.CustomResourceOptions): Snat {
        return new Snat(name, <any>state, { ...opts, id: id });
    }

    /**
     * Specifies whether to automatically map last hop for pools or not. The default is to use next level's defaul
     */
    public readonly autolasthop: pulumi.Output<string | undefined>;
    /**
     * Fullpath
     */
    public readonly fullPath: pulumi.Output<string | undefined>;
    /**
     * Enables or disables mirroring of SNAT connections.
     */
    public readonly mirror: pulumi.Output<string | undefined>;
    /**
     * Snat list Name
     */
    public readonly name: pulumi.Output<string>;
    public readonly origins: pulumi.Output<{ appService?: string, name?: string }[]>;
    /**
     * Which partition on BIG-IP
     */
    public readonly partition: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used
     */
    public readonly snatpool: pulumi.Output<string | undefined>;
    /**
     * Specifies whether the system preserves the source port of the connection.
     */
    public readonly sourceport: pulumi.Output<string | undefined>;
    /**
     * Specifies the name of a translated IP address.
     */
    public readonly translation: pulumi.Output<string | undefined>;
    /**
     * Disables the SNAT on all VLANs.
     */
    public readonly vlansdisabled: pulumi.Output<boolean | undefined>;

    /**
     * Create a Snat resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SnatArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnatArgs | SnatState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: SnatState = argsOrState as SnatState | undefined;
            inputs["autolasthop"] = state ? state.autolasthop : undefined;
            inputs["fullPath"] = state ? state.fullPath : undefined;
            inputs["mirror"] = state ? state.mirror : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["origins"] = state ? state.origins : undefined;
            inputs["partition"] = state ? state.partition : undefined;
            inputs["snatpool"] = state ? state.snatpool : undefined;
            inputs["sourceport"] = state ? state.sourceport : undefined;
            inputs["translation"] = state ? state.translation : undefined;
            inputs["vlansdisabled"] = state ? state.vlansdisabled : undefined;
        } else {
            const args = argsOrState as SnatArgs | undefined;
            if (!args || args.name === undefined) {
                throw new Error("Missing required property 'name'");
            }
            if (!args || args.origins === undefined) {
                throw new Error("Missing required property 'origins'");
            }
            inputs["autolasthop"] = args ? args.autolasthop : undefined;
            inputs["fullPath"] = args ? args.fullPath : undefined;
            inputs["mirror"] = args ? args.mirror : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["origins"] = args ? args.origins : undefined;
            inputs["partition"] = args ? args.partition : undefined;
            inputs["snatpool"] = args ? args.snatpool : undefined;
            inputs["sourceport"] = args ? args.sourceport : undefined;
            inputs["translation"] = args ? args.translation : undefined;
            inputs["vlansdisabled"] = args ? args.vlansdisabled : undefined;
        }
        super("f5bigip:ltm/snat:Snat", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snat resources.
 */
export interface SnatState {
    /**
     * Specifies whether to automatically map last hop for pools or not. The default is to use next level's defaul
     */
    readonly autolasthop?: pulumi.Input<string>;
    /**
     * Fullpath
     */
    readonly fullPath?: pulumi.Input<string>;
    /**
     * Enables or disables mirroring of SNAT connections.
     */
    readonly mirror?: pulumi.Input<string>;
    /**
     * Snat list Name
     */
    readonly name?: pulumi.Input<string>;
    readonly origins?: pulumi.Input<pulumi.Input<{ appService?: pulumi.Input<string>, name?: pulumi.Input<string> }>[]>;
    /**
     * Which partition on BIG-IP
     */
    readonly partition?: pulumi.Input<string>;
    /**
     * Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used
     */
    readonly snatpool?: pulumi.Input<string>;
    /**
     * Specifies whether the system preserves the source port of the connection.
     */
    readonly sourceport?: pulumi.Input<string>;
    /**
     * Specifies the name of a translated IP address.
     */
    readonly translation?: pulumi.Input<string>;
    /**
     * Disables the SNAT on all VLANs.
     */
    readonly vlansdisabled?: pulumi.Input<boolean>;
}

/**
 * The set of arguments for constructing a Snat resource.
 */
export interface SnatArgs {
    /**
     * Specifies whether to automatically map last hop for pools or not. The default is to use next level's defaul
     */
    readonly autolasthop?: pulumi.Input<string>;
    /**
     * Fullpath
     */
    readonly fullPath?: pulumi.Input<string>;
    /**
     * Enables or disables mirroring of SNAT connections.
     */
    readonly mirror?: pulumi.Input<string>;
    /**
     * Snat list Name
     */
    readonly name: pulumi.Input<string>;
    readonly origins: pulumi.Input<pulumi.Input<{ appService?: pulumi.Input<string>, name?: pulumi.Input<string> }>[]>;
    /**
     * Which partition on BIG-IP
     */
    readonly partition?: pulumi.Input<string>;
    /**
     * Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used
     */
    readonly snatpool?: pulumi.Input<string>;
    /**
     * Specifies whether the system preserves the source port of the connection.
     */
    readonly sourceport?: pulumi.Input<string>;
    /**
     * Specifies the name of a translated IP address.
     */
    readonly translation?: pulumi.Input<string>;
    /**
     * Disables the SNAT on all VLANs.
     */
    readonly vlansdisabled?: pulumi.Input<boolean>;
}
