// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `f5bigip.ltm.ProfileHttp` Configures a custom profileHttp for use by health checks.
 *
 * For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 *
 * const sanjose_http = new f5bigip.ltm.ProfileHttp("sanjose-http", {
 *     defaultsFrom: "/Common/http",
 *     fallbackHost: "titanic",
 *     fallbackStatusCodes: [
 *         "400",
 *         "500",
 *         "300",
 *     ],
 *     name: "/Common/sanjose-http",
 * });
 * ```
 *
 * ## Import
 *
 * BIG-IP LTM http profiles can be imported using the `name`, e.g. bash
 *
 * ```sh
 *  $ pulumi import f5bigip:ltm/profileHttp:ProfileHttp test-http /Common/test-http
 * ```
 */
export class ProfileHttp extends pulumi.CustomResource {
    /**
     * Get an existing ProfileHttp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ProfileHttpState, opts?: pulumi.CustomResourceOptions): ProfileHttp {
        return new ProfileHttp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5bigip:ltm/profileHttp:ProfileHttp';

    /**
     * Returns true if the given object is an instance of ProfileHttp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ProfileHttp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProfileHttp.__pulumiType;
    }

    /**
     * Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.
     */
    public readonly acceptXff!: pulumi.Output<string>;
    /**
     * The application service to which the object belongs.
     */
    public readonly appService!: pulumi.Output<string | undefined>;
    /**
     * Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is `none`
     */
    public readonly basicAuthRealm!: pulumi.Output<string>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    public readonly defaultsFrom!: pulumi.Output<string>;
    /**
     * Specifies user-defined description.
     */
    public readonly description!: pulumi.Output<string>;
    /**
     * Type a passphrase for cookie encryption.
     */
    public readonly encryptCookieSecret!: pulumi.Output<string | undefined>;
    /**
     * Type the cookie names for the system to encrypt.
     */
    public readonly encryptCookies!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number
     */
    public readonly fallbackHost!: pulumi.Output<string>;
    /**
     * Specifies one or more three-digit status codes that can be returned by an HTTP server,that should trigger a redirection to the fallback host.
     */
    public readonly fallbackStatusCodes!: pulumi.Output<string[] | undefined>;
    /**
     * Specifies the header string that you want to erase from an HTTP request. Default is `none`.
     */
    public readonly headErase!: pulumi.Output<string>;
    /**
     * Specifies a quoted header string that you want to insert into an HTTP request.Default is `none`.
     */
    public readonly headInsert!: pulumi.Output<string>;
    /**
     * Specifies, when enabled, that the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling. The default is `Disabled`.
     */
    public readonly insertXforwardedFor!: pulumi.Output<string>;
    /**
     * Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you
     * specify in the LWS Maximum Columns setting.
     */
    public readonly lwsSeparator!: pulumi.Output<string>;
    /**
     * Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you specify in the LWS Maximum Columns setting.
     */
    public readonly lwsWidth!: pulumi.Output<number>;
    /**
     * Specifies the name of the http profile,name of Profile should be full path. Full path is the combination of the `partition + profile name`,For example `/Common/test-http-profile`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Enables the system to perform HTTP header transformations for the purpose of  keeping server-side connections open. This feature requires configuration of a OneConnect profile
     */
    public readonly oneconnectTransformations!: pulumi.Output<string>;
    /**
     * Specifies the proxy mode for this profile: reverse, explicit, or transparent. The default is `reverse`.
     */
    public readonly proxyType!: pulumi.Output<string>;
    /**
     * Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses. The default is `none`.
     */
    public readonly redirectRewrite!: pulumi.Output<string>;
    /**
     * Specifies how the system handles HTTP content that is chunked by a client. The default is `preserve`.
     */
    public readonly requestChunking!: pulumi.Output<string>;
    /**
     * Specifies how the system handles HTTP content that is chunked by a server. The default is `selective`.
     */
    public readonly responseChunking!: pulumi.Output<string>;
    /**
     * Specifies headers that the BIG-IP system allows in an HTTP response.If you are specifying more than one header, separate the headers with a blank space.
     */
    public readonly responseHeadersPermitteds!: pulumi.Output<string[]>;
    /**
     * Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is BigIP. If no
     * string is specified, then no Server header will be added to such responses
     */
    public readonly serverAgentName!: pulumi.Output<string>;
    /**
     * Displays the administrative partition within which this profile resides.
     */
    public readonly tmPartition!: pulumi.Output<string | undefined>;
    /**
     * Specifies the hostname to include into Via header
     */
    public readonly viaHostName!: pulumi.Output<string>;
    /**
     * Specifies whether to append, remove, or preserve a Via header in an HTTP request
     */
    public readonly viaRequest!: pulumi.Output<string>;
    /**
     * Specifies whether to append, remove, or preserve a Via header in an HTTP request
     */
    public readonly viaResponse!: pulumi.Output<string>;
    /**
     * Specifies alternative XFF headers instead of the default X-forwarded-for header.
     */
    public readonly xffAlternativeNames!: pulumi.Output<string[]>;

    /**
     * Create a ProfileHttp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProfileHttpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ProfileHttpArgs | ProfileHttpState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ProfileHttpState | undefined;
            resourceInputs["acceptXff"] = state ? state.acceptXff : undefined;
            resourceInputs["appService"] = state ? state.appService : undefined;
            resourceInputs["basicAuthRealm"] = state ? state.basicAuthRealm : undefined;
            resourceInputs["defaultsFrom"] = state ? state.defaultsFrom : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["encryptCookieSecret"] = state ? state.encryptCookieSecret : undefined;
            resourceInputs["encryptCookies"] = state ? state.encryptCookies : undefined;
            resourceInputs["fallbackHost"] = state ? state.fallbackHost : undefined;
            resourceInputs["fallbackStatusCodes"] = state ? state.fallbackStatusCodes : undefined;
            resourceInputs["headErase"] = state ? state.headErase : undefined;
            resourceInputs["headInsert"] = state ? state.headInsert : undefined;
            resourceInputs["insertXforwardedFor"] = state ? state.insertXforwardedFor : undefined;
            resourceInputs["lwsSeparator"] = state ? state.lwsSeparator : undefined;
            resourceInputs["lwsWidth"] = state ? state.lwsWidth : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["oneconnectTransformations"] = state ? state.oneconnectTransformations : undefined;
            resourceInputs["proxyType"] = state ? state.proxyType : undefined;
            resourceInputs["redirectRewrite"] = state ? state.redirectRewrite : undefined;
            resourceInputs["requestChunking"] = state ? state.requestChunking : undefined;
            resourceInputs["responseChunking"] = state ? state.responseChunking : undefined;
            resourceInputs["responseHeadersPermitteds"] = state ? state.responseHeadersPermitteds : undefined;
            resourceInputs["serverAgentName"] = state ? state.serverAgentName : undefined;
            resourceInputs["tmPartition"] = state ? state.tmPartition : undefined;
            resourceInputs["viaHostName"] = state ? state.viaHostName : undefined;
            resourceInputs["viaRequest"] = state ? state.viaRequest : undefined;
            resourceInputs["viaResponse"] = state ? state.viaResponse : undefined;
            resourceInputs["xffAlternativeNames"] = state ? state.xffAlternativeNames : undefined;
        } else {
            const args = argsOrState as ProfileHttpArgs | undefined;
            if ((!args || args.name === undefined) && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["acceptXff"] = args ? args.acceptXff : undefined;
            resourceInputs["appService"] = args ? args.appService : undefined;
            resourceInputs["basicAuthRealm"] = args ? args.basicAuthRealm : undefined;
            resourceInputs["defaultsFrom"] = args ? args.defaultsFrom : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["encryptCookieSecret"] = args ? args.encryptCookieSecret : undefined;
            resourceInputs["encryptCookies"] = args ? args.encryptCookies : undefined;
            resourceInputs["fallbackHost"] = args ? args.fallbackHost : undefined;
            resourceInputs["fallbackStatusCodes"] = args ? args.fallbackStatusCodes : undefined;
            resourceInputs["headErase"] = args ? args.headErase : undefined;
            resourceInputs["headInsert"] = args ? args.headInsert : undefined;
            resourceInputs["insertXforwardedFor"] = args ? args.insertXforwardedFor : undefined;
            resourceInputs["lwsSeparator"] = args ? args.lwsSeparator : undefined;
            resourceInputs["lwsWidth"] = args ? args.lwsWidth : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["oneconnectTransformations"] = args ? args.oneconnectTransformations : undefined;
            resourceInputs["proxyType"] = args ? args.proxyType : undefined;
            resourceInputs["redirectRewrite"] = args ? args.redirectRewrite : undefined;
            resourceInputs["requestChunking"] = args ? args.requestChunking : undefined;
            resourceInputs["responseChunking"] = args ? args.responseChunking : undefined;
            resourceInputs["responseHeadersPermitteds"] = args ? args.responseHeadersPermitteds : undefined;
            resourceInputs["serverAgentName"] = args ? args.serverAgentName : undefined;
            resourceInputs["tmPartition"] = args ? args.tmPartition : undefined;
            resourceInputs["viaHostName"] = args ? args.viaHostName : undefined;
            resourceInputs["viaRequest"] = args ? args.viaRequest : undefined;
            resourceInputs["viaResponse"] = args ? args.viaResponse : undefined;
            resourceInputs["xffAlternativeNames"] = args ? args.xffAlternativeNames : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProfileHttp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ProfileHttp resources.
 */
export interface ProfileHttpState {
    /**
     * Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.
     */
    acceptXff?: pulumi.Input<string>;
    /**
     * The application service to which the object belongs.
     */
    appService?: pulumi.Input<string>;
    /**
     * Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is `none`
     */
    basicAuthRealm?: pulumi.Input<string>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * Specifies user-defined description.
     */
    description?: pulumi.Input<string>;
    /**
     * Type a passphrase for cookie encryption.
     */
    encryptCookieSecret?: pulumi.Input<string>;
    /**
     * Type the cookie names for the system to encrypt.
     */
    encryptCookies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number
     */
    fallbackHost?: pulumi.Input<string>;
    /**
     * Specifies one or more three-digit status codes that can be returned by an HTTP server,that should trigger a redirection to the fallback host.
     */
    fallbackStatusCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the header string that you want to erase from an HTTP request. Default is `none`.
     */
    headErase?: pulumi.Input<string>;
    /**
     * Specifies a quoted header string that you want to insert into an HTTP request.Default is `none`.
     */
    headInsert?: pulumi.Input<string>;
    /**
     * Specifies, when enabled, that the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling. The default is `Disabled`.
     */
    insertXforwardedFor?: pulumi.Input<string>;
    /**
     * Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you
     * specify in the LWS Maximum Columns setting.
     */
    lwsSeparator?: pulumi.Input<string>;
    /**
     * Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you specify in the LWS Maximum Columns setting.
     */
    lwsWidth?: pulumi.Input<number>;
    /**
     * Specifies the name of the http profile,name of Profile should be full path. Full path is the combination of the `partition + profile name`,For example `/Common/test-http-profile`.
     */
    name?: pulumi.Input<string>;
    /**
     * Enables the system to perform HTTP header transformations for the purpose of  keeping server-side connections open. This feature requires configuration of a OneConnect profile
     */
    oneconnectTransformations?: pulumi.Input<string>;
    /**
     * Specifies the proxy mode for this profile: reverse, explicit, or transparent. The default is `reverse`.
     */
    proxyType?: pulumi.Input<string>;
    /**
     * Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses. The default is `none`.
     */
    redirectRewrite?: pulumi.Input<string>;
    /**
     * Specifies how the system handles HTTP content that is chunked by a client. The default is `preserve`.
     */
    requestChunking?: pulumi.Input<string>;
    /**
     * Specifies how the system handles HTTP content that is chunked by a server. The default is `selective`.
     */
    responseChunking?: pulumi.Input<string>;
    /**
     * Specifies headers that the BIG-IP system allows in an HTTP response.If you are specifying more than one header, separate the headers with a blank space.
     */
    responseHeadersPermitteds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is BigIP. If no
     * string is specified, then no Server header will be added to such responses
     */
    serverAgentName?: pulumi.Input<string>;
    /**
     * Displays the administrative partition within which this profile resides.
     */
    tmPartition?: pulumi.Input<string>;
    /**
     * Specifies the hostname to include into Via header
     */
    viaHostName?: pulumi.Input<string>;
    /**
     * Specifies whether to append, remove, or preserve a Via header in an HTTP request
     */
    viaRequest?: pulumi.Input<string>;
    /**
     * Specifies whether to append, remove, or preserve a Via header in an HTTP request
     */
    viaResponse?: pulumi.Input<string>;
    /**
     * Specifies alternative XFF headers instead of the default X-forwarded-for header.
     */
    xffAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a ProfileHttp resource.
 */
export interface ProfileHttpArgs {
    /**
     * Enables or disables trusting the client IP address, and statistics from the client IP address, based on the request's XFF (X-forwarded-for) headers, if they exist.
     */
    acceptXff?: pulumi.Input<string>;
    /**
     * The application service to which the object belongs.
     */
    appService?: pulumi.Input<string>;
    /**
     * Specifies a quoted string for the basic authentication realm. The system sends this string to a client whenever authorization fails. The default value is `none`
     */
    basicAuthRealm?: pulumi.Input<string>;
    /**
     * Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
     */
    defaultsFrom?: pulumi.Input<string>;
    /**
     * Specifies user-defined description.
     */
    description?: pulumi.Input<string>;
    /**
     * Type a passphrase for cookie encryption.
     */
    encryptCookieSecret?: pulumi.Input<string>;
    /**
     * Type the cookie names for the system to encrypt.
     */
    encryptCookies?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies an HTTP fallback host. HTTP redirection allows you to redirect HTTP traffic to another protocol identifier, host name, port number
     */
    fallbackHost?: pulumi.Input<string>;
    /**
     * Specifies one or more three-digit status codes that can be returned by an HTTP server,that should trigger a redirection to the fallback host.
     */
    fallbackStatusCodes?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the header string that you want to erase from an HTTP request. Default is `none`.
     */
    headErase?: pulumi.Input<string>;
    /**
     * Specifies a quoted header string that you want to insert into an HTTP request.Default is `none`.
     */
    headInsert?: pulumi.Input<string>;
    /**
     * Specifies, when enabled, that the system inserts an X-Forwarded-For header in an HTTP request with the client IP address, to use with connection pooling. The default is `Disabled`.
     */
    insertXforwardedFor?: pulumi.Input<string>;
    /**
     * Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you
     * specify in the LWS Maximum Columns setting.
     */
    lwsSeparator?: pulumi.Input<string>;
    /**
     * Specifies the linear white space (LWS) separator that the system inserts when a header exceeds the maximum width you specify in the LWS Maximum Columns setting.
     */
    lwsWidth?: pulumi.Input<number>;
    /**
     * Specifies the name of the http profile,name of Profile should be full path. Full path is the combination of the `partition + profile name`,For example `/Common/test-http-profile`.
     */
    name: pulumi.Input<string>;
    /**
     * Enables the system to perform HTTP header transformations for the purpose of  keeping server-side connections open. This feature requires configuration of a OneConnect profile
     */
    oneconnectTransformations?: pulumi.Input<string>;
    /**
     * Specifies the proxy mode for this profile: reverse, explicit, or transparent. The default is `reverse`.
     */
    proxyType?: pulumi.Input<string>;
    /**
     * Specifies whether the system rewrites the URIs that are part of HTTP redirect (3XX) responses. The default is `none`.
     */
    redirectRewrite?: pulumi.Input<string>;
    /**
     * Specifies how the system handles HTTP content that is chunked by a client. The default is `preserve`.
     */
    requestChunking?: pulumi.Input<string>;
    /**
     * Specifies how the system handles HTTP content that is chunked by a server. The default is `selective`.
     */
    responseChunking?: pulumi.Input<string>;
    /**
     * Specifies headers that the BIG-IP system allows in an HTTP response.If you are specifying more than one header, separate the headers with a blank space.
     */
    responseHeadersPermitteds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Specifies the value of the Server header in responses that the BIG-IP itself generates. The default is BigIP. If no
     * string is specified, then no Server header will be added to such responses
     */
    serverAgentName?: pulumi.Input<string>;
    /**
     * Displays the administrative partition within which this profile resides.
     */
    tmPartition?: pulumi.Input<string>;
    /**
     * Specifies the hostname to include into Via header
     */
    viaHostName?: pulumi.Input<string>;
    /**
     * Specifies whether to append, remove, or preserve a Via header in an HTTP request
     */
    viaRequest?: pulumi.Input<string>;
    /**
     * Specifies whether to append, remove, or preserve a Via header in an HTTP request
     */
    viaResponse?: pulumi.Input<string>;
    /**
     * Specifies alternative XFF headers instead of the default X-forwarded-for header.
     */
    xffAlternativeNames?: pulumi.Input<pulumi.Input<string>[]>;
}
