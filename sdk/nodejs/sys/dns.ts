// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * `bigip_ltm_dns` Configures DNS server on F5 BIG-IP
 * 
 * 
 * 
 * 
 * ## Example Usage
 * 
 * 
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 * 
 * const dns1 = new f5bigip.LtmDns("dns1", {
 *     description: "/Common/DNS1",
 *     nameServers: ["1.1.1.1"],
 *     numberofDots: 2,
 *     search: ["f5.com"],
 * });
 * ```
 */
export class Dns extends pulumi.CustomResource {
    /**
     * Get an existing Dns resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DnsState, opts?: pulumi.CustomResourceOptions): Dns {
        return new Dns(name, <any>state, { ...opts, id: id });
    }

    /**
     * Name of the Dns Servers
     */
    public readonly description: pulumi.Output<string>;
    /**
     * Name or IP address of the DNS server
     */
    public readonly nameServers: pulumi.Output<string[] | undefined>;
    /**
     * Configures the number of dots needed in a name before an initial absolute query will be made.
     */
    public readonly numberOfDots: pulumi.Output<number | undefined>;
    /**
     * Specify what domains you want to search
     */
    public readonly searches: pulumi.Output<string[] | undefined>;

    /**
     * Create a Dns resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DnsArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DnsArgs | DnsState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: DnsState = argsOrState as DnsState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["nameServers"] = state ? state.nameServers : undefined;
            inputs["numberOfDots"] = state ? state.numberOfDots : undefined;
            inputs["searches"] = state ? state.searches : undefined;
        } else {
            const args = argsOrState as DnsArgs | undefined;
            if (!args || args.description === undefined) {
                throw new Error("Missing required property 'description'");
            }
            inputs["description"] = args ? args.description : undefined;
            inputs["nameServers"] = args ? args.nameServers : undefined;
            inputs["numberOfDots"] = args ? args.numberOfDots : undefined;
            inputs["searches"] = args ? args.searches : undefined;
        }
        super("f5bigip:sys/dns:Dns", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Dns resources.
 */
export interface DnsState {
    /**
     * Name of the Dns Servers
     */
    readonly description?: pulumi.Input<string>;
    /**
     * Name or IP address of the DNS server
     */
    readonly nameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Configures the number of dots needed in a name before an initial absolute query will be made.
     */
    readonly numberOfDots?: pulumi.Input<number>;
    /**
     * Specify what domains you want to search
     */
    readonly searches?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a Dns resource.
 */
export interface DnsArgs {
    /**
     * Name of the Dns Servers
     */
    readonly description: pulumi.Input<string>;
    /**
     * Name or IP address of the DNS server
     */
    readonly nameServers?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Configures the number of dots needed in a name before an initial absolute query will be made.
     */
    readonly numberOfDots?: pulumi.Input<number>;
    /**
     * Specify what domains you want to search
     */
    readonly searches?: pulumi.Input<pulumi.Input<string>[]>;
}
