// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class IApp extends pulumi.CustomResource {
    /**
     * Get an existing IApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IAppState, opts?: pulumi.CustomResourceOptions): IApp {
        return new IApp(name, <any>state, { ...opts, id: id });
    }

    /**
     * Address of the Iapp which needs to be Iappensed
     */
    public readonly description: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly devicegroup: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly executeAction: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly inheritedDevicegroup: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly inheritedTrafficGroup: pulumi.Output<string | undefined>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    public readonly jsonfile: pulumi.Output<string | undefined>;
    public readonly lists: pulumi.Output<{ encrypted?: string, value?: string }[] | undefined>;
    public readonly metadatas: pulumi.Output<{ persists?: string, value?: string }[] | undefined>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    public readonly name: pulumi.Output<string | undefined>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    public readonly partition: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly strictUpdates: pulumi.Output<string | undefined>;
    public readonly tables: pulumi.Output<{ columnNames?: string[], encryptedColumns?: string, name?: string, rows?: { rows?: string[] }[] }[] | undefined>;
    /**
     * BIG-IP password
     */
    public readonly template: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly templateModified: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly templatePrerequisiteErrors: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    public readonly trafficGroup: pulumi.Output<string | undefined>;
    public readonly variables: pulumi.Output<{ encrypted?: string, name?: string, value?: string }[] | undefined>;

    /**
     * Create a IApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: IAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IAppArgs | IAppState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: IAppState = argsOrState as IAppState | undefined;
            inputs["description"] = state ? state.description : undefined;
            inputs["devicegroup"] = state ? state.devicegroup : undefined;
            inputs["executeAction"] = state ? state.executeAction : undefined;
            inputs["inheritedDevicegroup"] = state ? state.inheritedDevicegroup : undefined;
            inputs["inheritedTrafficGroup"] = state ? state.inheritedTrafficGroup : undefined;
            inputs["jsonfile"] = state ? state.jsonfile : undefined;
            inputs["lists"] = state ? state.lists : undefined;
            inputs["metadatas"] = state ? state.metadatas : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["partition"] = state ? state.partition : undefined;
            inputs["strictUpdates"] = state ? state.strictUpdates : undefined;
            inputs["tables"] = state ? state.tables : undefined;
            inputs["template"] = state ? state.template : undefined;
            inputs["templateModified"] = state ? state.templateModified : undefined;
            inputs["templatePrerequisiteErrors"] = state ? state.templatePrerequisiteErrors : undefined;
            inputs["trafficGroup"] = state ? state.trafficGroup : undefined;
            inputs["variables"] = state ? state.variables : undefined;
        } else {
            const args = argsOrState as IAppArgs | undefined;
            inputs["description"] = args ? args.description : undefined;
            inputs["devicegroup"] = args ? args.devicegroup : undefined;
            inputs["executeAction"] = args ? args.executeAction : undefined;
            inputs["inheritedDevicegroup"] = args ? args.inheritedDevicegroup : undefined;
            inputs["inheritedTrafficGroup"] = args ? args.inheritedTrafficGroup : undefined;
            inputs["jsonfile"] = args ? args.jsonfile : undefined;
            inputs["lists"] = args ? args.lists : undefined;
            inputs["metadatas"] = args ? args.metadatas : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["partition"] = args ? args.partition : undefined;
            inputs["strictUpdates"] = args ? args.strictUpdates : undefined;
            inputs["tables"] = args ? args.tables : undefined;
            inputs["template"] = args ? args.template : undefined;
            inputs["templateModified"] = args ? args.templateModified : undefined;
            inputs["templatePrerequisiteErrors"] = args ? args.templatePrerequisiteErrors : undefined;
            inputs["trafficGroup"] = args ? args.trafficGroup : undefined;
            inputs["variables"] = args ? args.variables : undefined;
        }
        super("f5bigip:sys/iApp:IApp", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IApp resources.
 */
export interface IAppState {
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly description?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly devicegroup?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly executeAction?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly inheritedDevicegroup?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly inheritedTrafficGroup?: pulumi.Input<string>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly jsonfile?: pulumi.Input<string>;
    readonly lists?: pulumi.Input<pulumi.Input<{ encrypted?: pulumi.Input<string>, value?: pulumi.Input<string> }>[]>;
    readonly metadatas?: pulumi.Input<pulumi.Input<{ persists?: pulumi.Input<string>, value?: pulumi.Input<string> }>[]>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly partition?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly strictUpdates?: pulumi.Input<string>;
    readonly tables?: pulumi.Input<pulumi.Input<{ columnNames?: pulumi.Input<pulumi.Input<string>[]>, encryptedColumns?: pulumi.Input<string>, name?: pulumi.Input<string>, rows?: pulumi.Input<pulumi.Input<{ rows?: pulumi.Input<pulumi.Input<string>[]> }>[]> }>[]>;
    /**
     * BIG-IP password
     */
    readonly template?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly templateModified?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly templatePrerequisiteErrors?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly trafficGroup?: pulumi.Input<string>;
    readonly variables?: pulumi.Input<pulumi.Input<{ encrypted?: pulumi.Input<string>, name?: pulumi.Input<string>, value?: pulumi.Input<string> }>[]>;
}

/**
 * The set of arguments for constructing a IApp resource.
 */
export interface IAppArgs {
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly description?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly devicegroup?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly executeAction?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly inheritedDevicegroup?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly inheritedTrafficGroup?: pulumi.Input<string>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly jsonfile?: pulumi.Input<string>;
    readonly lists?: pulumi.Input<pulumi.Input<{ encrypted?: pulumi.Input<string>, value?: pulumi.Input<string> }>[]>;
    readonly metadatas?: pulumi.Input<pulumi.Input<{ persists?: pulumi.Input<string>, value?: pulumi.Input<string> }>[]>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly name?: pulumi.Input<string>;
    /**
     * Address of the Iapp which needs to be Iappensed
     */
    readonly partition?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly strictUpdates?: pulumi.Input<string>;
    readonly tables?: pulumi.Input<pulumi.Input<{ columnNames?: pulumi.Input<pulumi.Input<string>[]>, encryptedColumns?: pulumi.Input<string>, name?: pulumi.Input<string>, rows?: pulumi.Input<pulumi.Input<{ rows?: pulumi.Input<pulumi.Input<string>[]> }>[]> }>[]>;
    /**
     * BIG-IP password
     */
    readonly template?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly templateModified?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly templatePrerequisiteErrors?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    readonly trafficGroup?: pulumi.Input<string>;
    readonly variables?: pulumi.Input<pulumi.Input<{ encrypted?: pulumi.Input<string>, name?: pulumi.Input<string>, value?: pulumi.Input<string> }>[]>;
}
