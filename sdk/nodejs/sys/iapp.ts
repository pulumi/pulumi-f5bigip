// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * `f5bigip.sys.IApp` resource helps you to deploy Application Services template that can be used to automate and orchestrate Layer 4-7 applications service deployments using F5 Network.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 * import * as std from "@pulumi/std";
 *
 * const simplehttp = new f5bigip.sys.IApp("simplehttp", {
 *     name: "simplehttp",
 *     jsonfile: std.file({
 *         input: "simplehttp.json",
 *     }).then(invoke => invoke.result),
 * });
 * ```
 *
 * ### Json File
 */
export class IApp extends pulumi.CustomResource {
    /**
     * Get an existing IApp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IAppState, opts?: pulumi.CustomResourceOptions): IApp {
        return new IApp(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5bigip:sys/iApp:IApp';

    /**
     * Returns true if the given object is an instance of IApp.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IApp {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IApp.__pulumiType;
    }

    /**
     * User defined description.
     */
    declare public readonly description: pulumi.Output<string | undefined>;
    /**
     * BIG-IP password
     */
    declare public readonly devicegroup: pulumi.Output<string>;
    /**
     * Run the specified template action associated with the application, this option can be specified in `json` with `executeAction`, value specified with `executeAction` attribute take precedence over `json` value
     */
    declare public readonly executeAction: pulumi.Output<string>;
    /**
     * Read-only. Shows whether the application folder will automatically remain with the same device-group as its parent folder. Use 'device-group default' or 'device-group non-default' to set this.
     */
    declare public readonly inheritedDevicegroup: pulumi.Output<string | undefined>;
    /**
     * Read-only. Shows whether the application folder will automatically remain with the same traffic-group as its parent folder. Use 'traffic-group default' or 'traffic-group non-default' to set this.
     */
    declare public readonly inheritedTrafficGroup: pulumi.Output<string | undefined>;
    /**
     * Refer to the Json file which will be deployed on F5 BIG-IP.
     */
    declare public readonly jsonfile: pulumi.Output<string>;
    /**
     * string values
     */
    declare public readonly lists: pulumi.Output<outputs.sys.IAppList[] | undefined>;
    /**
     * User defined generic data for the application service. It is a name and value pair.
     */
    declare public readonly metadatas: pulumi.Output<outputs.sys.IAppMetadata[] | undefined>;
    /**
     * Name of the iApp.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Displays the administrative partition within which the application resides.
     */
    declare public readonly partition: pulumi.Output<string | undefined>;
    /**
     * Specifies whether configuration objects contained in the application may be directly modified, outside the context of the system's application management interfaces.
     */
    declare public readonly strictUpdates: pulumi.Output<string | undefined>;
    declare public readonly tables: pulumi.Output<outputs.sys.IAppTable[] | undefined>;
    /**
     * The template defines the configuration for the application. This may be changed after the application has been created to move the application to a new template.
     */
    declare public readonly template: pulumi.Output<string | undefined>;
    /**
     * Indicates that the application template used to deploy the application has been modified. The application should be updated to make use of the latest changes.
     */
    declare public readonly templateModified: pulumi.Output<string | undefined>;
    /**
     * Indicates any missing prerequisites associated with the template that defines this application.
     */
    declare public readonly templatePrerequisiteErrors: pulumi.Output<string | undefined>;
    /**
     * The name of the traffic group that the application service is assigned to.
     */
    declare public readonly trafficGroup: pulumi.Output<string | undefined>;
    declare public readonly variables: pulumi.Output<outputs.sys.IAppVariable[] | undefined>;

    /**
     * Create a IApp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IAppArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IAppArgs | IAppState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IAppState | undefined;
            resourceInputs["description"] = state?.description;
            resourceInputs["devicegroup"] = state?.devicegroup;
            resourceInputs["executeAction"] = state?.executeAction;
            resourceInputs["inheritedDevicegroup"] = state?.inheritedDevicegroup;
            resourceInputs["inheritedTrafficGroup"] = state?.inheritedTrafficGroup;
            resourceInputs["jsonfile"] = state?.jsonfile;
            resourceInputs["lists"] = state?.lists;
            resourceInputs["metadatas"] = state?.metadatas;
            resourceInputs["name"] = state?.name;
            resourceInputs["partition"] = state?.partition;
            resourceInputs["strictUpdates"] = state?.strictUpdates;
            resourceInputs["tables"] = state?.tables;
            resourceInputs["template"] = state?.template;
            resourceInputs["templateModified"] = state?.templateModified;
            resourceInputs["templatePrerequisiteErrors"] = state?.templatePrerequisiteErrors;
            resourceInputs["trafficGroup"] = state?.trafficGroup;
            resourceInputs["variables"] = state?.variables;
        } else {
            const args = argsOrState as IAppArgs | undefined;
            if (args?.jsonfile === undefined && !opts.urn) {
                throw new Error("Missing required property 'jsonfile'");
            }
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["description"] = args?.description;
            resourceInputs["devicegroup"] = args?.devicegroup;
            resourceInputs["executeAction"] = args?.executeAction;
            resourceInputs["inheritedDevicegroup"] = args?.inheritedDevicegroup;
            resourceInputs["inheritedTrafficGroup"] = args?.inheritedTrafficGroup;
            resourceInputs["jsonfile"] = args?.jsonfile;
            resourceInputs["lists"] = args?.lists;
            resourceInputs["metadatas"] = args?.metadatas;
            resourceInputs["name"] = args?.name;
            resourceInputs["partition"] = args?.partition;
            resourceInputs["strictUpdates"] = args?.strictUpdates;
            resourceInputs["tables"] = args?.tables;
            resourceInputs["template"] = args?.template;
            resourceInputs["templateModified"] = args?.templateModified;
            resourceInputs["templatePrerequisiteErrors"] = args?.templatePrerequisiteErrors;
            resourceInputs["trafficGroup"] = args?.trafficGroup;
            resourceInputs["variables"] = args?.variables;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IApp.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IApp resources.
 */
export interface IAppState {
    /**
     * User defined description.
     */
    description?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    devicegroup?: pulumi.Input<string>;
    /**
     * Run the specified template action associated with the application, this option can be specified in `json` with `executeAction`, value specified with `executeAction` attribute take precedence over `json` value
     */
    executeAction?: pulumi.Input<string>;
    /**
     * Read-only. Shows whether the application folder will automatically remain with the same device-group as its parent folder. Use 'device-group default' or 'device-group non-default' to set this.
     */
    inheritedDevicegroup?: pulumi.Input<string>;
    /**
     * Read-only. Shows whether the application folder will automatically remain with the same traffic-group as its parent folder. Use 'traffic-group default' or 'traffic-group non-default' to set this.
     */
    inheritedTrafficGroup?: pulumi.Input<string>;
    /**
     * Refer to the Json file which will be deployed on F5 BIG-IP.
     */
    jsonfile?: pulumi.Input<string>;
    /**
     * string values
     */
    lists?: pulumi.Input<pulumi.Input<inputs.sys.IAppList>[]>;
    /**
     * User defined generic data for the application service. It is a name and value pair.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.sys.IAppMetadata>[]>;
    /**
     * Name of the iApp.
     */
    name?: pulumi.Input<string>;
    /**
     * Displays the administrative partition within which the application resides.
     */
    partition?: pulumi.Input<string>;
    /**
     * Specifies whether configuration objects contained in the application may be directly modified, outside the context of the system's application management interfaces.
     */
    strictUpdates?: pulumi.Input<string>;
    tables?: pulumi.Input<pulumi.Input<inputs.sys.IAppTable>[]>;
    /**
     * The template defines the configuration for the application. This may be changed after the application has been created to move the application to a new template.
     */
    template?: pulumi.Input<string>;
    /**
     * Indicates that the application template used to deploy the application has been modified. The application should be updated to make use of the latest changes.
     */
    templateModified?: pulumi.Input<string>;
    /**
     * Indicates any missing prerequisites associated with the template that defines this application.
     */
    templatePrerequisiteErrors?: pulumi.Input<string>;
    /**
     * The name of the traffic group that the application service is assigned to.
     */
    trafficGroup?: pulumi.Input<string>;
    variables?: pulumi.Input<pulumi.Input<inputs.sys.IAppVariable>[]>;
}

/**
 * The set of arguments for constructing a IApp resource.
 */
export interface IAppArgs {
    /**
     * User defined description.
     */
    description?: pulumi.Input<string>;
    /**
     * BIG-IP password
     */
    devicegroup?: pulumi.Input<string>;
    /**
     * Run the specified template action associated with the application, this option can be specified in `json` with `executeAction`, value specified with `executeAction` attribute take precedence over `json` value
     */
    executeAction?: pulumi.Input<string>;
    /**
     * Read-only. Shows whether the application folder will automatically remain with the same device-group as its parent folder. Use 'device-group default' or 'device-group non-default' to set this.
     */
    inheritedDevicegroup?: pulumi.Input<string>;
    /**
     * Read-only. Shows whether the application folder will automatically remain with the same traffic-group as its parent folder. Use 'traffic-group default' or 'traffic-group non-default' to set this.
     */
    inheritedTrafficGroup?: pulumi.Input<string>;
    /**
     * Refer to the Json file which will be deployed on F5 BIG-IP.
     */
    jsonfile: pulumi.Input<string>;
    /**
     * string values
     */
    lists?: pulumi.Input<pulumi.Input<inputs.sys.IAppList>[]>;
    /**
     * User defined generic data for the application service. It is a name and value pair.
     */
    metadatas?: pulumi.Input<pulumi.Input<inputs.sys.IAppMetadata>[]>;
    /**
     * Name of the iApp.
     */
    name: pulumi.Input<string>;
    /**
     * Displays the administrative partition within which the application resides.
     */
    partition?: pulumi.Input<string>;
    /**
     * Specifies whether configuration objects contained in the application may be directly modified, outside the context of the system's application management interfaces.
     */
    strictUpdates?: pulumi.Input<string>;
    tables?: pulumi.Input<pulumi.Input<inputs.sys.IAppTable>[]>;
    /**
     * The template defines the configuration for the application. This may be changed after the application has been created to move the application to a new template.
     */
    template?: pulumi.Input<string>;
    /**
     * Indicates that the application template used to deploy the application has been modified. The application should be updated to make use of the latest changes.
     */
    templateModified?: pulumi.Input<string>;
    /**
     * Indicates any missing prerequisites associated with the template that defines this application.
     */
    templatePrerequisiteErrors?: pulumi.Input<string>;
    /**
     * The name of the traffic group that the application service is assigned to.
     */
    trafficGroup?: pulumi.Input<string>;
    variables?: pulumi.Input<pulumi.Input<inputs.sys.IAppVariable>[]>;
}
