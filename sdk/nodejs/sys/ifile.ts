// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * ## Import
 *
 * System iFiles can be imported using their full path:
 *
 * bash
 *
 * ```sh
 * $ pulumi import f5bigip:sys/ifile:Ifile example /Common/my-ifile
 * ```
 *
 * For iFiles with sub-paths:
 *
 * bash
 *
 * ```sh
 * $ pulumi import f5bigip:sys/ifile:Ifile example /Common/templates/my-ifile
 * ```
 */
export class Ifile extends pulumi.CustomResource {
    /**
     * Get an existing Ifile resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IfileState, opts?: pulumi.CustomResourceOptions): Ifile {
        return new Ifile(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'f5bigip:sys/ifile:Ifile';

    /**
     * Returns true if the given object is an instance of Ifile.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ifile {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ifile.__pulumiType;
    }

    /**
     * MD5 checksum of the iFile content, automatically calculated by BIG-IP.
     */
    declare public /*out*/ readonly checksum: pulumi.Output<string>;
    /**
     * The content of the iFile. This can be inline text, file content loaded with `file()`, or dynamically generated content. This field is marked as sensitive.
     */
    declare public readonly content: pulumi.Output<string>;
    /**
     * Name of the system iFile to be created on BIG-IP. Changing this forces a new resource to be created.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Partition where the iFile will be stored. Defaults to `Common`.
     */
    declare public readonly partition: pulumi.Output<string | undefined>;
    /**
     * Size of the iFile content in bytes.
     */
    declare public /*out*/ readonly size: pulumi.Output<number>;
    /**
     * Subdirectory within the partition for organizing iFiles hierarchically.
     */
    declare public readonly subPath: pulumi.Output<string | undefined>;

    /**
     * Create a Ifile resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IfileArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IfileArgs | IfileState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IfileState | undefined;
            resourceInputs["checksum"] = state?.checksum;
            resourceInputs["content"] = state?.content;
            resourceInputs["name"] = state?.name;
            resourceInputs["partition"] = state?.partition;
            resourceInputs["size"] = state?.size;
            resourceInputs["subPath"] = state?.subPath;
        } else {
            const args = argsOrState as IfileArgs | undefined;
            if (args?.content === undefined && !opts.urn) {
                throw new Error("Missing required property 'content'");
            }
            if (args?.name === undefined && !opts.urn) {
                throw new Error("Missing required property 'name'");
            }
            resourceInputs["content"] = args?.content ? pulumi.secret(args.content) : undefined;
            resourceInputs["name"] = args?.name;
            resourceInputs["partition"] = args?.partition;
            resourceInputs["subPath"] = args?.subPath;
            resourceInputs["checksum"] = undefined /*out*/;
            resourceInputs["size"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["content"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(Ifile.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ifile resources.
 */
export interface IfileState {
    /**
     * MD5 checksum of the iFile content, automatically calculated by BIG-IP.
     */
    checksum?: pulumi.Input<string>;
    /**
     * The content of the iFile. This can be inline text, file content loaded with `file()`, or dynamically generated content. This field is marked as sensitive.
     */
    content?: pulumi.Input<string>;
    /**
     * Name of the system iFile to be created on BIG-IP. Changing this forces a new resource to be created.
     */
    name?: pulumi.Input<string>;
    /**
     * Partition where the iFile will be stored. Defaults to `Common`.
     */
    partition?: pulumi.Input<string>;
    /**
     * Size of the iFile content in bytes.
     */
    size?: pulumi.Input<number>;
    /**
     * Subdirectory within the partition for organizing iFiles hierarchically.
     */
    subPath?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ifile resource.
 */
export interface IfileArgs {
    /**
     * The content of the iFile. This can be inline text, file content loaded with `file()`, or dynamically generated content. This field is marked as sensitive.
     */
    content: pulumi.Input<string>;
    /**
     * Name of the system iFile to be created on BIG-IP. Changing this forces a new resource to be created.
     */
    name: pulumi.Input<string>;
    /**
     * Partition where the iFile will be stored. Defaults to `Common`.
     */
    partition?: pulumi.Input<string>;
    /**
     * Subdirectory within the partition for organizing iFiles hierarchically.
     */
    subPath?: pulumi.Input<string>;
}
