// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Snmp extends pulumi.CustomResource {
    /**
     * Get an existing Snmp resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SnmpState, opts?: pulumi.CustomResourceOptions): Snmp {
        return new Snmp(name, <any>state, { ...opts, id: id });
    }

    /**
     * List of SNMP addresses
     */
    public readonly allowedaddresses: pulumi.Output<string[] | undefined>;
    /**
     * Contact Person email
     */
    public readonly sysContact: pulumi.Output<string | undefined>;
    /**
     * Location of the F5
     */
    public readonly sysLocation: pulumi.Output<string | undefined>;

    /**
     * Create a Snmp resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: SnmpArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SnmpArgs | SnmpState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state: SnmpState = argsOrState as SnmpState | undefined;
            inputs["allowedaddresses"] = state ? state.allowedaddresses : undefined;
            inputs["sysContact"] = state ? state.sysContact : undefined;
            inputs["sysLocation"] = state ? state.sysLocation : undefined;
        } else {
            const args = argsOrState as SnmpArgs | undefined;
            inputs["allowedaddresses"] = args ? args.allowedaddresses : undefined;
            inputs["sysContact"] = args ? args.sysContact : undefined;
            inputs["sysLocation"] = args ? args.sysLocation : undefined;
        }
        super("f5bigip:sys/snmp:Snmp", name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Snmp resources.
 */
export interface SnmpState {
    /**
     * List of SNMP addresses
     */
    readonly allowedaddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Contact Person email
     */
    readonly sysContact?: pulumi.Input<string>;
    /**
     * Location of the F5
     */
    readonly sysLocation?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Snmp resource.
 */
export interface SnmpArgs {
    /**
     * List of SNMP addresses
     */
    readonly allowedaddresses?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Contact Person email
     */
    readonly sysContact?: pulumi.Input<string>;
    /**
     * Location of the F5
     */
    readonly sysLocation?: pulumi.Input<string>;
}
