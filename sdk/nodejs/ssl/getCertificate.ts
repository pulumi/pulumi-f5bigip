// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 *
 * const test = f5bigip.ssl.getCertificate({
 *     name: "terraform_ssl_certificate",
 *     partition: "Common",
 * });
 * export const bigipSslCertificateName = test.then(test => test.name);
 * ```
 */
export function getCertificate(args: GetCertificateArgs, opts?: pulumi.InvokeOptions): Promise<GetCertificateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("f5bigip:ssl/getCertificate:getCertificate", {
        "name": args.name,
        "partition": args.partition,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificate.
 */
export interface GetCertificateArgs {
    /**
     * Name of the ssl_certificate
     */
    name: string;
    /**
     * partition of the ltm ssl_certificate
     */
    partition: string;
}

/**
 * A collection of values returned by getCertificate.
 */
export interface GetCertificateResult {
    readonly certificate: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Name of sslCertificate configured on bigip with full path
     */
    readonly name: string;
    /**
     * Bigip partition in which ssl-certificate is configured
     */
    readonly partition: string;
}
/**
 * Use this data source (`f5bigip.ssl.Certificate`) to get the ssl-certificate details available on BIG-IP
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as f5bigip from "@pulumi/f5bigip";
 *
 * const test = f5bigip.ssl.getCertificate({
 *     name: "terraform_ssl_certificate",
 *     partition: "Common",
 * });
 * export const bigipSslCertificateName = test.then(test => test.name);
 * ```
 */
export function getCertificateOutput(args: GetCertificateOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetCertificateResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("f5bigip:ssl/getCertificate:getCertificate", {
        "name": args.name,
        "partition": args.partition,
    }, opts);
}

/**
 * A collection of arguments for invoking getCertificate.
 */
export interface GetCertificateOutputArgs {
    /**
     * Name of the ssl_certificate
     */
    name: pulumi.Input<string>;
    /**
     * partition of the ltm ssl_certificate
     */
    partition: pulumi.Input<string>;
}
