// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Ltm
{
    /// <summary>
    /// `f5bigip.ltm.ProfileHttpCompress`  Virtual server HTTP compression profile configuration
    /// 
    /// 
    /// For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
    /// 
    /// 
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-bigip/blob/master/website/docs/r/bigip_ltm_profile_httpcompress.html.markdown.
    /// </summary>
    public partial class ProfileHttpCompress : Pulumi.CustomResource
    {
        /// <summary>
        /// Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
        /// </summary>
        [Output("contentTypeExcludes")]
        public Output<ImmutableArray<string>> ContentTypeExcludes { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
        /// </summary>
        [Output("contentTypeIncludes")]
        public Output<ImmutableArray<string>> ContentTypeIncludes { get; private set; } = null!;

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Output("defaultsFrom")]
        public Output<string?> DefaultsFrom { get; private set; } = null!;

        /// <summary>
        /// Name of the profile_httpcompress
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
        /// </summary>
        [Output("uriExcludes")]
        public Output<ImmutableArray<string>> UriExcludes { get; private set; } = null!;

        /// <summary>
        /// Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
        /// </summary>
        [Output("uriIncludes")]
        public Output<ImmutableArray<string>> UriIncludes { get; private set; } = null!;


        /// <summary>
        /// Create a ProfileHttpCompress resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProfileHttpCompress(string name, ProfileHttpCompressArgs args, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/profileHttpCompress:ProfileHttpCompress", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private ProfileHttpCompress(string name, Input<string> id, ProfileHttpCompressState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/profileHttpCompress:ProfileHttpCompress", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProfileHttpCompress resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProfileHttpCompress Get(string name, Input<string> id, ProfileHttpCompressState? state = null, CustomResourceOptions? options = null)
        {
            return new ProfileHttpCompress(name, id, state, options);
        }
    }

    public sealed class ProfileHttpCompressArgs : Pulumi.ResourceArgs
    {
        [Input("contentTypeExcludes")]
        private InputList<string>? _contentTypeExcludes;

        /// <summary>
        /// Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
        /// </summary>
        public InputList<string> ContentTypeExcludes
        {
            get => _contentTypeExcludes ?? (_contentTypeExcludes = new InputList<string>());
            set => _contentTypeExcludes = value;
        }

        [Input("contentTypeIncludes")]
        private InputList<string>? _contentTypeIncludes;

        /// <summary>
        /// Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
        /// </summary>
        public InputList<string> ContentTypeIncludes
        {
            get => _contentTypeIncludes ?? (_contentTypeIncludes = new InputList<string>());
            set => _contentTypeIncludes = value;
        }

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Input("defaultsFrom")]
        public Input<string>? DefaultsFrom { get; set; }

        /// <summary>
        /// Name of the profile_httpcompress
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("uriExcludes")]
        private InputList<string>? _uriExcludes;

        /// <summary>
        /// Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
        /// </summary>
        public InputList<string> UriExcludes
        {
            get => _uriExcludes ?? (_uriExcludes = new InputList<string>());
            set => _uriExcludes = value;
        }

        [Input("uriIncludes")]
        private InputList<string>? _uriIncludes;

        /// <summary>
        /// Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
        /// </summary>
        public InputList<string> UriIncludes
        {
            get => _uriIncludes ?? (_uriIncludes = new InputList<string>());
            set => _uriIncludes = value;
        }

        public ProfileHttpCompressArgs()
        {
        }
    }

    public sealed class ProfileHttpCompressState : Pulumi.ResourceArgs
    {
        [Input("contentTypeExcludes")]
        private InputList<string>? _contentTypeExcludes;

        /// <summary>
        /// Excludes a specified list of content types from compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
        /// </summary>
        public InputList<string> ContentTypeExcludes
        {
            get => _contentTypeExcludes ?? (_contentTypeExcludes = new InputList<string>());
            set => _contentTypeExcludes = value;
        }

        [Input("contentTypeIncludes")]
        private InputList<string>? _contentTypeIncludes;

        /// <summary>
        /// Specifies a list of content types for compression of HTTP Content-Type responses. Use a string list to specify a list of content types you want to compress.
        /// </summary>
        public InputList<string> ContentTypeIncludes
        {
            get => _contentTypeIncludes ?? (_contentTypeIncludes = new InputList<string>());
            set => _contentTypeIncludes = value;
        }

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Input("defaultsFrom")]
        public Input<string>? DefaultsFrom { get; set; }

        /// <summary>
        /// Name of the profile_httpcompress
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("uriExcludes")]
        private InputList<string>? _uriExcludes;

        /// <summary>
        /// Disables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you do not want to compress.
        /// </summary>
        public InputList<string> UriExcludes
        {
            get => _uriExcludes ?? (_uriExcludes = new InputList<string>());
            set => _uriExcludes = value;
        }

        [Input("uriIncludes")]
        private InputList<string>? _uriIncludes;

        /// <summary>
        /// Enables compression on a specified list of HTTP Request-URI responses. Use a regular expression to specify a list of URIs you want to compress.
        /// </summary>
        public InputList<string> UriIncludes
        {
            get => _uriIncludes ?? (_uriIncludes = new InputList<string>());
            set => _uriIncludes = value;
        }

        public ProfileHttpCompressState()
        {
        }
    }
}
