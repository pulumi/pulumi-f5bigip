// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Ltm
{
    /// <summary>
    /// `f5bigip.ltm.ProfileWebAcceleration` Configures a custom web-acceleration profile for use.
    /// 
    /// For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/sample-resource.
    /// 
    /// ## Example Usage
    /// 
    /// &lt;!--Start PulumiCodeChooser --&gt;
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using F5BigIP = Pulumi.F5BigIP;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var sample_resource = new F5BigIP.Ltm.ProfileWebAcceleration("sample-resource", new()
    ///     {
    ///         CacheMaxEntries = 201,
    ///         CacheSize = 101,
    ///         DefaultsFrom = "/Common/test2",
    ///         Name = "/Common/sample-resource",
    ///     });
    /// 
    /// });
    /// ```
    /// &lt;!--End PulumiCodeChooser --&gt;
    /// </summary>
    [F5BigIPResourceType("f5bigip:ltm/profileWebAcceleration:ProfileWebAcceleration")]
    public partial class ProfileWebAcceleration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
        /// </summary>
        [Output("cacheAgingRate")]
        public Output<int> CacheAgingRate { get; private set; } = null!;

        /// <summary>
        /// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
        /// </summary>
        [Output("cacheClientCacheControlMode")]
        public Output<string> CacheClientCacheControlMode { get; private set; } = null!;

        /// <summary>
        /// Inserts Age and Date headers in the response. The default value is `enabled`.
        /// </summary>
        [Output("cacheInsertAgeHeader")]
        public Output<string> CacheInsertAgeHeader { get; private set; } = null!;

        /// <summary>
        /// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
        /// </summary>
        [Output("cacheMaxAge")]
        public Output<int> CacheMaxAge { get; private set; } = null!;

        /// <summary>
        /// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
        /// </summary>
        [Output("cacheMaxEntries")]
        public Output<int> CacheMaxEntries { get; private set; } = null!;

        /// <summary>
        /// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
        /// </summary>
        [Output("cacheObjectMaxSize")]
        public Output<int> CacheObjectMaxSize { get; private set; } = null!;

        /// <summary>
        /// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
        /// </summary>
        [Output("cacheObjectMinSize")]
        public Output<int> CacheObjectMinSize { get; private set; } = null!;

        /// <summary>
        /// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
        /// </summary>
        [Output("cacheSize")]
        public Output<int> CacheSize { get; private set; } = null!;

        /// <summary>
        /// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
        /// </summary>
        [Output("cacheUriExcludes")]
        public Output<ImmutableArray<string>> CacheUriExcludes { get; private set; } = null!;

        /// <summary>
        /// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
        /// </summary>
        [Output("cacheUriIncludeOverrides")]
        public Output<ImmutableArray<string>> CacheUriIncludeOverrides { get; private set; } = null!;

        /// <summary>
        /// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
        /// </summary>
        [Output("cacheUriIncludes")]
        public Output<ImmutableArray<string>> CacheUriIncludes { get; private set; } = null!;

        /// <summary>
        /// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
        /// </summary>
        [Output("cacheUriPinneds")]
        public Output<ImmutableArray<string>> CacheUriPinneds { get; private set; } = null!;

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Output("defaultsFrom")]
        public Output<string> DefaultsFrom { get; private set; } = null!;

        /// <summary>
        /// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a ProfileWebAcceleration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProfileWebAcceleration(string name, ProfileWebAccelerationArgs args, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/profileWebAcceleration:ProfileWebAcceleration", name, args ?? new ProfileWebAccelerationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProfileWebAcceleration(string name, Input<string> id, ProfileWebAccelerationState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/profileWebAcceleration:ProfileWebAcceleration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProfileWebAcceleration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProfileWebAcceleration Get(string name, Input<string> id, ProfileWebAccelerationState? state = null, CustomResourceOptions? options = null)
        {
            return new ProfileWebAcceleration(name, id, state, options);
        }
    }

    public sealed class ProfileWebAccelerationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
        /// </summary>
        [Input("cacheAgingRate")]
        public Input<int>? CacheAgingRate { get; set; }

        /// <summary>
        /// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
        /// </summary>
        [Input("cacheClientCacheControlMode")]
        public Input<string>? CacheClientCacheControlMode { get; set; }

        /// <summary>
        /// Inserts Age and Date headers in the response. The default value is `enabled`.
        /// </summary>
        [Input("cacheInsertAgeHeader")]
        public Input<string>? CacheInsertAgeHeader { get; set; }

        /// <summary>
        /// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
        /// </summary>
        [Input("cacheMaxAge")]
        public Input<int>? CacheMaxAge { get; set; }

        /// <summary>
        /// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
        /// </summary>
        [Input("cacheMaxEntries")]
        public Input<int>? CacheMaxEntries { get; set; }

        /// <summary>
        /// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
        /// </summary>
        [Input("cacheObjectMaxSize")]
        public Input<int>? CacheObjectMaxSize { get; set; }

        /// <summary>
        /// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
        /// </summary>
        [Input("cacheObjectMinSize")]
        public Input<int>? CacheObjectMinSize { get; set; }

        /// <summary>
        /// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
        /// </summary>
        [Input("cacheSize")]
        public Input<int>? CacheSize { get; set; }

        [Input("cacheUriExcludes")]
        private InputList<string>? _cacheUriExcludes;

        /// <summary>
        /// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
        /// </summary>
        public InputList<string> CacheUriExcludes
        {
            get => _cacheUriExcludes ?? (_cacheUriExcludes = new InputList<string>());
            set => _cacheUriExcludes = value;
        }

        [Input("cacheUriIncludeOverrides")]
        private InputList<string>? _cacheUriIncludeOverrides;

        /// <summary>
        /// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
        /// </summary>
        public InputList<string> CacheUriIncludeOverrides
        {
            get => _cacheUriIncludeOverrides ?? (_cacheUriIncludeOverrides = new InputList<string>());
            set => _cacheUriIncludeOverrides = value;
        }

        [Input("cacheUriIncludes")]
        private InputList<string>? _cacheUriIncludes;

        /// <summary>
        /// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
        /// </summary>
        public InputList<string> CacheUriIncludes
        {
            get => _cacheUriIncludes ?? (_cacheUriIncludes = new InputList<string>());
            set => _cacheUriIncludes = value;
        }

        [Input("cacheUriPinneds")]
        private InputList<string>? _cacheUriPinneds;

        /// <summary>
        /// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
        /// </summary>
        public InputList<string> CacheUriPinneds
        {
            get => _cacheUriPinneds ?? (_cacheUriPinneds = new InputList<string>());
            set => _cacheUriPinneds = value;
        }

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Input("defaultsFrom")]
        public Input<string>? DefaultsFrom { get; set; }

        /// <summary>
        /// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ProfileWebAccelerationArgs()
        {
        }
        public static new ProfileWebAccelerationArgs Empty => new ProfileWebAccelerationArgs();
    }

    public sealed class ProfileWebAccelerationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
        /// </summary>
        [Input("cacheAgingRate")]
        public Input<int>? CacheAgingRate { get; set; }

        /// <summary>
        /// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
        /// </summary>
        [Input("cacheClientCacheControlMode")]
        public Input<string>? CacheClientCacheControlMode { get; set; }

        /// <summary>
        /// Inserts Age and Date headers in the response. The default value is `enabled`.
        /// </summary>
        [Input("cacheInsertAgeHeader")]
        public Input<string>? CacheInsertAgeHeader { get; set; }

        /// <summary>
        /// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
        /// </summary>
        [Input("cacheMaxAge")]
        public Input<int>? CacheMaxAge { get; set; }

        /// <summary>
        /// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
        /// </summary>
        [Input("cacheMaxEntries")]
        public Input<int>? CacheMaxEntries { get; set; }

        /// <summary>
        /// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
        /// </summary>
        [Input("cacheObjectMaxSize")]
        public Input<int>? CacheObjectMaxSize { get; set; }

        /// <summary>
        /// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
        /// </summary>
        [Input("cacheObjectMinSize")]
        public Input<int>? CacheObjectMinSize { get; set; }

        /// <summary>
        /// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
        /// </summary>
        [Input("cacheSize")]
        public Input<int>? CacheSize { get; set; }

        [Input("cacheUriExcludes")]
        private InputList<string>? _cacheUriExcludes;

        /// <summary>
        /// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
        /// </summary>
        public InputList<string> CacheUriExcludes
        {
            get => _cacheUriExcludes ?? (_cacheUriExcludes = new InputList<string>());
            set => _cacheUriExcludes = value;
        }

        [Input("cacheUriIncludeOverrides")]
        private InputList<string>? _cacheUriIncludeOverrides;

        /// <summary>
        /// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
        /// </summary>
        public InputList<string> CacheUriIncludeOverrides
        {
            get => _cacheUriIncludeOverrides ?? (_cacheUriIncludeOverrides = new InputList<string>());
            set => _cacheUriIncludeOverrides = value;
        }

        [Input("cacheUriIncludes")]
        private InputList<string>? _cacheUriIncludes;

        /// <summary>
        /// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
        /// </summary>
        public InputList<string> CacheUriIncludes
        {
            get => _cacheUriIncludes ?? (_cacheUriIncludes = new InputList<string>());
            set => _cacheUriIncludes = value;
        }

        [Input("cacheUriPinneds")]
        private InputList<string>? _cacheUriPinneds;

        /// <summary>
        /// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
        /// </summary>
        public InputList<string> CacheUriPinneds
        {
            get => _cacheUriPinneds ?? (_cacheUriPinneds = new InputList<string>());
            set => _cacheUriPinneds = value;
        }

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Input("defaultsFrom")]
        public Input<string>? DefaultsFrom { get; set; }

        /// <summary>
        /// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ProfileWebAccelerationState()
        {
        }
        public static new ProfileWebAccelerationState Empty => new ProfileWebAccelerationState();
    }
}
