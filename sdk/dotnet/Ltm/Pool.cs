// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Ltm
{
    public partial class Pool : Pulumi.CustomResource
    {
        /// <summary>
        /// Allow NAT
        /// </summary>
        [Output("allowNat")]
        public Output<string> AllowNat { get; private set; } = null!;

        /// <summary>
        /// Allow SNAT
        /// </summary>
        [Output("allowSnat")]
        public Output<string> AllowSnat { get; private set; } = null!;

        /// <summary>
        /// Userdefined value to describe the pool 
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Possible values: round-robin, ...
        /// </summary>
        [Output("loadBalancingMode")]
        public Output<string> LoadBalancingMode { get; private set; } = null!;

        /// <summary>
        /// List of monitor names to associate with the pool
        /// </summary>
        [Output("monitors")]
        public Output<ImmutableArray<string>> Monitors { get; private set; } = null!;

        /// <summary>
        /// Name of the pool
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Number of times the system tries to select a new pool member after a failure.
        /// </summary>
        [Output("reselectTries")]
        public Output<int> ReselectTries { get; private set; } = null!;

        /// <summary>
        /// Possible values: none, reset, reselect, drop
        /// </summary>
        [Output("serviceDownAction")]
        public Output<string> ServiceDownAction { get; private set; } = null!;

        /// <summary>
        /// Slow ramp time for pool members
        /// </summary>
        [Output("slowRampTime")]
        public Output<int> SlowRampTime { get; private set; } = null!;


        /// <summary>
        /// Create a Pool resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Pool(string name, PoolArgs args, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/pool:Pool", name, args ?? new PoolArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Pool(string name, Input<string> id, PoolState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/pool:Pool", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Pool resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Pool Get(string name, Input<string> id, PoolState? state = null, CustomResourceOptions? options = null)
        {
            return new Pool(name, id, state, options);
        }
    }

    public sealed class PoolArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow NAT
        /// </summary>
        [Input("allowNat")]
        public Input<string>? AllowNat { get; set; }

        /// <summary>
        /// Allow SNAT
        /// </summary>
        [Input("allowSnat")]
        public Input<string>? AllowSnat { get; set; }

        /// <summary>
        /// Userdefined value to describe the pool 
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Possible values: round-robin, ...
        /// </summary>
        [Input("loadBalancingMode")]
        public Input<string>? LoadBalancingMode { get; set; }

        [Input("monitors")]
        private InputList<string>? _monitors;

        /// <summary>
        /// List of monitor names to associate with the pool
        /// </summary>
        public InputList<string> Monitors
        {
            get => _monitors ?? (_monitors = new InputList<string>());
            set => _monitors = value;
        }

        /// <summary>
        /// Name of the pool
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// Number of times the system tries to select a new pool member after a failure.
        /// </summary>
        [Input("reselectTries")]
        public Input<int>? ReselectTries { get; set; }

        /// <summary>
        /// Possible values: none, reset, reselect, drop
        /// </summary>
        [Input("serviceDownAction")]
        public Input<string>? ServiceDownAction { get; set; }

        /// <summary>
        /// Slow ramp time for pool members
        /// </summary>
        [Input("slowRampTime")]
        public Input<int>? SlowRampTime { get; set; }

        public PoolArgs()
        {
        }
    }

    public sealed class PoolState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Allow NAT
        /// </summary>
        [Input("allowNat")]
        public Input<string>? AllowNat { get; set; }

        /// <summary>
        /// Allow SNAT
        /// </summary>
        [Input("allowSnat")]
        public Input<string>? AllowSnat { get; set; }

        /// <summary>
        /// Userdefined value to describe the pool 
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Possible values: round-robin, ...
        /// </summary>
        [Input("loadBalancingMode")]
        public Input<string>? LoadBalancingMode { get; set; }

        [Input("monitors")]
        private InputList<string>? _monitors;

        /// <summary>
        /// List of monitor names to associate with the pool
        /// </summary>
        public InputList<string> Monitors
        {
            get => _monitors ?? (_monitors = new InputList<string>());
            set => _monitors = value;
        }

        /// <summary>
        /// Name of the pool
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Number of times the system tries to select a new pool member after a failure.
        /// </summary>
        [Input("reselectTries")]
        public Input<int>? ReselectTries { get; set; }

        /// <summary>
        /// Possible values: none, reset, reselect, drop
        /// </summary>
        [Input("serviceDownAction")]
        public Input<string>? ServiceDownAction { get; set; }

        /// <summary>
        /// Slow ramp time for pool members
        /// </summary>
        [Input("slowRampTime")]
        public Input<int>? SlowRampTime { get; set; }

        public PoolState()
        {
        }
    }
}
