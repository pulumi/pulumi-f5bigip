// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Ltm
{
    /// <summary>
    /// `f5bigip.ltm.ProfileHttp2` Configures a custom profile_http2 for use by health checks.
    /// 
    /// For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using F5BigIP = Pulumi.F5BigIP;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var nyhttp2 = new F5BigIP.Ltm.ProfileHttp2("nyhttp2", new()
    ///     {
    ///         Name = "/Common/test-profile-http2",
    ///         FrameSize = 2021,
    ///         ReceiveWindow = 31,
    ///         WriteSize = 16380,
    ///         HeaderTableSize = 4092,
    ///         IncludeContentLength = "enabled",
    ///         EnforceTlsRequirements = "enabled",
    ///         InsertHeader = "disabled",
    ///         ConcurrentStreamsPerConnection = 30,
    ///         ConnectionIdleTimeout = 100,
    ///         ActivationModes = new[]
    ///         {
    ///             "always",
    ///         },
    ///     });
    /// 
    ///     //Child Profile which inherits parent http2 profile
    ///     var nyhttp2_child = new F5BigIP.Ltm.ProfileHttp2("nyhttp2-child", new()
    ///     {
    ///         Name = "/Common/test-profile-http2-child",
    ///         DefaultsFrom = nyhttp2.Name,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [F5BigIPResourceType("f5bigip:ltm/profileHttp2:ProfileHttp2")]
    public partial class ProfileHttp2 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// This setting specifies the condition that will cause the BIG-IP system to handle an incoming connection as an HTTP/2 connection, Allowed values : `[“alpn”]` (or) `[“always”]`.
        /// </summary>
        [Output("activationModes")]
        public Output<ImmutableArray<string>> ActivationModes { get; private set; } = null!;

        /// <summary>
        /// Specifies how many concurrent requests are allowed to be outstanding on a single HTTP/2 connection.
        /// </summary>
        [Output("concurrentStreamsPerConnection")]
        public Output<int> ConcurrentStreamsPerConnection { get; private set; } = null!;

        /// <summary>
        /// Specifies the number of seconds that a connection is idle before the connection is eligible for deletion.
        /// </summary>
        [Output("connectionIdleTimeout")]
        public Output<int> ConnectionIdleTimeout { get; private set; } = null!;

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Output("defaultsFrom")]
        public Output<string> DefaultsFrom { get; private set; } = null!;

        /// <summary>
        /// Enable or disable enforcement of TLS requirements,Allowed Values : `"enabled"/"disabled"` [Default:`"enabled"`].
        /// </summary>
        [Output("enforceTlsRequirements")]
        public Output<string> EnforceTlsRequirements { get; private set; } = null!;

        /// <summary>
        /// The size of the data frames, in bytes, that the HTTP/2 protocol sends to the client. `Default: 2048`.
        /// </summary>
        [Output("frameSize")]
        public Output<int> FrameSize { get; private set; } = null!;

        /// <summary>
        /// The size of the header table, in KB, for the HTTP headers that the HTTP/2 protocol compresses to save bandwidth.
        /// </summary>
        [Output("headerTableSize")]
        public Output<int> HeaderTableSize { get; private set; } = null!;

        /// <summary>
        /// Enable to include content-length in HTTP/2 headers,Default : disabled
        /// </summary>
        [Output("includeContentLength")]
        public Output<string> IncludeContentLength { get; private set; } = null!;

        /// <summary>
        /// This setting specifies whether the BIG-IP system should add an HTTP header to the HTTP request to show that the request was received over HTTP/2, Allowed Values : `"enabled"/"disabled"` [ Default: `"disabled"`].
        /// </summary>
        [Output("insertHeader")]
        public Output<string> InsertHeader { get; private set; } = null!;

        /// <summary>
        /// This setting specifies the name of the header that the BIG-IP system will add to the HTTP request when the Insert Header is enabled.
        /// </summary>
        [Output("insertHeaderName")]
        public Output<string> InsertHeaderName { get; private set; } = null!;

        /// <summary>
        /// Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-http2-profile`.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The flow-control size for upload streams, in KB. `Default: 32`.
        /// </summary>
        [Output("receiveWindow")]
        public Output<int> ReceiveWindow { get; private set; } = null!;

        /// <summary>
        /// The total size of combined data frames, in bytes, that the HTTP/2 protocol sends in a single write function. `Default: 16384`".
        /// </summary>
        [Output("writeSize")]
        public Output<int> WriteSize { get; private set; } = null!;


        /// <summary>
        /// Create a ProfileHttp2 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProfileHttp2(string name, ProfileHttp2Args args, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/profileHttp2:ProfileHttp2", name, args ?? new ProfileHttp2Args(), MakeResourceOptions(options, ""))
        {
        }

        private ProfileHttp2(string name, Input<string> id, ProfileHttp2State? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:ltm/profileHttp2:ProfileHttp2", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProfileHttp2 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProfileHttp2 Get(string name, Input<string> id, ProfileHttp2State? state = null, CustomResourceOptions? options = null)
        {
            return new ProfileHttp2(name, id, state, options);
        }
    }

    public sealed class ProfileHttp2Args : global::Pulumi.ResourceArgs
    {
        [Input("activationModes")]
        private InputList<string>? _activationModes;

        /// <summary>
        /// This setting specifies the condition that will cause the BIG-IP system to handle an incoming connection as an HTTP/2 connection, Allowed values : `[“alpn”]` (or) `[“always”]`.
        /// </summary>
        public InputList<string> ActivationModes
        {
            get => _activationModes ?? (_activationModes = new InputList<string>());
            set => _activationModes = value;
        }

        /// <summary>
        /// Specifies how many concurrent requests are allowed to be outstanding on a single HTTP/2 connection.
        /// </summary>
        [Input("concurrentStreamsPerConnection")]
        public Input<int>? ConcurrentStreamsPerConnection { get; set; }

        /// <summary>
        /// Specifies the number of seconds that a connection is idle before the connection is eligible for deletion.
        /// </summary>
        [Input("connectionIdleTimeout")]
        public Input<int>? ConnectionIdleTimeout { get; set; }

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Input("defaultsFrom")]
        public Input<string>? DefaultsFrom { get; set; }

        /// <summary>
        /// Enable or disable enforcement of TLS requirements,Allowed Values : `"enabled"/"disabled"` [Default:`"enabled"`].
        /// </summary>
        [Input("enforceTlsRequirements")]
        public Input<string>? EnforceTlsRequirements { get; set; }

        /// <summary>
        /// The size of the data frames, in bytes, that the HTTP/2 protocol sends to the client. `Default: 2048`.
        /// </summary>
        [Input("frameSize")]
        public Input<int>? FrameSize { get; set; }

        /// <summary>
        /// The size of the header table, in KB, for the HTTP headers that the HTTP/2 protocol compresses to save bandwidth.
        /// </summary>
        [Input("headerTableSize")]
        public Input<int>? HeaderTableSize { get; set; }

        /// <summary>
        /// Enable to include content-length in HTTP/2 headers,Default : disabled
        /// </summary>
        [Input("includeContentLength")]
        public Input<string>? IncludeContentLength { get; set; }

        /// <summary>
        /// This setting specifies whether the BIG-IP system should add an HTTP header to the HTTP request to show that the request was received over HTTP/2, Allowed Values : `"enabled"/"disabled"` [ Default: `"disabled"`].
        /// </summary>
        [Input("insertHeader")]
        public Input<string>? InsertHeader { get; set; }

        /// <summary>
        /// This setting specifies the name of the header that the BIG-IP system will add to the HTTP request when the Insert Header is enabled.
        /// </summary>
        [Input("insertHeaderName")]
        public Input<string>? InsertHeaderName { get; set; }

        /// <summary>
        /// Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-http2-profile`.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The flow-control size for upload streams, in KB. `Default: 32`.
        /// </summary>
        [Input("receiveWindow")]
        public Input<int>? ReceiveWindow { get; set; }

        /// <summary>
        /// The total size of combined data frames, in bytes, that the HTTP/2 protocol sends in a single write function. `Default: 16384`".
        /// </summary>
        [Input("writeSize")]
        public Input<int>? WriteSize { get; set; }

        public ProfileHttp2Args()
        {
        }
        public static new ProfileHttp2Args Empty => new ProfileHttp2Args();
    }

    public sealed class ProfileHttp2State : global::Pulumi.ResourceArgs
    {
        [Input("activationModes")]
        private InputList<string>? _activationModes;

        /// <summary>
        /// This setting specifies the condition that will cause the BIG-IP system to handle an incoming connection as an HTTP/2 connection, Allowed values : `[“alpn”]` (or) `[“always”]`.
        /// </summary>
        public InputList<string> ActivationModes
        {
            get => _activationModes ?? (_activationModes = new InputList<string>());
            set => _activationModes = value;
        }

        /// <summary>
        /// Specifies how many concurrent requests are allowed to be outstanding on a single HTTP/2 connection.
        /// </summary>
        [Input("concurrentStreamsPerConnection")]
        public Input<int>? ConcurrentStreamsPerConnection { get; set; }

        /// <summary>
        /// Specifies the number of seconds that a connection is idle before the connection is eligible for deletion.
        /// </summary>
        [Input("connectionIdleTimeout")]
        public Input<int>? ConnectionIdleTimeout { get; set; }

        /// <summary>
        /// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
        /// </summary>
        [Input("defaultsFrom")]
        public Input<string>? DefaultsFrom { get; set; }

        /// <summary>
        /// Enable or disable enforcement of TLS requirements,Allowed Values : `"enabled"/"disabled"` [Default:`"enabled"`].
        /// </summary>
        [Input("enforceTlsRequirements")]
        public Input<string>? EnforceTlsRequirements { get; set; }

        /// <summary>
        /// The size of the data frames, in bytes, that the HTTP/2 protocol sends to the client. `Default: 2048`.
        /// </summary>
        [Input("frameSize")]
        public Input<int>? FrameSize { get; set; }

        /// <summary>
        /// The size of the header table, in KB, for the HTTP headers that the HTTP/2 protocol compresses to save bandwidth.
        /// </summary>
        [Input("headerTableSize")]
        public Input<int>? HeaderTableSize { get; set; }

        /// <summary>
        /// Enable to include content-length in HTTP/2 headers,Default : disabled
        /// </summary>
        [Input("includeContentLength")]
        public Input<string>? IncludeContentLength { get; set; }

        /// <summary>
        /// This setting specifies whether the BIG-IP system should add an HTTP header to the HTTP request to show that the request was received over HTTP/2, Allowed Values : `"enabled"/"disabled"` [ Default: `"disabled"`].
        /// </summary>
        [Input("insertHeader")]
        public Input<string>? InsertHeader { get; set; }

        /// <summary>
        /// This setting specifies the name of the header that the BIG-IP system will add to the HTTP request when the Insert Header is enabled.
        /// </summary>
        [Input("insertHeaderName")]
        public Input<string>? InsertHeaderName { get; set; }

        /// <summary>
        /// Name of Profile should be full path.The full path is the combination of the `partition + profile name`,For example `/Common/test-http2-profile`.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The flow-control size for upload streams, in KB. `Default: 32`.
        /// </summary>
        [Input("receiveWindow")]
        public Input<int>? ReceiveWindow { get; set; }

        /// <summary>
        /// The total size of combined data frames, in bytes, that the HTTP/2 protocol sends in a single write function. `Default: 16384`".
        /// </summary>
        [Input("writeSize")]
        public Input<int>? WriteSize { get; set; }

        public ProfileHttp2State()
        {
        }
        public static new ProfileHttp2State Empty => new ProfileHttp2State();
    }
}
