// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Sys
{
    /// <summary>
    /// `f5bigip.sys.Provision` provides details bout how to enable "ilx", "asm" "apm" resource on BIG-IP
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using Pulumi;
    /// using F5BigIP = Pulumi.F5BigIP;
    /// 
    /// class MyStack : Stack
    /// {
    ///     public MyStack()
    ///     {
    ///         var test_provision = new F5BigIP.Sys.Provision("test-provision", new F5BigIP.Sys.ProvisionArgs
    ///         {
    ///             CpuRatio = 0,
    ///             DiskRatio = 0,
    ///             FullPath = "asm",
    ///             Level = "none",
    ///             MemoryRatio = 0,
    ///             Name = "TEST_ASM_PROVISION_NAME",
    ///         });
    ///     }
    /// 
    /// }
    /// ```
    /// </summary>
    public partial class Provision : Pulumi.CustomResource
    {
        /// <summary>
        /// cpu Ratio
        /// </summary>
        [Output("cpuRatio")]
        public Output<int?> CpuRatio { get; private set; } = null!;

        /// <summary>
        /// disk Ratio
        /// </summary>
        [Output("diskRatio")]
        public Output<int?> DiskRatio { get; private set; } = null!;

        /// <summary>
        /// path
        /// </summary>
        [Output("fullPath")]
        public Output<string> FullPath { get; private set; } = null!;

        /// <summary>
        /// what level nominal or dedicated
        /// </summary>
        [Output("level")]
        public Output<string?> Level { get; private set; } = null!;

        /// <summary>
        /// memory Ratio
        /// </summary>
        [Output("memoryRatio")]
        public Output<int?> MemoryRatio { get; private set; } = null!;

        /// <summary>
        /// Name of the module to be provisioned
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Provision resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provision(string name, ProvisionArgs args, CustomResourceOptions? options = null)
            : base("f5bigip:sys/provision:Provision", name, args ?? new ProvisionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Provision(string name, Input<string> id, ProvisionState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:sys/provision:Provision", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Provision resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Provision Get(string name, Input<string> id, ProvisionState? state = null, CustomResourceOptions? options = null)
        {
            return new Provision(name, id, state, options);
        }
    }

    public sealed class ProvisionArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// cpu Ratio
        /// </summary>
        [Input("cpuRatio")]
        public Input<int>? CpuRatio { get; set; }

        /// <summary>
        /// disk Ratio
        /// </summary>
        [Input("diskRatio")]
        public Input<int>? DiskRatio { get; set; }

        /// <summary>
        /// path
        /// </summary>
        [Input("fullPath")]
        public Input<string>? FullPath { get; set; }

        /// <summary>
        /// what level nominal or dedicated
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// memory Ratio
        /// </summary>
        [Input("memoryRatio")]
        public Input<int>? MemoryRatio { get; set; }

        /// <summary>
        /// Name of the module to be provisioned
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ProvisionArgs()
        {
        }
    }

    public sealed class ProvisionState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// cpu Ratio
        /// </summary>
        [Input("cpuRatio")]
        public Input<int>? CpuRatio { get; set; }

        /// <summary>
        /// disk Ratio
        /// </summary>
        [Input("diskRatio")]
        public Input<int>? DiskRatio { get; set; }

        /// <summary>
        /// path
        /// </summary>
        [Input("fullPath")]
        public Input<string>? FullPath { get; set; }

        /// <summary>
        /// what level nominal or dedicated
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// memory Ratio
        /// </summary>
        [Input("memoryRatio")]
        public Input<int>? MemoryRatio { get; set; }

        /// <summary>
        /// Name of the module to be provisioned
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ProvisionState()
        {
        }
    }
}
