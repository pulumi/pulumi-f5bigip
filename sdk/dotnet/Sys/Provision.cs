// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Sys
{
    /// <summary>
    /// `f5bigip.sys.Provision` Manage BIG-IP module provisioning. This resource will only provision at the standard levels of Dedicated, Nominal, and Minimum.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using F5BigIP = Pulumi.F5BigIP;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var gtm = new F5BigIP.Sys.Provision("gtm", new()
    ///     {
    ///         Name = "gtm",
    ///         CpuRatio = 0,
    ///         DiskRatio = 0,
    ///         Level = "nominal",
    ///         MemoryRatio = 0,
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [F5BigIPResourceType("f5bigip:sys/provision:Provision")]
    public partial class Provision : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Output("cpuRatio")]
        public Output<int?> CpuRatio { get; private set; } = null!;

        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Output("diskRatio")]
        public Output<int?> DiskRatio { get; private set; } = null!;

        [Output("fullPath")]
        public Output<string> FullPath { get; private set; } = null!;

        /// <summary>
        /// Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to `Dedicated` requires setting all others to `None`. Setting the level of a module to `None` means the module is not activated.
        /// default is `Nominal`
        /// possible options:
        /// * nominal
        /// * minimum
        /// * none
        /// * dedicated
        /// </summary>
        [Output("level")]
        public Output<string?> Level { get; private set; } = null!;

        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Output("memoryRatio")]
        public Output<int?> MemoryRatio { get; private set; } = null!;

        /// <summary>
        /// Name of module to provision in BIG-IP. 
        /// possible options:
        /// * afm
        /// * am
        /// * apm
        /// * cgnat
        /// * asm
        /// * avr
        /// * dos
        /// * fps
        /// * gtm
        /// * ilx
        /// * lc
        /// * ltm
        /// * pem
        /// * sslo
        /// * swg
        /// * urldb
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;


        /// <summary>
        /// Create a Provision resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Provision(string name, ProvisionArgs args, CustomResourceOptions? options = null)
            : base("f5bigip:sys/provision:Provision", name, args ?? new ProvisionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Provision(string name, Input<string> id, ProvisionState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:sys/provision:Provision", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Provision resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Provision Get(string name, Input<string> id, ProvisionState? state = null, CustomResourceOptions? options = null)
        {
            return new Provision(name, id, state, options);
        }
    }

    public sealed class ProvisionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Input("cpuRatio")]
        public Input<int>? CpuRatio { get; set; }

        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Input("diskRatio")]
        public Input<int>? DiskRatio { get; set; }

        [Input("fullPath")]
        public Input<string>? FullPath { get; set; }

        /// <summary>
        /// Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to `Dedicated` requires setting all others to `None`. Setting the level of a module to `None` means the module is not activated.
        /// default is `Nominal`
        /// possible options:
        /// * nominal
        /// * minimum
        /// * none
        /// * dedicated
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Input("memoryRatio")]
        public Input<int>? MemoryRatio { get; set; }

        /// <summary>
        /// Name of module to provision in BIG-IP. 
        /// possible options:
        /// * afm
        /// * am
        /// * apm
        /// * cgnat
        /// * asm
        /// * avr
        /// * dos
        /// * fps
        /// * gtm
        /// * ilx
        /// * lc
        /// * ltm
        /// * pem
        /// * sslo
        /// * swg
        /// * urldb
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public ProvisionArgs()
        {
        }
        public static new ProvisionArgs Empty => new ProvisionArgs();
    }

    public sealed class ProvisionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Input("cpuRatio")]
        public Input<int>? CpuRatio { get; set; }

        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Input("diskRatio")]
        public Input<int>? DiskRatio { get; set; }

        [Input("fullPath")]
        public Input<string>? FullPath { get; set; }

        /// <summary>
        /// Sets the provisioning level for the requested modules. Changing the level for one module may require modifying the level of another module. For example, changing one module to `Dedicated` requires setting all others to `None`. Setting the level of a module to `None` means the module is not activated.
        /// default is `Nominal`
        /// possible options:
        /// * nominal
        /// * minimum
        /// * none
        /// * dedicated
        /// </summary>
        [Input("level")]
        public Input<string>? Level { get; set; }

        /// <summary>
        /// Use this option only when the level option is set to custom.F5 Networks recommends that you do not modify this option. The default value is none
        /// </summary>
        [Input("memoryRatio")]
        public Input<int>? MemoryRatio { get; set; }

        /// <summary>
        /// Name of module to provision in BIG-IP. 
        /// possible options:
        /// * afm
        /// * am
        /// * apm
        /// * cgnat
        /// * asm
        /// * avr
        /// * dos
        /// * fps
        /// * gtm
        /// * ilx
        /// * lc
        /// * ltm
        /// * pem
        /// * sslo
        /// * swg
        /// * urldb
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public ProvisionState()
        {
        }
        public static new ProvisionState Empty => new ProvisionState();
    }
}
