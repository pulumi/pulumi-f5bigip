// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Sys
{
    /// <summary>
    /// `f5bigip.sys.IApp` resource helps you to deploy Application Services template that can be used to automate and orchestrate Layer 4-7 applications service deployments using F5 Network.  
    /// 
    /// &gt; This content is derived from https://github.com/terraform-providers/terraform-provider-bigip/blob/master/website/docs/r/sys_iapp.html.markdown.
    /// </summary>
    public partial class IApp : Pulumi.CustomResource
    {
        /// <summary>
        /// Address of the Iapp which needs to be Iappensed
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("devicegroup")]
        public Output<string?> Devicegroup { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("executeAction")]
        public Output<string?> ExecuteAction { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("inheritedDevicegroup")]
        public Output<string?> InheritedDevicegroup { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("inheritedTrafficGroup")]
        public Output<string?> InheritedTrafficGroup { get; private set; } = null!;

        /// <summary>
        /// Refer to the Json file which will be deployed on F5 BIG-IP.
        /// </summary>
        [Output("jsonfile")]
        public Output<string?> Jsonfile { get; private set; } = null!;

        [Output("lists")]
        public Output<ImmutableArray<Outputs.IAppLists>> Lists { get; private set; } = null!;

        [Output("metadatas")]
        public Output<ImmutableArray<Outputs.IAppMetadatas>> Metadatas { get; private set; } = null!;

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Address of the Iapp which needs to be Iappensed
        /// </summary>
        [Output("partition")]
        public Output<string?> Partition { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("strictUpdates")]
        public Output<string?> StrictUpdates { get; private set; } = null!;

        [Output("tables")]
        public Output<ImmutableArray<Outputs.IAppTables>> Tables { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("template")]
        public Output<string?> Template { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("templateModified")]
        public Output<string?> TemplateModified { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("templatePrerequisiteErrors")]
        public Output<string?> TemplatePrerequisiteErrors { get; private set; } = null!;

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Output("trafficGroup")]
        public Output<string?> TrafficGroup { get; private set; } = null!;

        [Output("variables")]
        public Output<ImmutableArray<Outputs.IAppVariables>> Variables { get; private set; } = null!;


        /// <summary>
        /// Create a IApp resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IApp(string name, IAppArgs? args = null, CustomResourceOptions? options = null)
            : base("f5bigip:sys/iApp:IApp", name, args ?? ResourceArgs.Empty, MakeResourceOptions(options, ""))
        {
        }

        private IApp(string name, Input<string> id, IAppState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:sys/iApp:IApp", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing IApp resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static IApp Get(string name, Input<string> id, IAppState? state = null, CustomResourceOptions? options = null)
        {
            return new IApp(name, id, state, options);
        }
    }

    public sealed class IAppArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address of the Iapp which needs to be Iappensed
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("devicegroup")]
        public Input<string>? Devicegroup { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("executeAction")]
        public Input<string>? ExecuteAction { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("inheritedDevicegroup")]
        public Input<string>? InheritedDevicegroup { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("inheritedTrafficGroup")]
        public Input<string>? InheritedTrafficGroup { get; set; }

        /// <summary>
        /// Refer to the Json file which will be deployed on F5 BIG-IP.
        /// </summary>
        [Input("jsonfile")]
        public Input<string>? Jsonfile { get; set; }

        [Input("lists")]
        private InputList<Inputs.IAppListsArgs>? _lists;
        public InputList<Inputs.IAppListsArgs> Lists
        {
            get => _lists ?? (_lists = new InputList<Inputs.IAppListsArgs>());
            set => _lists = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.IAppMetadatasArgs>? _metadatas;
        public InputList<Inputs.IAppMetadatasArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.IAppMetadatasArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Address of the Iapp which needs to be Iappensed
        /// </summary>
        [Input("partition")]
        public Input<string>? Partition { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("strictUpdates")]
        public Input<string>? StrictUpdates { get; set; }

        [Input("tables")]
        private InputList<Inputs.IAppTablesArgs>? _tables;
        public InputList<Inputs.IAppTablesArgs> Tables
        {
            get => _tables ?? (_tables = new InputList<Inputs.IAppTablesArgs>());
            set => _tables = value;
        }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("template")]
        public Input<string>? Template { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("templateModified")]
        public Input<string>? TemplateModified { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("templatePrerequisiteErrors")]
        public Input<string>? TemplatePrerequisiteErrors { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("trafficGroup")]
        public Input<string>? TrafficGroup { get; set; }

        [Input("variables")]
        private InputList<Inputs.IAppVariablesArgs>? _variables;
        public InputList<Inputs.IAppVariablesArgs> Variables
        {
            get => _variables ?? (_variables = new InputList<Inputs.IAppVariablesArgs>());
            set => _variables = value;
        }

        public IAppArgs()
        {
        }
    }

    public sealed class IAppState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// Address of the Iapp which needs to be Iappensed
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("devicegroup")]
        public Input<string>? Devicegroup { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("executeAction")]
        public Input<string>? ExecuteAction { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("inheritedDevicegroup")]
        public Input<string>? InheritedDevicegroup { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("inheritedTrafficGroup")]
        public Input<string>? InheritedTrafficGroup { get; set; }

        /// <summary>
        /// Refer to the Json file which will be deployed on F5 BIG-IP.
        /// </summary>
        [Input("jsonfile")]
        public Input<string>? Jsonfile { get; set; }

        [Input("lists")]
        private InputList<Inputs.IAppListsGetArgs>? _lists;
        public InputList<Inputs.IAppListsGetArgs> Lists
        {
            get => _lists ?? (_lists = new InputList<Inputs.IAppListsGetArgs>());
            set => _lists = value;
        }

        [Input("metadatas")]
        private InputList<Inputs.IAppMetadatasGetArgs>? _metadatas;
        public InputList<Inputs.IAppMetadatasGetArgs> Metadatas
        {
            get => _metadatas ?? (_metadatas = new InputList<Inputs.IAppMetadatasGetArgs>());
            set => _metadatas = value;
        }

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Address of the Iapp which needs to be Iappensed
        /// </summary>
        [Input("partition")]
        public Input<string>? Partition { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("strictUpdates")]
        public Input<string>? StrictUpdates { get; set; }

        [Input("tables")]
        private InputList<Inputs.IAppTablesGetArgs>? _tables;
        public InputList<Inputs.IAppTablesGetArgs> Tables
        {
            get => _tables ?? (_tables = new InputList<Inputs.IAppTablesGetArgs>());
            set => _tables = value;
        }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("template")]
        public Input<string>? Template { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("templateModified")]
        public Input<string>? TemplateModified { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("templatePrerequisiteErrors")]
        public Input<string>? TemplatePrerequisiteErrors { get; set; }

        /// <summary>
        /// BIG-IP password
        /// </summary>
        [Input("trafficGroup")]
        public Input<string>? TrafficGroup { get; set; }

        [Input("variables")]
        private InputList<Inputs.IAppVariablesGetArgs>? _variables;
        public InputList<Inputs.IAppVariablesGetArgs> Variables
        {
            get => _variables ?? (_variables = new InputList<Inputs.IAppVariablesGetArgs>());
            set => _variables = value;
        }

        public IAppState()
        {
        }
    }

    namespace Inputs
    {

    public sealed class IAppListsArgs : Pulumi.ResourceArgs
    {
        [Input("encrypted")]
        public Input<string>? Encrypted { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public IAppListsArgs()
        {
        }
    }

    public sealed class IAppListsGetArgs : Pulumi.ResourceArgs
    {
        [Input("encrypted")]
        public Input<string>? Encrypted { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public IAppListsGetArgs()
        {
        }
    }

    public sealed class IAppMetadatasArgs : Pulumi.ResourceArgs
    {
        [Input("persists")]
        public Input<string>? Persists { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public IAppMetadatasArgs()
        {
        }
    }

    public sealed class IAppMetadatasGetArgs : Pulumi.ResourceArgs
    {
        [Input("persists")]
        public Input<string>? Persists { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public IAppMetadatasGetArgs()
        {
        }
    }

    public sealed class IAppTablesArgs : Pulumi.ResourceArgs
    {
        [Input("columnNames")]
        private InputList<string>? _columnNames;
        public InputList<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new InputList<string>());
            set => _columnNames = value;
        }

        [Input("encryptedColumns")]
        public Input<string>? EncryptedColumns { get; set; }

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rows")]
        private InputList<IAppTablesRowsArgs>? _rows;
        public InputList<IAppTablesRowsArgs> Rows
        {
            get => _rows ?? (_rows = new InputList<IAppTablesRowsArgs>());
            set => _rows = value;
        }

        public IAppTablesArgs()
        {
        }
    }

    public sealed class IAppTablesGetArgs : Pulumi.ResourceArgs
    {
        [Input("columnNames")]
        private InputList<string>? _columnNames;
        public InputList<string> ColumnNames
        {
            get => _columnNames ?? (_columnNames = new InputList<string>());
            set => _columnNames = value;
        }

        [Input("encryptedColumns")]
        public Input<string>? EncryptedColumns { get; set; }

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("rows")]
        private InputList<IAppTablesRowsGetArgs>? _rows;
        public InputList<IAppTablesRowsGetArgs> Rows
        {
            get => _rows ?? (_rows = new InputList<IAppTablesRowsGetArgs>());
            set => _rows = value;
        }

        public IAppTablesGetArgs()
        {
        }
    }

    public sealed class IAppTablesRowsArgs : Pulumi.ResourceArgs
    {
        [Input("rows")]
        private InputList<string>? _rows;
        public InputList<string> Rows
        {
            get => _rows ?? (_rows = new InputList<string>());
            set => _rows = value;
        }

        public IAppTablesRowsArgs()
        {
        }
    }

    public sealed class IAppTablesRowsGetArgs : Pulumi.ResourceArgs
    {
        [Input("rows")]
        private InputList<string>? _rows;
        public InputList<string> Rows
        {
            get => _rows ?? (_rows = new InputList<string>());
            set => _rows = value;
        }

        public IAppTablesRowsGetArgs()
        {
        }
    }

    public sealed class IAppVariablesArgs : Pulumi.ResourceArgs
    {
        [Input("encrypted")]
        public Input<string>? Encrypted { get; set; }

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public IAppVariablesArgs()
        {
        }
    }

    public sealed class IAppVariablesGetArgs : Pulumi.ResourceArgs
    {
        [Input("encrypted")]
        public Input<string>? Encrypted { get; set; }

        /// <summary>
        /// Name of the iApp.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("value")]
        public Input<string>? Value { get; set; }

        public IAppVariablesGetArgs()
        {
        }
    }
    }

    namespace Outputs
    {

    [OutputType]
    public sealed class IAppLists
    {
        public readonly string? Encrypted;
        public readonly string? Value;

        [OutputConstructor]
        private IAppLists(
            string? encrypted,
            string? value)
        {
            Encrypted = encrypted;
            Value = value;
        }
    }

    [OutputType]
    public sealed class IAppMetadatas
    {
        public readonly string? Persists;
        public readonly string? Value;

        [OutputConstructor]
        private IAppMetadatas(
            string? persists,
            string? value)
        {
            Persists = persists;
            Value = value;
        }
    }

    [OutputType]
    public sealed class IAppTables
    {
        public readonly ImmutableArray<string> ColumnNames;
        public readonly string? EncryptedColumns;
        /// <summary>
        /// Name of the iApp.
        /// </summary>
        public readonly string? Name;
        public readonly ImmutableArray<IAppTablesRows> Rows;

        [OutputConstructor]
        private IAppTables(
            ImmutableArray<string> columnNames,
            string? encryptedColumns,
            string? name,
            ImmutableArray<IAppTablesRows> rows)
        {
            ColumnNames = columnNames;
            EncryptedColumns = encryptedColumns;
            Name = name;
            Rows = rows;
        }
    }

    [OutputType]
    public sealed class IAppTablesRows
    {
        public readonly ImmutableArray<string> Rows;

        [OutputConstructor]
        private IAppTablesRows(ImmutableArray<string> rows)
        {
            Rows = rows;
        }
    }

    [OutputType]
    public sealed class IAppVariables
    {
        public readonly string? Encrypted;
        /// <summary>
        /// Name of the iApp.
        /// </summary>
        public readonly string? Name;
        public readonly string? Value;

        [OutputConstructor]
        private IAppVariables(
            string? encrypted,
            string? name,
            string? value)
        {
            Encrypted = encrypted;
            Name = name;
            Value = value;
        }
    }
    }
}
