// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Ssl
{
    public static class GetWafEntityParameter
    {
        public static Task<GetWafEntityParameterResult> InvokeAsync(GetWafEntityParameterArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetWafEntityParameterResult>("f5bigip:ssl/getWafEntityParameter:getWafEntityParameter", args ?? new GetWafEntityParameterArgs(), options.WithDefaults());

        public static Output<GetWafEntityParameterResult> Invoke(GetWafEntityParameterInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetWafEntityParameterResult>("f5bigip:ssl/getWafEntityParameter:getWafEntityParameter", args ?? new GetWafEntityParameterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetWafEntityParameterArgs : Pulumi.InvokeArgs
    {
        [Input("allowEmptyType")]
        public bool? AllowEmptyType { get; set; }

        [Input("allowRepeatedParameterName")]
        public bool? AllowRepeatedParameterName { get; set; }

        [Input("attackSignaturesCheck")]
        public bool? AttackSignaturesCheck { get; set; }

        [Input("checkMaxValueLength")]
        public bool? CheckMaxValueLength { get; set; }

        [Input("checkMinValueLength")]
        public bool? CheckMinValueLength { get; set; }

        [Input("dataType")]
        public string? DataType { get; set; }

        [Input("description")]
        public string? Description { get; set; }

        [Input("enableRegularExpression")]
        public bool? EnableRegularExpression { get; set; }

        [Input("isBase64")]
        public bool? IsBase64 { get; set; }

        [Input("isCookie")]
        public bool? IsCookie { get; set; }

        [Input("isHeader")]
        public bool? IsHeader { get; set; }

        [Input("json")]
        public string? Json { get; set; }

        [Input("level")]
        public string? Level { get; set; }

        [Input("mandatory")]
        public bool? Mandatory { get; set; }

        [Input("metacharsOnParameterValueCheck")]
        public bool? MetacharsOnParameterValueCheck { get; set; }

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("parameterLocation")]
        public string? ParameterLocation { get; set; }

        [Input("performStaging")]
        public bool? PerformStaging { get; set; }

        [Input("sensitiveParameter")]
        public bool? SensitiveParameter { get; set; }

        [Input("signatureOverridesDisables")]
        private List<int>? _signatureOverridesDisables;
        public List<int> SignatureOverridesDisables
        {
            get => _signatureOverridesDisables ?? (_signatureOverridesDisables = new List<int>());
            set => _signatureOverridesDisables = value;
        }

        [Input("type")]
        public string? Type { get; set; }

        [Input("valueType")]
        public string? ValueType { get; set; }

        public GetWafEntityParameterArgs()
        {
        }
    }

    public sealed class GetWafEntityParameterInvokeArgs : Pulumi.InvokeArgs
    {
        [Input("allowEmptyType")]
        public Input<bool>? AllowEmptyType { get; set; }

        [Input("allowRepeatedParameterName")]
        public Input<bool>? AllowRepeatedParameterName { get; set; }

        [Input("attackSignaturesCheck")]
        public Input<bool>? AttackSignaturesCheck { get; set; }

        [Input("checkMaxValueLength")]
        public Input<bool>? CheckMaxValueLength { get; set; }

        [Input("checkMinValueLength")]
        public Input<bool>? CheckMinValueLength { get; set; }

        [Input("dataType")]
        public Input<string>? DataType { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("enableRegularExpression")]
        public Input<bool>? EnableRegularExpression { get; set; }

        [Input("isBase64")]
        public Input<bool>? IsBase64 { get; set; }

        [Input("isCookie")]
        public Input<bool>? IsCookie { get; set; }

        [Input("isHeader")]
        public Input<bool>? IsHeader { get; set; }

        [Input("json")]
        public Input<string>? Json { get; set; }

        [Input("level")]
        public Input<string>? Level { get; set; }

        [Input("mandatory")]
        public Input<bool>? Mandatory { get; set; }

        [Input("metacharsOnParameterValueCheck")]
        public Input<bool>? MetacharsOnParameterValueCheck { get; set; }

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("parameterLocation")]
        public Input<string>? ParameterLocation { get; set; }

        [Input("performStaging")]
        public Input<bool>? PerformStaging { get; set; }

        [Input("sensitiveParameter")]
        public Input<bool>? SensitiveParameter { get; set; }

        [Input("signatureOverridesDisables")]
        private InputList<int>? _signatureOverridesDisables;
        public InputList<int> SignatureOverridesDisables
        {
            get => _signatureOverridesDisables ?? (_signatureOverridesDisables = new InputList<int>());
            set => _signatureOverridesDisables = value;
        }

        [Input("type")]
        public Input<string>? Type { get; set; }

        [Input("valueType")]
        public Input<string>? ValueType { get; set; }

        public GetWafEntityParameterInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetWafEntityParameterResult
    {
        public readonly bool? AllowEmptyType;
        public readonly bool? AllowRepeatedParameterName;
        public readonly bool? AttackSignaturesCheck;
        public readonly bool? CheckMaxValueLength;
        public readonly bool? CheckMinValueLength;
        public readonly string? DataType;
        public readonly string? Description;
        public readonly bool? EnableRegularExpression;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsBase64;
        public readonly bool? IsCookie;
        public readonly bool? IsHeader;
        public readonly string Json;
        public readonly string? Level;
        public readonly bool? Mandatory;
        public readonly bool? MetacharsOnParameterValueCheck;
        public readonly string Name;
        public readonly string? ParameterLocation;
        public readonly bool? PerformStaging;
        public readonly bool? SensitiveParameter;
        public readonly ImmutableArray<int> SignatureOverridesDisables;
        public readonly string? Type;
        public readonly string? ValueType;

        [OutputConstructor]
        private GetWafEntityParameterResult(
            bool? allowEmptyType,

            bool? allowRepeatedParameterName,

            bool? attackSignaturesCheck,

            bool? checkMaxValueLength,

            bool? checkMinValueLength,

            string? dataType,

            string? description,

            bool? enableRegularExpression,

            string id,

            bool? isBase64,

            bool? isCookie,

            bool? isHeader,

            string json,

            string? level,

            bool? mandatory,

            bool? metacharsOnParameterValueCheck,

            string name,

            string? parameterLocation,

            bool? performStaging,

            bool? sensitiveParameter,

            ImmutableArray<int> signatureOverridesDisables,

            string? type,

            string? valueType)
        {
            AllowEmptyType = allowEmptyType;
            AllowRepeatedParameterName = allowRepeatedParameterName;
            AttackSignaturesCheck = attackSignaturesCheck;
            CheckMaxValueLength = checkMaxValueLength;
            CheckMinValueLength = checkMinValueLength;
            DataType = dataType;
            Description = description;
            EnableRegularExpression = enableRegularExpression;
            Id = id;
            IsBase64 = isBase64;
            IsCookie = isCookie;
            IsHeader = isHeader;
            Json = json;
            Level = level;
            Mandatory = mandatory;
            MetacharsOnParameterValueCheck = metacharsOnParameterValueCheck;
            Name = name;
            ParameterLocation = parameterLocation;
            PerformStaging = performStaging;
            SensitiveParameter = sensitiveParameter;
            SignatureOverridesDisables = signatureOverridesDisables;
            Type = type;
            ValueType = valueType;
        }
    }
}
