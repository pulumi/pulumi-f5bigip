// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP.Outputs
{

    [OutputType]
    public sealed class WafPolicyIpException
    {
        /// <summary>
        /// Specifies how the system responds to blocking requests sent from this IP address. Possible options [`always`, `never`, `policy-default`].
        /// </summary>
        public readonly string? BlockRequests;
        /// <summary>
        /// Specifies the description of the policy.
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.
        /// </summary>
        public readonly bool? IgnoreAnomalies;
        /// <summary>
        /// Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).
        /// </summary>
        public readonly bool? IgnoreIpreputation;
        /// <summary>
        /// Specifies the IP address that you want the system to trust.
        /// </summary>
        public readonly string IpAddress;
        /// <summary>
        /// Specifies the netmask of the exceptional IP address. This is an optional field.
        /// </summary>
        public readonly string IpMask;
        /// <summary>
        /// Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.
        /// </summary>
        public readonly bool? TrustedbyPolicybuilder;

        [OutputConstructor]
        private WafPolicyIpException(
            string? blockRequests,

            string? description,

            bool? ignoreAnomalies,

            bool? ignoreIpreputation,

            string ipAddress,

            string ipMask,

            bool? trustedbyPolicybuilder)
        {
            BlockRequests = blockRequests;
            Description = description;
            IgnoreAnomalies = ignoreAnomalies;
            IgnoreIpreputation = ignoreIpreputation;
            IpAddress = ipAddress;
            IpMask = ipMask;
            TrustedbyPolicybuilder = trustedbyPolicybuilder;
        }
    }
}
