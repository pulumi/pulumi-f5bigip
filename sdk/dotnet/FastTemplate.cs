// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.F5BigIP
{
    /// <summary>
    /// `f5bigip.FastTemplate` This resource will import and create FAST template sets on BIG-IP LTM.
    /// Template set can be imported from zip archive files on the local disk.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using F5BigIP = Pulumi.F5BigIP;
    /// using Std = Pulumi.Std;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var foo_template = new F5BigIP.FastTemplate("foo-template", new()
    ///     {
    ///         Name = "foo_template",
    ///         Source = "foo_template.zip",
    ///         Md5Hash = Std.Filemd5.Invoke(new()
    ///         {
    ///             Input = "foo_template.zip",
    ///         }).Apply(invoke =&gt; invoke.Result),
    ///     });
    /// 
    /// });
    /// ```
    /// </summary>
    [F5BigIPResourceType("f5bigip:index/fastTemplate:FastTemplate")]
    public partial class FastTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// MD5 hash of the zip archive file containing FAST template
        /// </summary>
        [Output("md5Hash")]
        public Output<string> Md5Hash { get; private set; } = null!;

        /// <summary>
        /// Name of the FAST template set to be created on to BIGIP
        /// </summary>
        [Output("name")]
        public Output<string?> Name { get; private set; } = null!;

        /// <summary>
        /// Path to the zip archive file containing FAST template set on Local Disk
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;


        /// <summary>
        /// Create a FastTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public FastTemplate(string name, FastTemplateArgs args, CustomResourceOptions? options = null)
            : base("f5bigip:index/fastTemplate:FastTemplate", name, args ?? new FastTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private FastTemplate(string name, Input<string> id, FastTemplateState? state = null, CustomResourceOptions? options = null)
            : base("f5bigip:index/fastTemplate:FastTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing FastTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static FastTemplate Get(string name, Input<string> id, FastTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new FastTemplate(name, id, state, options);
        }
    }

    public sealed class FastTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// MD5 hash of the zip archive file containing FAST template
        /// </summary>
        [Input("md5Hash", required: true)]
        public Input<string> Md5Hash { get; set; } = null!;

        /// <summary>
        /// Name of the FAST template set to be created on to BIGIP
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Path to the zip archive file containing FAST template set on Local Disk
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        public FastTemplateArgs()
        {
        }
        public static new FastTemplateArgs Empty => new FastTemplateArgs();
    }

    public sealed class FastTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// MD5 hash of the zip archive file containing FAST template
        /// </summary>
        [Input("md5Hash")]
        public Input<string>? Md5Hash { get; set; }

        /// <summary>
        /// Name of the FAST template set to be created on to BIGIP
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// Path to the zip archive file containing FAST template set on Local Disk
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        public FastTemplateState()
        {
        }
        public static new FastTemplateState Empty => new FastTemplateState();
    }
}
