// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package f5bigip

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type Do struct {
	pulumi.CustomResourceState

	// IP Address of BIGIP Host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipAddress pulumi.StringPtrOutput `pulumi:"bigipAddress"`
	// Password of  BIGIP host to be used for this resource
	BigipPassword pulumi.StringPtrOutput `pulumi:"bigipPassword"`
	// Port number of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipPort pulumi.StringPtrOutput `pulumi:"bigipPort"`
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	BigipTokenAuth pulumi.BoolPtrOutput `pulumi:"bigipTokenAuth"`
	// UserName of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipUser pulumi.StringPtrOutput `pulumi:"bigipUser"`
	// Name of the of the Declarative DO JSON file
	DoJson pulumi.StringOutput `pulumi:"doJson"`
	// unique identifier for DO resource
	//
	// Deprecated: this attribute is no longer in use
	TenantName pulumi.StringPtrOutput `pulumi:"tenantName"`
	// DO json
	Timeout pulumi.IntPtrOutput `pulumi:"timeout"`
}

// NewDo registers a new resource with the given unique name, arguments, and options.
func NewDo(ctx *pulumi.Context,
	name string, args *DoArgs, opts ...pulumi.ResourceOption) (*Do, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.DoJson == nil {
		return nil, errors.New("invalid value for required argument 'DoJson'")
	}
	if args.BigipPassword != nil {
		args.BigipPassword = pulumi.ToSecret(args.BigipPassword).(pulumi.StringPtrInput)
	}
	if args.BigipTokenAuth != nil {
		args.BigipTokenAuth = pulumi.ToSecret(args.BigipTokenAuth).(pulumi.BoolPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"bigipPassword",
		"bigipTokenAuth",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Do
	err := ctx.RegisterResource("f5bigip:index/do:Do", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDo gets an existing Do resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDo(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DoState, opts ...pulumi.ResourceOption) (*Do, error) {
	var resource Do
	err := ctx.ReadResource("f5bigip:index/do:Do", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Do resources.
type doState struct {
	// IP Address of BIGIP Host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipAddress *string `pulumi:"bigipAddress"`
	// Password of  BIGIP host to be used for this resource
	BigipPassword *string `pulumi:"bigipPassword"`
	// Port number of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipPort *string `pulumi:"bigipPort"`
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	BigipTokenAuth *bool `pulumi:"bigipTokenAuth"`
	// UserName of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipUser *string `pulumi:"bigipUser"`
	// Name of the of the Declarative DO JSON file
	DoJson *string `pulumi:"doJson"`
	// unique identifier for DO resource
	//
	// Deprecated: this attribute is no longer in use
	TenantName *string `pulumi:"tenantName"`
	// DO json
	Timeout *int `pulumi:"timeout"`
}

type DoState struct {
	// IP Address of BIGIP Host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipAddress pulumi.StringPtrInput
	// Password of  BIGIP host to be used for this resource
	BigipPassword pulumi.StringPtrInput
	// Port number of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipPort pulumi.StringPtrInput
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	BigipTokenAuth pulumi.BoolPtrInput
	// UserName of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipUser pulumi.StringPtrInput
	// Name of the of the Declarative DO JSON file
	DoJson pulumi.StringPtrInput
	// unique identifier for DO resource
	//
	// Deprecated: this attribute is no longer in use
	TenantName pulumi.StringPtrInput
	// DO json
	Timeout pulumi.IntPtrInput
}

func (DoState) ElementType() reflect.Type {
	return reflect.TypeOf((*doState)(nil)).Elem()
}

type doArgs struct {
	// IP Address of BIGIP Host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipAddress *string `pulumi:"bigipAddress"`
	// Password of  BIGIP host to be used for this resource
	BigipPassword *string `pulumi:"bigipPassword"`
	// Port number of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipPort *string `pulumi:"bigipPort"`
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	BigipTokenAuth *bool `pulumi:"bigipTokenAuth"`
	// UserName of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipUser *string `pulumi:"bigipUser"`
	// Name of the of the Declarative DO JSON file
	DoJson string `pulumi:"doJson"`
	// unique identifier for DO resource
	//
	// Deprecated: this attribute is no longer in use
	TenantName *string `pulumi:"tenantName"`
	// DO json
	Timeout *int `pulumi:"timeout"`
}

// The set of arguments for constructing a Do resource.
type DoArgs struct {
	// IP Address of BIGIP Host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipAddress pulumi.StringPtrInput
	// Password of  BIGIP host to be used for this resource
	BigipPassword pulumi.StringPtrInput
	// Port number of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipPort pulumi.StringPtrInput
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	BigipTokenAuth pulumi.BoolPtrInput
	// UserName of BIGIP host to be used for this resource,this is optional parameter.
	// whenever we specify this parameter it gets overwrite provider configuration
	BigipUser pulumi.StringPtrInput
	// Name of the of the Declarative DO JSON file
	DoJson pulumi.StringInput
	// unique identifier for DO resource
	//
	// Deprecated: this attribute is no longer in use
	TenantName pulumi.StringPtrInput
	// DO json
	Timeout pulumi.IntPtrInput
}

func (DoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*doArgs)(nil)).Elem()
}

type DoInput interface {
	pulumi.Input

	ToDoOutput() DoOutput
	ToDoOutputWithContext(ctx context.Context) DoOutput
}

func (*Do) ElementType() reflect.Type {
	return reflect.TypeOf((**Do)(nil)).Elem()
}

func (i *Do) ToDoOutput() DoOutput {
	return i.ToDoOutputWithContext(context.Background())
}

func (i *Do) ToDoOutputWithContext(ctx context.Context) DoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoOutput)
}

// DoArrayInput is an input type that accepts DoArray and DoArrayOutput values.
// You can construct a concrete instance of `DoArrayInput` via:
//
//	DoArray{ DoArgs{...} }
type DoArrayInput interface {
	pulumi.Input

	ToDoArrayOutput() DoArrayOutput
	ToDoArrayOutputWithContext(context.Context) DoArrayOutput
}

type DoArray []DoInput

func (DoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Do)(nil)).Elem()
}

func (i DoArray) ToDoArrayOutput() DoArrayOutput {
	return i.ToDoArrayOutputWithContext(context.Background())
}

func (i DoArray) ToDoArrayOutputWithContext(ctx context.Context) DoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoArrayOutput)
}

// DoMapInput is an input type that accepts DoMap and DoMapOutput values.
// You can construct a concrete instance of `DoMapInput` via:
//
//	DoMap{ "key": DoArgs{...} }
type DoMapInput interface {
	pulumi.Input

	ToDoMapOutput() DoMapOutput
	ToDoMapOutputWithContext(context.Context) DoMapOutput
}

type DoMap map[string]DoInput

func (DoMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Do)(nil)).Elem()
}

func (i DoMap) ToDoMapOutput() DoMapOutput {
	return i.ToDoMapOutputWithContext(context.Background())
}

func (i DoMap) ToDoMapOutputWithContext(ctx context.Context) DoMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DoMapOutput)
}

type DoOutput struct{ *pulumi.OutputState }

func (DoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Do)(nil)).Elem()
}

func (o DoOutput) ToDoOutput() DoOutput {
	return o
}

func (o DoOutput) ToDoOutputWithContext(ctx context.Context) DoOutput {
	return o
}

// IP Address of BIGIP Host to be used for this resource,this is optional parameter.
// whenever we specify this parameter it gets overwrite provider configuration
func (o DoOutput) BigipAddress() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.StringPtrOutput { return v.BigipAddress }).(pulumi.StringPtrOutput)
}

// Password of  BIGIP host to be used for this resource
func (o DoOutput) BigipPassword() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.StringPtrOutput { return v.BigipPassword }).(pulumi.StringPtrOutput)
}

// Port number of BIGIP host to be used for this resource,this is optional parameter.
// whenever we specify this parameter it gets overwrite provider configuration
func (o DoOutput) BigipPort() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.StringPtrOutput { return v.BigipPort }).(pulumi.StringPtrOutput)
}

// Enable to use an external authentication source (LDAP, TACACS, etc)
func (o DoOutput) BigipTokenAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.BoolPtrOutput { return v.BigipTokenAuth }).(pulumi.BoolPtrOutput)
}

// UserName of BIGIP host to be used for this resource,this is optional parameter.
// whenever we specify this parameter it gets overwrite provider configuration
func (o DoOutput) BigipUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.StringPtrOutput { return v.BigipUser }).(pulumi.StringPtrOutput)
}

// Name of the of the Declarative DO JSON file
func (o DoOutput) DoJson() pulumi.StringOutput {
	return o.ApplyT(func(v *Do) pulumi.StringOutput { return v.DoJson }).(pulumi.StringOutput)
}

// unique identifier for DO resource
//
// Deprecated: this attribute is no longer in use
func (o DoOutput) TenantName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.StringPtrOutput { return v.TenantName }).(pulumi.StringPtrOutput)
}

// DO json
func (o DoOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *Do) pulumi.IntPtrOutput { return v.Timeout }).(pulumi.IntPtrOutput)
}

type DoArrayOutput struct{ *pulumi.OutputState }

func (DoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*Do)(nil)).Elem()
}

func (o DoArrayOutput) ToDoArrayOutput() DoArrayOutput {
	return o
}

func (o DoArrayOutput) ToDoArrayOutputWithContext(ctx context.Context) DoArrayOutput {
	return o
}

func (o DoArrayOutput) Index(i pulumi.IntInput) DoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *Do {
		return vs[0].([]*Do)[vs[1].(int)]
	}).(DoOutput)
}

type DoMapOutput struct{ *pulumi.OutputState }

func (DoMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*Do)(nil)).Elem()
}

func (o DoMapOutput) ToDoMapOutput() DoMapOutput {
	return o
}

func (o DoMapOutput) ToDoMapOutputWithContext(ctx context.Context) DoMapOutput {
	return o
}

func (o DoMapOutput) MapIndex(k pulumi.StringInput) DoOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *Do {
		return vs[0].(map[string]*Do)[vs[1].(string)]
	}).(DoOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DoInput)(nil)).Elem(), &Do{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoArrayInput)(nil)).Elem(), DoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DoMapInput)(nil)).Elem(), DoMap{})
	pulumi.RegisterOutputType(DoOutput{})
	pulumi.RegisterOutputType(DoArrayOutput{})
	pulumi.RegisterOutputType(DoMapOutput{})
}
