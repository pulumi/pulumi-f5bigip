// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package sys

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `sys.Dns` Configures DNS server on F5 BIG-IP
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-f5bigip/sdk/v2/go/f5bigip/sys"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := sys.NewDns(ctx, "dns1", &sys.DnsArgs{
// 			Description: pulumi.String("/Common/DNS1"),
// 			NameServers: pulumi.StringArray{
// 				pulumi.String("1.1.1.1"),
// 			},
// 			NumberOfDots: pulumi.Int(2),
// 			Searches: pulumi.StringArray{
// 				pulumi.String("f5.com"),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Dns struct {
	pulumi.CustomResourceState

	// Provide description for your DNS server
	Description pulumi.StringOutput `pulumi:"description"`
	// Name or IP address of the DNS server
	NameServers pulumi.StringArrayOutput `pulumi:"nameServers"`
	// Configures the number of dots needed in a name before an initial absolute query will be made.
	NumberOfDots pulumi.IntPtrOutput `pulumi:"numberOfDots"`
	// Specify what domains you want to search
	Searches pulumi.StringArrayOutput `pulumi:"searches"`
}

// NewDns registers a new resource with the given unique name, arguments, and options.
func NewDns(ctx *pulumi.Context,
	name string, args *DnsArgs, opts ...pulumi.ResourceOption) (*Dns, error) {
	if args == nil || args.Description == nil {
		return nil, errors.New("missing required argument 'Description'")
	}
	if args == nil {
		args = &DnsArgs{}
	}
	var resource Dns
	err := ctx.RegisterResource("f5bigip:sys/dns:Dns", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDns gets an existing Dns resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDns(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DnsState, opts ...pulumi.ResourceOption) (*Dns, error) {
	var resource Dns
	err := ctx.ReadResource("f5bigip:sys/dns:Dns", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Dns resources.
type dnsState struct {
	// Provide description for your DNS server
	Description *string `pulumi:"description"`
	// Name or IP address of the DNS server
	NameServers []string `pulumi:"nameServers"`
	// Configures the number of dots needed in a name before an initial absolute query will be made.
	NumberOfDots *int `pulumi:"numberOfDots"`
	// Specify what domains you want to search
	Searches []string `pulumi:"searches"`
}

type DnsState struct {
	// Provide description for your DNS server
	Description pulumi.StringPtrInput
	// Name or IP address of the DNS server
	NameServers pulumi.StringArrayInput
	// Configures the number of dots needed in a name before an initial absolute query will be made.
	NumberOfDots pulumi.IntPtrInput
	// Specify what domains you want to search
	Searches pulumi.StringArrayInput
}

func (DnsState) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsState)(nil)).Elem()
}

type dnsArgs struct {
	// Provide description for your DNS server
	Description string `pulumi:"description"`
	// Name or IP address of the DNS server
	NameServers []string `pulumi:"nameServers"`
	// Configures the number of dots needed in a name before an initial absolute query will be made.
	NumberOfDots *int `pulumi:"numberOfDots"`
	// Specify what domains you want to search
	Searches []string `pulumi:"searches"`
}

// The set of arguments for constructing a Dns resource.
type DnsArgs struct {
	// Provide description for your DNS server
	Description pulumi.StringInput
	// Name or IP address of the DNS server
	NameServers pulumi.StringArrayInput
	// Configures the number of dots needed in a name before an initial absolute query will be made.
	NumberOfDots pulumi.IntPtrInput
	// Specify what domains you want to search
	Searches pulumi.StringArrayInput
}

func (DnsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*dnsArgs)(nil)).Elem()
}
