// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sys

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `sys.Snmp` provides details bout how to enable "ilx", "asm" "apm" resource on BIG-IP
// 
// > This content is derived from https://github.com/terraform-providers/terraform-provider-bigip/blob/master/website/docs/r/sys_snmp.html.markdown.
type Snmp struct {
	pulumi.CustomResourceState

	// Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
	Allowedaddresses pulumi.StringArrayOutput `pulumi:"allowedaddresses"`
	// Specifies the contact information for the system administrator.
	SysContact pulumi.StringPtrOutput `pulumi:"sysContact"`
	// Describes the system's physical location.
	SysLocation pulumi.StringPtrOutput `pulumi:"sysLocation"`
}

// NewSnmp registers a new resource with the given unique name, arguments, and options.
func NewSnmp(ctx *pulumi.Context,
	name string, args *SnmpArgs, opts ...pulumi.ResourceOption) (*Snmp, error) {
	if args == nil {
		args = &SnmpArgs{}
	}
	var resource Snmp
	err := ctx.RegisterResource("f5bigip:sys/snmp:Snmp", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetSnmp gets an existing Snmp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnmp(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *SnmpState, opts ...pulumi.ResourceOption) (*Snmp, error) {
	var resource Snmp
	err := ctx.ReadResource("f5bigip:sys/snmp:Snmp", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Snmp resources.
type snmpState struct {
	// Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
	Allowedaddresses []string `pulumi:"allowedaddresses"`
	// Specifies the contact information for the system administrator.
	SysContact *string `pulumi:"sysContact"`
	// Describes the system's physical location.
	SysLocation *string `pulumi:"sysLocation"`
}

type SnmpState struct {
	// Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
	Allowedaddresses pulumi.StringArrayInput
	// Specifies the contact information for the system administrator.
	SysContact pulumi.StringPtrInput
	// Describes the system's physical location.
	SysLocation pulumi.StringPtrInput
}

func (SnmpState) ElementType() reflect.Type {
	return reflect.TypeOf((*snmpState)(nil)).Elem()
}

type snmpArgs struct {
	// Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
	Allowedaddresses []string `pulumi:"allowedaddresses"`
	// Specifies the contact information for the system administrator.
	SysContact *string `pulumi:"sysContact"`
	// Describes the system's physical location.
	SysLocation *string `pulumi:"sysLocation"`
}

// The set of arguments for constructing a Snmp resource.
type SnmpArgs struct {
	// Configures hosts or networks from which snmpd can accept traffic. Entries go directly into hosts.allow.
	Allowedaddresses pulumi.StringArrayInput
	// Specifies the contact information for the system administrator.
	SysContact pulumi.StringPtrInput
	// Describes the system's physical location.
	SysLocation pulumi.StringPtrInput
}

func (SnmpArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*snmpArgs)(nil)).Elem()
}

