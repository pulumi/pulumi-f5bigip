// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package sys

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `sys.Provision` provides details bout how to enable "ilx", "asm" "apm" resource on BIG-IP
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-bigip/blob/master/website/docs/r/bigip_sys_provision.html.markdown.
type Provision struct {
	pulumi.CustomResourceState

	// cpu Ratio
	CpuRatio pulumi.IntPtrOutput `pulumi:"cpuRatio"`
	// disk Ratio
	DiskRatio pulumi.IntPtrOutput `pulumi:"diskRatio"`
	// path
	FullPath pulumi.StringOutput `pulumi:"fullPath"`
	// what level nominal or dedicated
	Level pulumi.StringPtrOutput `pulumi:"level"`
	// memory Ratio
	MemoryRatio pulumi.IntPtrOutput `pulumi:"memoryRatio"`
	// Name of the module to be provisioned
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewProvision registers a new resource with the given unique name, arguments, and options.
func NewProvision(ctx *pulumi.Context,
	name string, args *ProvisionArgs, opts ...pulumi.ResourceOption) (*Provision, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &ProvisionArgs{}
	}
	var resource Provision
	err := ctx.RegisterResource("f5bigip:sys/provision:Provision", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProvision gets an existing Provision resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProvision(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProvisionState, opts ...pulumi.ResourceOption) (*Provision, error) {
	var resource Provision
	err := ctx.ReadResource("f5bigip:sys/provision:Provision", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Provision resources.
type provisionState struct {
	// cpu Ratio
	CpuRatio *int `pulumi:"cpuRatio"`
	// disk Ratio
	DiskRatio *int `pulumi:"diskRatio"`
	// path
	FullPath *string `pulumi:"fullPath"`
	// what level nominal or dedicated
	Level *string `pulumi:"level"`
	// memory Ratio
	MemoryRatio *int `pulumi:"memoryRatio"`
	// Name of the module to be provisioned
	Name *string `pulumi:"name"`
}

type ProvisionState struct {
	// cpu Ratio
	CpuRatio pulumi.IntPtrInput
	// disk Ratio
	DiskRatio pulumi.IntPtrInput
	// path
	FullPath pulumi.StringPtrInput
	// what level nominal or dedicated
	Level pulumi.StringPtrInput
	// memory Ratio
	MemoryRatio pulumi.IntPtrInput
	// Name of the module to be provisioned
	Name pulumi.StringPtrInput
}

func (ProvisionState) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionState)(nil)).Elem()
}

type provisionArgs struct {
	// cpu Ratio
	CpuRatio *int `pulumi:"cpuRatio"`
	// disk Ratio
	DiskRatio *int `pulumi:"diskRatio"`
	// path
	FullPath *string `pulumi:"fullPath"`
	// what level nominal or dedicated
	Level *string `pulumi:"level"`
	// memory Ratio
	MemoryRatio *int `pulumi:"memoryRatio"`
	// Name of the module to be provisioned
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a Provision resource.
type ProvisionArgs struct {
	// cpu Ratio
	CpuRatio pulumi.IntPtrInput
	// disk Ratio
	DiskRatio pulumi.IntPtrInput
	// path
	FullPath pulumi.StringPtrInput
	// what level nominal or dedicated
	Level pulumi.StringPtrInput
	// memory Ratio
	MemoryRatio pulumi.IntPtrInput
	// Name of the module to be provisioned
	Name pulumi.StringInput
}

func (ProvisionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*provisionArgs)(nil)).Elem()
}
