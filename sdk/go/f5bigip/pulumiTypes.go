// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package f5bigip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type EventServiceDiscoveryNode struct {
	Id   *string `pulumi:"id"`
	Ip   *string `pulumi:"ip"`
	Port *int    `pulumi:"port"`
}

// EventServiceDiscoveryNodeInput is an input type that accepts EventServiceDiscoveryNodeArgs and EventServiceDiscoveryNodeOutput values.
// You can construct a concrete instance of `EventServiceDiscoveryNodeInput` via:
//
//          EventServiceDiscoveryNodeArgs{...}
type EventServiceDiscoveryNodeInput interface {
	pulumi.Input

	ToEventServiceDiscoveryNodeOutput() EventServiceDiscoveryNodeOutput
	ToEventServiceDiscoveryNodeOutputWithContext(context.Context) EventServiceDiscoveryNodeOutput
}

type EventServiceDiscoveryNodeArgs struct {
	Id   pulumi.StringPtrInput `pulumi:"id"`
	Ip   pulumi.StringPtrInput `pulumi:"ip"`
	Port pulumi.IntPtrInput    `pulumi:"port"`
}

func (EventServiceDiscoveryNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventServiceDiscoveryNode)(nil)).Elem()
}

func (i EventServiceDiscoveryNodeArgs) ToEventServiceDiscoveryNodeOutput() EventServiceDiscoveryNodeOutput {
	return i.ToEventServiceDiscoveryNodeOutputWithContext(context.Background())
}

func (i EventServiceDiscoveryNodeArgs) ToEventServiceDiscoveryNodeOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventServiceDiscoveryNodeOutput)
}

// EventServiceDiscoveryNodeArrayInput is an input type that accepts EventServiceDiscoveryNodeArray and EventServiceDiscoveryNodeArrayOutput values.
// You can construct a concrete instance of `EventServiceDiscoveryNodeArrayInput` via:
//
//          EventServiceDiscoveryNodeArray{ EventServiceDiscoveryNodeArgs{...} }
type EventServiceDiscoveryNodeArrayInput interface {
	pulumi.Input

	ToEventServiceDiscoveryNodeArrayOutput() EventServiceDiscoveryNodeArrayOutput
	ToEventServiceDiscoveryNodeArrayOutputWithContext(context.Context) EventServiceDiscoveryNodeArrayOutput
}

type EventServiceDiscoveryNodeArray []EventServiceDiscoveryNodeInput

func (EventServiceDiscoveryNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventServiceDiscoveryNode)(nil)).Elem()
}

func (i EventServiceDiscoveryNodeArray) ToEventServiceDiscoveryNodeArrayOutput() EventServiceDiscoveryNodeArrayOutput {
	return i.ToEventServiceDiscoveryNodeArrayOutputWithContext(context.Background())
}

func (i EventServiceDiscoveryNodeArray) ToEventServiceDiscoveryNodeArrayOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventServiceDiscoveryNodeArrayOutput)
}

type EventServiceDiscoveryNodeOutput struct{ *pulumi.OutputState }

func (EventServiceDiscoveryNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventServiceDiscoveryNode)(nil)).Elem()
}

func (o EventServiceDiscoveryNodeOutput) ToEventServiceDiscoveryNodeOutput() EventServiceDiscoveryNodeOutput {
	return o
}

func (o EventServiceDiscoveryNodeOutput) ToEventServiceDiscoveryNodeOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeOutput {
	return o
}

func (o EventServiceDiscoveryNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventServiceDiscoveryNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o EventServiceDiscoveryNodeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventServiceDiscoveryNode) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

func (o EventServiceDiscoveryNodeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventServiceDiscoveryNode) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type EventServiceDiscoveryNodeArrayOutput struct{ *pulumi.OutputState }

func (EventServiceDiscoveryNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventServiceDiscoveryNode)(nil)).Elem()
}

func (o EventServiceDiscoveryNodeArrayOutput) ToEventServiceDiscoveryNodeArrayOutput() EventServiceDiscoveryNodeArrayOutput {
	return o
}

func (o EventServiceDiscoveryNodeArrayOutput) ToEventServiceDiscoveryNodeArrayOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeArrayOutput {
	return o
}

func (o EventServiceDiscoveryNodeArrayOutput) Index(i pulumi.IntInput) EventServiceDiscoveryNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventServiceDiscoveryNode {
		return vs[0].([]EventServiceDiscoveryNode)[vs[1].(int)]
	}).(EventServiceDiscoveryNodeOutput)
}

func init() {
	pulumi.RegisterOutputType(EventServiceDiscoveryNodeOutput{})
	pulumi.RegisterOutputType(EventServiceDiscoveryNodeArrayOutput{})
}
