// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package f5bigip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type EventServiceDiscoveryNode struct {
	// name of node
	Id *string `pulumi:"id"`
	// ip of nonde
	Ip *string `pulumi:"ip"`
	// port
	Port *int `pulumi:"port"`
}

// EventServiceDiscoveryNodeInput is an input type that accepts EventServiceDiscoveryNodeArgs and EventServiceDiscoveryNodeOutput values.
// You can construct a concrete instance of `EventServiceDiscoveryNodeInput` via:
//
//	EventServiceDiscoveryNodeArgs{...}
type EventServiceDiscoveryNodeInput interface {
	pulumi.Input

	ToEventServiceDiscoveryNodeOutput() EventServiceDiscoveryNodeOutput
	ToEventServiceDiscoveryNodeOutputWithContext(context.Context) EventServiceDiscoveryNodeOutput
}

type EventServiceDiscoveryNodeArgs struct {
	// name of node
	Id pulumi.StringPtrInput `pulumi:"id"`
	// ip of nonde
	Ip pulumi.StringPtrInput `pulumi:"ip"`
	// port
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (EventServiceDiscoveryNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*EventServiceDiscoveryNode)(nil)).Elem()
}

func (i EventServiceDiscoveryNodeArgs) ToEventServiceDiscoveryNodeOutput() EventServiceDiscoveryNodeOutput {
	return i.ToEventServiceDiscoveryNodeOutputWithContext(context.Background())
}

func (i EventServiceDiscoveryNodeArgs) ToEventServiceDiscoveryNodeOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventServiceDiscoveryNodeOutput)
}

// EventServiceDiscoveryNodeArrayInput is an input type that accepts EventServiceDiscoveryNodeArray and EventServiceDiscoveryNodeArrayOutput values.
// You can construct a concrete instance of `EventServiceDiscoveryNodeArrayInput` via:
//
//	EventServiceDiscoveryNodeArray{ EventServiceDiscoveryNodeArgs{...} }
type EventServiceDiscoveryNodeArrayInput interface {
	pulumi.Input

	ToEventServiceDiscoveryNodeArrayOutput() EventServiceDiscoveryNodeArrayOutput
	ToEventServiceDiscoveryNodeArrayOutputWithContext(context.Context) EventServiceDiscoveryNodeArrayOutput
}

type EventServiceDiscoveryNodeArray []EventServiceDiscoveryNodeInput

func (EventServiceDiscoveryNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventServiceDiscoveryNode)(nil)).Elem()
}

func (i EventServiceDiscoveryNodeArray) ToEventServiceDiscoveryNodeArrayOutput() EventServiceDiscoveryNodeArrayOutput {
	return i.ToEventServiceDiscoveryNodeArrayOutputWithContext(context.Background())
}

func (i EventServiceDiscoveryNodeArray) ToEventServiceDiscoveryNodeArrayOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EventServiceDiscoveryNodeArrayOutput)
}

type EventServiceDiscoveryNodeOutput struct{ *pulumi.OutputState }

func (EventServiceDiscoveryNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*EventServiceDiscoveryNode)(nil)).Elem()
}

func (o EventServiceDiscoveryNodeOutput) ToEventServiceDiscoveryNodeOutput() EventServiceDiscoveryNodeOutput {
	return o
}

func (o EventServiceDiscoveryNodeOutput) ToEventServiceDiscoveryNodeOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeOutput {
	return o
}

// name of node
func (o EventServiceDiscoveryNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventServiceDiscoveryNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// ip of nonde
func (o EventServiceDiscoveryNodeOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v EventServiceDiscoveryNode) *string { return v.Ip }).(pulumi.StringPtrOutput)
}

// port
func (o EventServiceDiscoveryNodeOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v EventServiceDiscoveryNode) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type EventServiceDiscoveryNodeArrayOutput struct{ *pulumi.OutputState }

func (EventServiceDiscoveryNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]EventServiceDiscoveryNode)(nil)).Elem()
}

func (o EventServiceDiscoveryNodeArrayOutput) ToEventServiceDiscoveryNodeArrayOutput() EventServiceDiscoveryNodeArrayOutput {
	return o
}

func (o EventServiceDiscoveryNodeArrayOutput) ToEventServiceDiscoveryNodeArrayOutputWithContext(ctx context.Context) EventServiceDiscoveryNodeArrayOutput {
	return o
}

func (o EventServiceDiscoveryNodeArrayOutput) Index(i pulumi.IntInput) EventServiceDiscoveryNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) EventServiceDiscoveryNode {
		return vs[0].([]EventServiceDiscoveryNode)[vs[1].(int)]
	}).(EventServiceDiscoveryNodeOutput)
}

type FastHttpAppMonitor struct {
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval *int `pulumi:"interval"`
	// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
	MonitorAuth *bool `pulumi:"monitorAuth"`
	// password for web access on FAST-Generated Pool Monitor.
	Password *string `pulumi:"password"`
	// The presence of this string anywhere in the HTTP response implies availability.
	Response *string `pulumi:"response"`
	// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
	SendString *string `pulumi:"sendString"`
	// username for web access on FAST-Generated Pool Monitor.
	Username *string `pulumi:"username"`
}

// FastHttpAppMonitorInput is an input type that accepts FastHttpAppMonitorArgs and FastHttpAppMonitorOutput values.
// You can construct a concrete instance of `FastHttpAppMonitorInput` via:
//
//	FastHttpAppMonitorArgs{...}
type FastHttpAppMonitorInput interface {
	pulumi.Input

	ToFastHttpAppMonitorOutput() FastHttpAppMonitorOutput
	ToFastHttpAppMonitorOutputWithContext(context.Context) FastHttpAppMonitorOutput
}

type FastHttpAppMonitorArgs struct {
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
	MonitorAuth pulumi.BoolPtrInput `pulumi:"monitorAuth"`
	// password for web access on FAST-Generated Pool Monitor.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The presence of this string anywhere in the HTTP response implies availability.
	Response pulumi.StringPtrInput `pulumi:"response"`
	// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
	SendString pulumi.StringPtrInput `pulumi:"sendString"`
	// username for web access on FAST-Generated Pool Monitor.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (FastHttpAppMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppMonitor)(nil)).Elem()
}

func (i FastHttpAppMonitorArgs) ToFastHttpAppMonitorOutput() FastHttpAppMonitorOutput {
	return i.ToFastHttpAppMonitorOutputWithContext(context.Background())
}

func (i FastHttpAppMonitorArgs) ToFastHttpAppMonitorOutputWithContext(ctx context.Context) FastHttpAppMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppMonitorOutput)
}

func (i FastHttpAppMonitorArgs) ToFastHttpAppMonitorPtrOutput() FastHttpAppMonitorPtrOutput {
	return i.ToFastHttpAppMonitorPtrOutputWithContext(context.Background())
}

func (i FastHttpAppMonitorArgs) ToFastHttpAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppMonitorOutput).ToFastHttpAppMonitorPtrOutputWithContext(ctx)
}

// FastHttpAppMonitorPtrInput is an input type that accepts FastHttpAppMonitorArgs, FastHttpAppMonitorPtr and FastHttpAppMonitorPtrOutput values.
// You can construct a concrete instance of `FastHttpAppMonitorPtrInput` via:
//
//	        FastHttpAppMonitorArgs{...}
//
//	or:
//
//	        nil
type FastHttpAppMonitorPtrInput interface {
	pulumi.Input

	ToFastHttpAppMonitorPtrOutput() FastHttpAppMonitorPtrOutput
	ToFastHttpAppMonitorPtrOutputWithContext(context.Context) FastHttpAppMonitorPtrOutput
}

type fastHttpAppMonitorPtrType FastHttpAppMonitorArgs

func FastHttpAppMonitorPtr(v *FastHttpAppMonitorArgs) FastHttpAppMonitorPtrInput {
	return (*fastHttpAppMonitorPtrType)(v)
}

func (*fastHttpAppMonitorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpAppMonitor)(nil)).Elem()
}

func (i *fastHttpAppMonitorPtrType) ToFastHttpAppMonitorPtrOutput() FastHttpAppMonitorPtrOutput {
	return i.ToFastHttpAppMonitorPtrOutputWithContext(context.Background())
}

func (i *fastHttpAppMonitorPtrType) ToFastHttpAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppMonitorPtrOutput)
}

type FastHttpAppMonitorOutput struct{ *pulumi.OutputState }

func (FastHttpAppMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppMonitor)(nil)).Elem()
}

func (o FastHttpAppMonitorOutput) ToFastHttpAppMonitorOutput() FastHttpAppMonitorOutput {
	return o
}

func (o FastHttpAppMonitorOutput) ToFastHttpAppMonitorOutputWithContext(ctx context.Context) FastHttpAppMonitorOutput {
	return o
}

func (o FastHttpAppMonitorOutput) ToFastHttpAppMonitorPtrOutput() FastHttpAppMonitorPtrOutput {
	return o.ToFastHttpAppMonitorPtrOutputWithContext(context.Background())
}

func (o FastHttpAppMonitorOutput) ToFastHttpAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpAppMonitorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpAppMonitor) *FastHttpAppMonitor {
		return &v
	}).(FastHttpAppMonitorPtrOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpAppMonitor) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
func (o FastHttpAppMonitorOutput) MonitorAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FastHttpAppMonitor) *bool { return v.MonitorAuth }).(pulumi.BoolPtrOutput)
}

// password for web access on FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpAppMonitor) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The presence of this string anywhere in the HTTP response implies availability.
func (o FastHttpAppMonitorOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpAppMonitor) *string { return v.Response }).(pulumi.StringPtrOutput)
}

// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorOutput) SendString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpAppMonitor) *string { return v.SendString }).(pulumi.StringPtrOutput)
}

// username for web access on FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpAppMonitor) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type FastHttpAppMonitorPtrOutput struct{ *pulumi.OutputState }

func (FastHttpAppMonitorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpAppMonitor)(nil)).Elem()
}

func (o FastHttpAppMonitorPtrOutput) ToFastHttpAppMonitorPtrOutput() FastHttpAppMonitorPtrOutput {
	return o
}

func (o FastHttpAppMonitorPtrOutput) ToFastHttpAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpAppMonitorPtrOutput {
	return o
}

func (o FastHttpAppMonitorPtrOutput) Elem() FastHttpAppMonitorOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) FastHttpAppMonitor {
		if v != nil {
			return *v
		}
		var ret FastHttpAppMonitor
		return ret
	}).(FastHttpAppMonitorOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
func (o FastHttpAppMonitorPtrOutput) MonitorAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) *bool {
		if v == nil {
			return nil
		}
		return v.MonitorAuth
	}).(pulumi.BoolPtrOutput)
}

// password for web access on FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The presence of this string anywhere in the HTTP response implies availability.
func (o FastHttpAppMonitorPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.Response
	}).(pulumi.StringPtrOutput)
}

// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorPtrOutput) SendString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.SendString
	}).(pulumi.StringPtrOutput)
}

// username for web access on FAST-Generated Pool Monitor.
func (o FastHttpAppMonitorPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type FastHttpAppPoolMember struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses []string `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit *int `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port *int `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup *int `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes *bool `pulumi:"shareNodes"`
}

// FastHttpAppPoolMemberInput is an input type that accepts FastHttpAppPoolMemberArgs and FastHttpAppPoolMemberOutput values.
// You can construct a concrete instance of `FastHttpAppPoolMemberInput` via:
//
//	FastHttpAppPoolMemberArgs{...}
type FastHttpAppPoolMemberInput interface {
	pulumi.Input

	ToFastHttpAppPoolMemberOutput() FastHttpAppPoolMemberOutput
	ToFastHttpAppPoolMemberOutputWithContext(context.Context) FastHttpAppPoolMemberOutput
}

type FastHttpAppPoolMemberArgs struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit pulumi.IntPtrInput `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup pulumi.IntPtrInput `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes pulumi.BoolPtrInput `pulumi:"shareNodes"`
}

func (FastHttpAppPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppPoolMember)(nil)).Elem()
}

func (i FastHttpAppPoolMemberArgs) ToFastHttpAppPoolMemberOutput() FastHttpAppPoolMemberOutput {
	return i.ToFastHttpAppPoolMemberOutputWithContext(context.Background())
}

func (i FastHttpAppPoolMemberArgs) ToFastHttpAppPoolMemberOutputWithContext(ctx context.Context) FastHttpAppPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppPoolMemberOutput)
}

// FastHttpAppPoolMemberArrayInput is an input type that accepts FastHttpAppPoolMemberArray and FastHttpAppPoolMemberArrayOutput values.
// You can construct a concrete instance of `FastHttpAppPoolMemberArrayInput` via:
//
//	FastHttpAppPoolMemberArray{ FastHttpAppPoolMemberArgs{...} }
type FastHttpAppPoolMemberArrayInput interface {
	pulumi.Input

	ToFastHttpAppPoolMemberArrayOutput() FastHttpAppPoolMemberArrayOutput
	ToFastHttpAppPoolMemberArrayOutputWithContext(context.Context) FastHttpAppPoolMemberArrayOutput
}

type FastHttpAppPoolMemberArray []FastHttpAppPoolMemberInput

func (FastHttpAppPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastHttpAppPoolMember)(nil)).Elem()
}

func (i FastHttpAppPoolMemberArray) ToFastHttpAppPoolMemberArrayOutput() FastHttpAppPoolMemberArrayOutput {
	return i.ToFastHttpAppPoolMemberArrayOutputWithContext(context.Background())
}

func (i FastHttpAppPoolMemberArray) ToFastHttpAppPoolMemberArrayOutputWithContext(ctx context.Context) FastHttpAppPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppPoolMemberArrayOutput)
}

type FastHttpAppPoolMemberOutput struct{ *pulumi.OutputState }

func (FastHttpAppPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppPoolMember)(nil)).Elem()
}

func (o FastHttpAppPoolMemberOutput) ToFastHttpAppPoolMemberOutput() FastHttpAppPoolMemberOutput {
	return o
}

func (o FastHttpAppPoolMemberOutput) ToFastHttpAppPoolMemberOutputWithContext(ctx context.Context) FastHttpAppPoolMemberOutput {
	return o
}

// List of server address to be used for FAST-Generated Pool.
func (o FastHttpAppPoolMemberOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FastHttpAppPoolMember) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// connectionLimit value to be used for FAST-Generated Pool.
func (o FastHttpAppPoolMemberOutput) ConnectionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpAppPoolMember) *int { return v.ConnectionLimit }).(pulumi.IntPtrOutput)
}

// port number of serviceport to be used for FAST-Generated Pool.
func (o FastHttpAppPoolMemberOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpAppPoolMember) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// priorityGroup value to be used for FAST-Generated Pool.
func (o FastHttpAppPoolMemberOutput) PriorityGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpAppPoolMember) *int { return v.PriorityGroup }).(pulumi.IntPtrOutput)
}

// shareNodes value to be used for FAST-Generated Pool.
func (o FastHttpAppPoolMemberOutput) ShareNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FastHttpAppPoolMember) *bool { return v.ShareNodes }).(pulumi.BoolPtrOutput)
}

type FastHttpAppPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (FastHttpAppPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastHttpAppPoolMember)(nil)).Elem()
}

func (o FastHttpAppPoolMemberArrayOutput) ToFastHttpAppPoolMemberArrayOutput() FastHttpAppPoolMemberArrayOutput {
	return o
}

func (o FastHttpAppPoolMemberArrayOutput) ToFastHttpAppPoolMemberArrayOutputWithContext(ctx context.Context) FastHttpAppPoolMemberArrayOutput {
	return o
}

func (o FastHttpAppPoolMemberArrayOutput) Index(i pulumi.IntInput) FastHttpAppPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FastHttpAppPoolMember {
		return vs[0].([]FastHttpAppPoolMember)[vs[1].(int)]
	}).(FastHttpAppPoolMemberOutput)
}

type FastHttpAppVirtualServer struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip string `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port int `pulumi:"port"`
}

// FastHttpAppVirtualServerInput is an input type that accepts FastHttpAppVirtualServerArgs and FastHttpAppVirtualServerOutput values.
// You can construct a concrete instance of `FastHttpAppVirtualServerInput` via:
//
//	FastHttpAppVirtualServerArgs{...}
type FastHttpAppVirtualServerInput interface {
	pulumi.Input

	ToFastHttpAppVirtualServerOutput() FastHttpAppVirtualServerOutput
	ToFastHttpAppVirtualServerOutputWithContext(context.Context) FastHttpAppVirtualServerOutput
}

type FastHttpAppVirtualServerArgs struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip pulumi.StringInput `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port pulumi.IntInput `pulumi:"port"`
}

func (FastHttpAppVirtualServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppVirtualServer)(nil)).Elem()
}

func (i FastHttpAppVirtualServerArgs) ToFastHttpAppVirtualServerOutput() FastHttpAppVirtualServerOutput {
	return i.ToFastHttpAppVirtualServerOutputWithContext(context.Background())
}

func (i FastHttpAppVirtualServerArgs) ToFastHttpAppVirtualServerOutputWithContext(ctx context.Context) FastHttpAppVirtualServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppVirtualServerOutput)
}

func (i FastHttpAppVirtualServerArgs) ToFastHttpAppVirtualServerPtrOutput() FastHttpAppVirtualServerPtrOutput {
	return i.ToFastHttpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i FastHttpAppVirtualServerArgs) ToFastHttpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppVirtualServerOutput).ToFastHttpAppVirtualServerPtrOutputWithContext(ctx)
}

// FastHttpAppVirtualServerPtrInput is an input type that accepts FastHttpAppVirtualServerArgs, FastHttpAppVirtualServerPtr and FastHttpAppVirtualServerPtrOutput values.
// You can construct a concrete instance of `FastHttpAppVirtualServerPtrInput` via:
//
//	        FastHttpAppVirtualServerArgs{...}
//
//	or:
//
//	        nil
type FastHttpAppVirtualServerPtrInput interface {
	pulumi.Input

	ToFastHttpAppVirtualServerPtrOutput() FastHttpAppVirtualServerPtrOutput
	ToFastHttpAppVirtualServerPtrOutputWithContext(context.Context) FastHttpAppVirtualServerPtrOutput
}

type fastHttpAppVirtualServerPtrType FastHttpAppVirtualServerArgs

func FastHttpAppVirtualServerPtr(v *FastHttpAppVirtualServerArgs) FastHttpAppVirtualServerPtrInput {
	return (*fastHttpAppVirtualServerPtrType)(v)
}

func (*fastHttpAppVirtualServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpAppVirtualServer)(nil)).Elem()
}

func (i *fastHttpAppVirtualServerPtrType) ToFastHttpAppVirtualServerPtrOutput() FastHttpAppVirtualServerPtrOutput {
	return i.ToFastHttpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i *fastHttpAppVirtualServerPtrType) ToFastHttpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppVirtualServerPtrOutput)
}

type FastHttpAppVirtualServerOutput struct{ *pulumi.OutputState }

func (FastHttpAppVirtualServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppVirtualServer)(nil)).Elem()
}

func (o FastHttpAppVirtualServerOutput) ToFastHttpAppVirtualServerOutput() FastHttpAppVirtualServerOutput {
	return o
}

func (o FastHttpAppVirtualServerOutput) ToFastHttpAppVirtualServerOutputWithContext(ctx context.Context) FastHttpAppVirtualServerOutput {
	return o
}

func (o FastHttpAppVirtualServerOutput) ToFastHttpAppVirtualServerPtrOutput() FastHttpAppVirtualServerPtrOutput {
	return o.ToFastHttpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (o FastHttpAppVirtualServerOutput) ToFastHttpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpAppVirtualServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpAppVirtualServer) *FastHttpAppVirtualServer {
		return &v
	}).(FastHttpAppVirtualServerPtrOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastHttpAppVirtualServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v FastHttpAppVirtualServer) string { return v.Ip }).(pulumi.StringOutput)
}

// Port number to used for accessing virtual server/application
func (o FastHttpAppVirtualServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FastHttpAppVirtualServer) int { return v.Port }).(pulumi.IntOutput)
}

type FastHttpAppVirtualServerPtrOutput struct{ *pulumi.OutputState }

func (FastHttpAppVirtualServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpAppVirtualServer)(nil)).Elem()
}

func (o FastHttpAppVirtualServerPtrOutput) ToFastHttpAppVirtualServerPtrOutput() FastHttpAppVirtualServerPtrOutput {
	return o
}

func (o FastHttpAppVirtualServerPtrOutput) ToFastHttpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpAppVirtualServerPtrOutput {
	return o
}

func (o FastHttpAppVirtualServerPtrOutput) Elem() FastHttpAppVirtualServerOutput {
	return o.ApplyT(func(v *FastHttpAppVirtualServer) FastHttpAppVirtualServer {
		if v != nil {
			return *v
		}
		var ret FastHttpAppVirtualServer
		return ret
	}).(FastHttpAppVirtualServerOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastHttpAppVirtualServerPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpAppVirtualServer) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

// Port number to used for accessing virtual server/application
func (o FastHttpAppVirtualServerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastHttpAppVirtualServer) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type FastHttpAppWafSecurityPolicy struct {
	// Setting `true` will enable FAST to create WAF Security Policy.
	Enable bool `pulumi:"enable"`
}

// FastHttpAppWafSecurityPolicyInput is an input type that accepts FastHttpAppWafSecurityPolicyArgs and FastHttpAppWafSecurityPolicyOutput values.
// You can construct a concrete instance of `FastHttpAppWafSecurityPolicyInput` via:
//
//	FastHttpAppWafSecurityPolicyArgs{...}
type FastHttpAppWafSecurityPolicyInput interface {
	pulumi.Input

	ToFastHttpAppWafSecurityPolicyOutput() FastHttpAppWafSecurityPolicyOutput
	ToFastHttpAppWafSecurityPolicyOutputWithContext(context.Context) FastHttpAppWafSecurityPolicyOutput
}

type FastHttpAppWafSecurityPolicyArgs struct {
	// Setting `true` will enable FAST to create WAF Security Policy.
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (FastHttpAppWafSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppWafSecurityPolicy)(nil)).Elem()
}

func (i FastHttpAppWafSecurityPolicyArgs) ToFastHttpAppWafSecurityPolicyOutput() FastHttpAppWafSecurityPolicyOutput {
	return i.ToFastHttpAppWafSecurityPolicyOutputWithContext(context.Background())
}

func (i FastHttpAppWafSecurityPolicyArgs) ToFastHttpAppWafSecurityPolicyOutputWithContext(ctx context.Context) FastHttpAppWafSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppWafSecurityPolicyOutput)
}

func (i FastHttpAppWafSecurityPolicyArgs) ToFastHttpAppWafSecurityPolicyPtrOutput() FastHttpAppWafSecurityPolicyPtrOutput {
	return i.ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i FastHttpAppWafSecurityPolicyArgs) ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpAppWafSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppWafSecurityPolicyOutput).ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(ctx)
}

// FastHttpAppWafSecurityPolicyPtrInput is an input type that accepts FastHttpAppWafSecurityPolicyArgs, FastHttpAppWafSecurityPolicyPtr and FastHttpAppWafSecurityPolicyPtrOutput values.
// You can construct a concrete instance of `FastHttpAppWafSecurityPolicyPtrInput` via:
//
//	        FastHttpAppWafSecurityPolicyArgs{...}
//
//	or:
//
//	        nil
type FastHttpAppWafSecurityPolicyPtrInput interface {
	pulumi.Input

	ToFastHttpAppWafSecurityPolicyPtrOutput() FastHttpAppWafSecurityPolicyPtrOutput
	ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(context.Context) FastHttpAppWafSecurityPolicyPtrOutput
}

type fastHttpAppWafSecurityPolicyPtrType FastHttpAppWafSecurityPolicyArgs

func FastHttpAppWafSecurityPolicyPtr(v *FastHttpAppWafSecurityPolicyArgs) FastHttpAppWafSecurityPolicyPtrInput {
	return (*fastHttpAppWafSecurityPolicyPtrType)(v)
}

func (*fastHttpAppWafSecurityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpAppWafSecurityPolicy)(nil)).Elem()
}

func (i *fastHttpAppWafSecurityPolicyPtrType) ToFastHttpAppWafSecurityPolicyPtrOutput() FastHttpAppWafSecurityPolicyPtrOutput {
	return i.ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i *fastHttpAppWafSecurityPolicyPtrType) ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpAppWafSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpAppWafSecurityPolicyPtrOutput)
}

type FastHttpAppWafSecurityPolicyOutput struct{ *pulumi.OutputState }

func (FastHttpAppWafSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpAppWafSecurityPolicy)(nil)).Elem()
}

func (o FastHttpAppWafSecurityPolicyOutput) ToFastHttpAppWafSecurityPolicyOutput() FastHttpAppWafSecurityPolicyOutput {
	return o
}

func (o FastHttpAppWafSecurityPolicyOutput) ToFastHttpAppWafSecurityPolicyOutputWithContext(ctx context.Context) FastHttpAppWafSecurityPolicyOutput {
	return o
}

func (o FastHttpAppWafSecurityPolicyOutput) ToFastHttpAppWafSecurityPolicyPtrOutput() FastHttpAppWafSecurityPolicyPtrOutput {
	return o.ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(context.Background())
}

func (o FastHttpAppWafSecurityPolicyOutput) ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpAppWafSecurityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpAppWafSecurityPolicy) *FastHttpAppWafSecurityPolicy {
		return &v
	}).(FastHttpAppWafSecurityPolicyPtrOutput)
}

// Setting `true` will enable FAST to create WAF Security Policy.
func (o FastHttpAppWafSecurityPolicyOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v FastHttpAppWafSecurityPolicy) bool { return v.Enable }).(pulumi.BoolOutput)
}

type FastHttpAppWafSecurityPolicyPtrOutput struct{ *pulumi.OutputState }

func (FastHttpAppWafSecurityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpAppWafSecurityPolicy)(nil)).Elem()
}

func (o FastHttpAppWafSecurityPolicyPtrOutput) ToFastHttpAppWafSecurityPolicyPtrOutput() FastHttpAppWafSecurityPolicyPtrOutput {
	return o
}

func (o FastHttpAppWafSecurityPolicyPtrOutput) ToFastHttpAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpAppWafSecurityPolicyPtrOutput {
	return o
}

func (o FastHttpAppWafSecurityPolicyPtrOutput) Elem() FastHttpAppWafSecurityPolicyOutput {
	return o.ApplyT(func(v *FastHttpAppWafSecurityPolicy) FastHttpAppWafSecurityPolicy {
		if v != nil {
			return *v
		}
		var ret FastHttpAppWafSecurityPolicy
		return ret
	}).(FastHttpAppWafSecurityPolicyOutput)
}

// Setting `true` will enable FAST to create WAF Security Policy.
func (o FastHttpAppWafSecurityPolicyPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FastHttpAppWafSecurityPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type FastHttpsAppMonitor struct {
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval *int `pulumi:"interval"`
	// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
	MonitorAuth *bool `pulumi:"monitorAuth"`
	// password for web access on FAST-Generated Pool Monitor.
	Password *string `pulumi:"password"`
	// The presence of this string anywhere in the HTTP response implies availability.
	Response *string `pulumi:"response"`
	// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
	SendString *string `pulumi:"sendString"`
	// username for web access on FAST-Generated Pool Monitor.
	Username *string `pulumi:"username"`
}

// FastHttpsAppMonitorInput is an input type that accepts FastHttpsAppMonitorArgs and FastHttpsAppMonitorOutput values.
// You can construct a concrete instance of `FastHttpsAppMonitorInput` via:
//
//	FastHttpsAppMonitorArgs{...}
type FastHttpsAppMonitorInput interface {
	pulumi.Input

	ToFastHttpsAppMonitorOutput() FastHttpsAppMonitorOutput
	ToFastHttpsAppMonitorOutputWithContext(context.Context) FastHttpsAppMonitorOutput
}

type FastHttpsAppMonitorArgs struct {
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
	MonitorAuth pulumi.BoolPtrInput `pulumi:"monitorAuth"`
	// password for web access on FAST-Generated Pool Monitor.
	Password pulumi.StringPtrInput `pulumi:"password"`
	// The presence of this string anywhere in the HTTP response implies availability.
	Response pulumi.StringPtrInput `pulumi:"response"`
	// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
	SendString pulumi.StringPtrInput `pulumi:"sendString"`
	// username for web access on FAST-Generated Pool Monitor.
	Username pulumi.StringPtrInput `pulumi:"username"`
}

func (FastHttpsAppMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppMonitor)(nil)).Elem()
}

func (i FastHttpsAppMonitorArgs) ToFastHttpsAppMonitorOutput() FastHttpsAppMonitorOutput {
	return i.ToFastHttpsAppMonitorOutputWithContext(context.Background())
}

func (i FastHttpsAppMonitorArgs) ToFastHttpsAppMonitorOutputWithContext(ctx context.Context) FastHttpsAppMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppMonitorOutput)
}

func (i FastHttpsAppMonitorArgs) ToFastHttpsAppMonitorPtrOutput() FastHttpsAppMonitorPtrOutput {
	return i.ToFastHttpsAppMonitorPtrOutputWithContext(context.Background())
}

func (i FastHttpsAppMonitorArgs) ToFastHttpsAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpsAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppMonitorOutput).ToFastHttpsAppMonitorPtrOutputWithContext(ctx)
}

// FastHttpsAppMonitorPtrInput is an input type that accepts FastHttpsAppMonitorArgs, FastHttpsAppMonitorPtr and FastHttpsAppMonitorPtrOutput values.
// You can construct a concrete instance of `FastHttpsAppMonitorPtrInput` via:
//
//	        FastHttpsAppMonitorArgs{...}
//
//	or:
//
//	        nil
type FastHttpsAppMonitorPtrInput interface {
	pulumi.Input

	ToFastHttpsAppMonitorPtrOutput() FastHttpsAppMonitorPtrOutput
	ToFastHttpsAppMonitorPtrOutputWithContext(context.Context) FastHttpsAppMonitorPtrOutput
}

type fastHttpsAppMonitorPtrType FastHttpsAppMonitorArgs

func FastHttpsAppMonitorPtr(v *FastHttpsAppMonitorArgs) FastHttpsAppMonitorPtrInput {
	return (*fastHttpsAppMonitorPtrType)(v)
}

func (*fastHttpsAppMonitorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppMonitor)(nil)).Elem()
}

func (i *fastHttpsAppMonitorPtrType) ToFastHttpsAppMonitorPtrOutput() FastHttpsAppMonitorPtrOutput {
	return i.ToFastHttpsAppMonitorPtrOutputWithContext(context.Background())
}

func (i *fastHttpsAppMonitorPtrType) ToFastHttpsAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpsAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppMonitorPtrOutput)
}

type FastHttpsAppMonitorOutput struct{ *pulumi.OutputState }

func (FastHttpsAppMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppMonitor)(nil)).Elem()
}

func (o FastHttpsAppMonitorOutput) ToFastHttpsAppMonitorOutput() FastHttpsAppMonitorOutput {
	return o
}

func (o FastHttpsAppMonitorOutput) ToFastHttpsAppMonitorOutputWithContext(ctx context.Context) FastHttpsAppMonitorOutput {
	return o
}

func (o FastHttpsAppMonitorOutput) ToFastHttpsAppMonitorPtrOutput() FastHttpsAppMonitorPtrOutput {
	return o.ToFastHttpsAppMonitorPtrOutputWithContext(context.Background())
}

func (o FastHttpsAppMonitorOutput) ToFastHttpsAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpsAppMonitorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpsAppMonitor) *FastHttpsAppMonitor {
		return &v
	}).(FastHttpsAppMonitorPtrOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpsAppMonitor) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
func (o FastHttpsAppMonitorOutput) MonitorAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FastHttpsAppMonitor) *bool { return v.MonitorAuth }).(pulumi.BoolPtrOutput)
}

// password for web access on FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpsAppMonitor) *string { return v.Password }).(pulumi.StringPtrOutput)
}

// The presence of this string anywhere in the HTTP response implies availability.
func (o FastHttpsAppMonitorOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpsAppMonitor) *string { return v.Response }).(pulumi.StringPtrOutput)
}

// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorOutput) SendString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpsAppMonitor) *string { return v.SendString }).(pulumi.StringPtrOutput)
}

// username for web access on FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastHttpsAppMonitor) *string { return v.Username }).(pulumi.StringPtrOutput)
}

type FastHttpsAppMonitorPtrOutput struct{ *pulumi.OutputState }

func (FastHttpsAppMonitorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppMonitor)(nil)).Elem()
}

func (o FastHttpsAppMonitorPtrOutput) ToFastHttpsAppMonitorPtrOutput() FastHttpsAppMonitorPtrOutput {
	return o
}

func (o FastHttpsAppMonitorPtrOutput) ToFastHttpsAppMonitorPtrOutputWithContext(ctx context.Context) FastHttpsAppMonitorPtrOutput {
	return o
}

func (o FastHttpsAppMonitorPtrOutput) Elem() FastHttpsAppMonitorOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) FastHttpsAppMonitor {
		if v != nil {
			return *v
		}
		var ret FastHttpsAppMonitor
		return ret
	}).(FastHttpsAppMonitorOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// set `true` if the servers require login credentials for web access on FAST-Generated Pool Monitor. default is `false`.
func (o FastHttpsAppMonitorPtrOutput) MonitorAuth() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) *bool {
		if v == nil {
			return nil
		}
		return v.MonitorAuth
	}).(pulumi.BoolPtrOutput)
}

// password for web access on FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorPtrOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.Password
	}).(pulumi.StringPtrOutput)
}

// The presence of this string anywhere in the HTTP response implies availability.
func (o FastHttpsAppMonitorPtrOutput) Response() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.Response
	}).(pulumi.StringPtrOutput)
}

// Specify data to be sent during each health check for FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorPtrOutput) SendString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.SendString
	}).(pulumi.StringPtrOutput)
}

// username for web access on FAST-Generated Pool Monitor.
func (o FastHttpsAppMonitorPtrOutput) Username() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.Username
	}).(pulumi.StringPtrOutput)
}

type FastHttpsAppPoolMember struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses []string `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit *int `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port *int `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup *int `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes *bool `pulumi:"shareNodes"`
}

// FastHttpsAppPoolMemberInput is an input type that accepts FastHttpsAppPoolMemberArgs and FastHttpsAppPoolMemberOutput values.
// You can construct a concrete instance of `FastHttpsAppPoolMemberInput` via:
//
//	FastHttpsAppPoolMemberArgs{...}
type FastHttpsAppPoolMemberInput interface {
	pulumi.Input

	ToFastHttpsAppPoolMemberOutput() FastHttpsAppPoolMemberOutput
	ToFastHttpsAppPoolMemberOutputWithContext(context.Context) FastHttpsAppPoolMemberOutput
}

type FastHttpsAppPoolMemberArgs struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit pulumi.IntPtrInput `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup pulumi.IntPtrInput `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes pulumi.BoolPtrInput `pulumi:"shareNodes"`
}

func (FastHttpsAppPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppPoolMember)(nil)).Elem()
}

func (i FastHttpsAppPoolMemberArgs) ToFastHttpsAppPoolMemberOutput() FastHttpsAppPoolMemberOutput {
	return i.ToFastHttpsAppPoolMemberOutputWithContext(context.Background())
}

func (i FastHttpsAppPoolMemberArgs) ToFastHttpsAppPoolMemberOutputWithContext(ctx context.Context) FastHttpsAppPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppPoolMemberOutput)
}

// FastHttpsAppPoolMemberArrayInput is an input type that accepts FastHttpsAppPoolMemberArray and FastHttpsAppPoolMemberArrayOutput values.
// You can construct a concrete instance of `FastHttpsAppPoolMemberArrayInput` via:
//
//	FastHttpsAppPoolMemberArray{ FastHttpsAppPoolMemberArgs{...} }
type FastHttpsAppPoolMemberArrayInput interface {
	pulumi.Input

	ToFastHttpsAppPoolMemberArrayOutput() FastHttpsAppPoolMemberArrayOutput
	ToFastHttpsAppPoolMemberArrayOutputWithContext(context.Context) FastHttpsAppPoolMemberArrayOutput
}

type FastHttpsAppPoolMemberArray []FastHttpsAppPoolMemberInput

func (FastHttpsAppPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastHttpsAppPoolMember)(nil)).Elem()
}

func (i FastHttpsAppPoolMemberArray) ToFastHttpsAppPoolMemberArrayOutput() FastHttpsAppPoolMemberArrayOutput {
	return i.ToFastHttpsAppPoolMemberArrayOutputWithContext(context.Background())
}

func (i FastHttpsAppPoolMemberArray) ToFastHttpsAppPoolMemberArrayOutputWithContext(ctx context.Context) FastHttpsAppPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppPoolMemberArrayOutput)
}

type FastHttpsAppPoolMemberOutput struct{ *pulumi.OutputState }

func (FastHttpsAppPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppPoolMember)(nil)).Elem()
}

func (o FastHttpsAppPoolMemberOutput) ToFastHttpsAppPoolMemberOutput() FastHttpsAppPoolMemberOutput {
	return o
}

func (o FastHttpsAppPoolMemberOutput) ToFastHttpsAppPoolMemberOutputWithContext(ctx context.Context) FastHttpsAppPoolMemberOutput {
	return o
}

// List of server address to be used for FAST-Generated Pool.
func (o FastHttpsAppPoolMemberOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FastHttpsAppPoolMember) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// connectionLimit value to be used for FAST-Generated Pool.
func (o FastHttpsAppPoolMemberOutput) ConnectionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpsAppPoolMember) *int { return v.ConnectionLimit }).(pulumi.IntPtrOutput)
}

// port number of serviceport to be used for FAST-Generated Pool.
func (o FastHttpsAppPoolMemberOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpsAppPoolMember) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// priorityGroup value to be used for FAST-Generated Pool.
func (o FastHttpsAppPoolMemberOutput) PriorityGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastHttpsAppPoolMember) *int { return v.PriorityGroup }).(pulumi.IntPtrOutput)
}

// shareNodes value to be used for FAST-Generated Pool.
func (o FastHttpsAppPoolMemberOutput) ShareNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FastHttpsAppPoolMember) *bool { return v.ShareNodes }).(pulumi.BoolPtrOutput)
}

type FastHttpsAppPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (FastHttpsAppPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastHttpsAppPoolMember)(nil)).Elem()
}

func (o FastHttpsAppPoolMemberArrayOutput) ToFastHttpsAppPoolMemberArrayOutput() FastHttpsAppPoolMemberArrayOutput {
	return o
}

func (o FastHttpsAppPoolMemberArrayOutput) ToFastHttpsAppPoolMemberArrayOutputWithContext(ctx context.Context) FastHttpsAppPoolMemberArrayOutput {
	return o
}

func (o FastHttpsAppPoolMemberArrayOutput) Index(i pulumi.IntInput) FastHttpsAppPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FastHttpsAppPoolMember {
		return vs[0].([]FastHttpsAppPoolMember)[vs[1].(int)]
	}).(FastHttpsAppPoolMemberOutput)
}

type FastHttpsAppTlsClientProfile struct {
	// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
	TlsCertName string `pulumi:"tlsCertName"`
	// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
	TlsKeyName string `pulumi:"tlsKeyName"`
}

// FastHttpsAppTlsClientProfileInput is an input type that accepts FastHttpsAppTlsClientProfileArgs and FastHttpsAppTlsClientProfileOutput values.
// You can construct a concrete instance of `FastHttpsAppTlsClientProfileInput` via:
//
//	FastHttpsAppTlsClientProfileArgs{...}
type FastHttpsAppTlsClientProfileInput interface {
	pulumi.Input

	ToFastHttpsAppTlsClientProfileOutput() FastHttpsAppTlsClientProfileOutput
	ToFastHttpsAppTlsClientProfileOutputWithContext(context.Context) FastHttpsAppTlsClientProfileOutput
}

type FastHttpsAppTlsClientProfileArgs struct {
	// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
	TlsCertName pulumi.StringInput `pulumi:"tlsCertName"`
	// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
	TlsKeyName pulumi.StringInput `pulumi:"tlsKeyName"`
}

func (FastHttpsAppTlsClientProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppTlsClientProfile)(nil)).Elem()
}

func (i FastHttpsAppTlsClientProfileArgs) ToFastHttpsAppTlsClientProfileOutput() FastHttpsAppTlsClientProfileOutput {
	return i.ToFastHttpsAppTlsClientProfileOutputWithContext(context.Background())
}

func (i FastHttpsAppTlsClientProfileArgs) ToFastHttpsAppTlsClientProfileOutputWithContext(ctx context.Context) FastHttpsAppTlsClientProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppTlsClientProfileOutput)
}

func (i FastHttpsAppTlsClientProfileArgs) ToFastHttpsAppTlsClientProfilePtrOutput() FastHttpsAppTlsClientProfilePtrOutput {
	return i.ToFastHttpsAppTlsClientProfilePtrOutputWithContext(context.Background())
}

func (i FastHttpsAppTlsClientProfileArgs) ToFastHttpsAppTlsClientProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsClientProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppTlsClientProfileOutput).ToFastHttpsAppTlsClientProfilePtrOutputWithContext(ctx)
}

// FastHttpsAppTlsClientProfilePtrInput is an input type that accepts FastHttpsAppTlsClientProfileArgs, FastHttpsAppTlsClientProfilePtr and FastHttpsAppTlsClientProfilePtrOutput values.
// You can construct a concrete instance of `FastHttpsAppTlsClientProfilePtrInput` via:
//
//	        FastHttpsAppTlsClientProfileArgs{...}
//
//	or:
//
//	        nil
type FastHttpsAppTlsClientProfilePtrInput interface {
	pulumi.Input

	ToFastHttpsAppTlsClientProfilePtrOutput() FastHttpsAppTlsClientProfilePtrOutput
	ToFastHttpsAppTlsClientProfilePtrOutputWithContext(context.Context) FastHttpsAppTlsClientProfilePtrOutput
}

type fastHttpsAppTlsClientProfilePtrType FastHttpsAppTlsClientProfileArgs

func FastHttpsAppTlsClientProfilePtr(v *FastHttpsAppTlsClientProfileArgs) FastHttpsAppTlsClientProfilePtrInput {
	return (*fastHttpsAppTlsClientProfilePtrType)(v)
}

func (*fastHttpsAppTlsClientProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppTlsClientProfile)(nil)).Elem()
}

func (i *fastHttpsAppTlsClientProfilePtrType) ToFastHttpsAppTlsClientProfilePtrOutput() FastHttpsAppTlsClientProfilePtrOutput {
	return i.ToFastHttpsAppTlsClientProfilePtrOutputWithContext(context.Background())
}

func (i *fastHttpsAppTlsClientProfilePtrType) ToFastHttpsAppTlsClientProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsClientProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppTlsClientProfilePtrOutput)
}

type FastHttpsAppTlsClientProfileOutput struct{ *pulumi.OutputState }

func (FastHttpsAppTlsClientProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppTlsClientProfile)(nil)).Elem()
}

func (o FastHttpsAppTlsClientProfileOutput) ToFastHttpsAppTlsClientProfileOutput() FastHttpsAppTlsClientProfileOutput {
	return o
}

func (o FastHttpsAppTlsClientProfileOutput) ToFastHttpsAppTlsClientProfileOutputWithContext(ctx context.Context) FastHttpsAppTlsClientProfileOutput {
	return o
}

func (o FastHttpsAppTlsClientProfileOutput) ToFastHttpsAppTlsClientProfilePtrOutput() FastHttpsAppTlsClientProfilePtrOutput {
	return o.ToFastHttpsAppTlsClientProfilePtrOutputWithContext(context.Background())
}

func (o FastHttpsAppTlsClientProfileOutput) ToFastHttpsAppTlsClientProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsClientProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpsAppTlsClientProfile) *FastHttpsAppTlsClientProfile {
		return &v
	}).(FastHttpsAppTlsClientProfilePtrOutput)
}

// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsClientProfileOutput) TlsCertName() pulumi.StringOutput {
	return o.ApplyT(func(v FastHttpsAppTlsClientProfile) string { return v.TlsCertName }).(pulumi.StringOutput)
}

// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsClientProfileOutput) TlsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v FastHttpsAppTlsClientProfile) string { return v.TlsKeyName }).(pulumi.StringOutput)
}

type FastHttpsAppTlsClientProfilePtrOutput struct{ *pulumi.OutputState }

func (FastHttpsAppTlsClientProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppTlsClientProfile)(nil)).Elem()
}

func (o FastHttpsAppTlsClientProfilePtrOutput) ToFastHttpsAppTlsClientProfilePtrOutput() FastHttpsAppTlsClientProfilePtrOutput {
	return o
}

func (o FastHttpsAppTlsClientProfilePtrOutput) ToFastHttpsAppTlsClientProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsClientProfilePtrOutput {
	return o
}

func (o FastHttpsAppTlsClientProfilePtrOutput) Elem() FastHttpsAppTlsClientProfileOutput {
	return o.ApplyT(func(v *FastHttpsAppTlsClientProfile) FastHttpsAppTlsClientProfile {
		if v != nil {
			return *v
		}
		var ret FastHttpsAppTlsClientProfile
		return ret
	}).(FastHttpsAppTlsClientProfileOutput)
}

// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsClientProfilePtrOutput) TlsCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppTlsClientProfile) *string {
		if v == nil {
			return nil
		}
		return &v.TlsCertName
	}).(pulumi.StringPtrOutput)
}

// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsClientProfilePtrOutput) TlsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppTlsClientProfile) *string {
		if v == nil {
			return nil
		}
		return &v.TlsKeyName
	}).(pulumi.StringPtrOutput)
}

type FastHttpsAppTlsServerProfile struct {
	// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
	TlsCertName string `pulumi:"tlsCertName"`
	// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
	TlsKeyName string `pulumi:"tlsKeyName"`
}

// FastHttpsAppTlsServerProfileInput is an input type that accepts FastHttpsAppTlsServerProfileArgs and FastHttpsAppTlsServerProfileOutput values.
// You can construct a concrete instance of `FastHttpsAppTlsServerProfileInput` via:
//
//	FastHttpsAppTlsServerProfileArgs{...}
type FastHttpsAppTlsServerProfileInput interface {
	pulumi.Input

	ToFastHttpsAppTlsServerProfileOutput() FastHttpsAppTlsServerProfileOutput
	ToFastHttpsAppTlsServerProfileOutputWithContext(context.Context) FastHttpsAppTlsServerProfileOutput
}

type FastHttpsAppTlsServerProfileArgs struct {
	// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
	TlsCertName pulumi.StringInput `pulumi:"tlsCertName"`
	// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
	TlsKeyName pulumi.StringInput `pulumi:"tlsKeyName"`
}

func (FastHttpsAppTlsServerProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppTlsServerProfile)(nil)).Elem()
}

func (i FastHttpsAppTlsServerProfileArgs) ToFastHttpsAppTlsServerProfileOutput() FastHttpsAppTlsServerProfileOutput {
	return i.ToFastHttpsAppTlsServerProfileOutputWithContext(context.Background())
}

func (i FastHttpsAppTlsServerProfileArgs) ToFastHttpsAppTlsServerProfileOutputWithContext(ctx context.Context) FastHttpsAppTlsServerProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppTlsServerProfileOutput)
}

func (i FastHttpsAppTlsServerProfileArgs) ToFastHttpsAppTlsServerProfilePtrOutput() FastHttpsAppTlsServerProfilePtrOutput {
	return i.ToFastHttpsAppTlsServerProfilePtrOutputWithContext(context.Background())
}

func (i FastHttpsAppTlsServerProfileArgs) ToFastHttpsAppTlsServerProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsServerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppTlsServerProfileOutput).ToFastHttpsAppTlsServerProfilePtrOutputWithContext(ctx)
}

// FastHttpsAppTlsServerProfilePtrInput is an input type that accepts FastHttpsAppTlsServerProfileArgs, FastHttpsAppTlsServerProfilePtr and FastHttpsAppTlsServerProfilePtrOutput values.
// You can construct a concrete instance of `FastHttpsAppTlsServerProfilePtrInput` via:
//
//	        FastHttpsAppTlsServerProfileArgs{...}
//
//	or:
//
//	        nil
type FastHttpsAppTlsServerProfilePtrInput interface {
	pulumi.Input

	ToFastHttpsAppTlsServerProfilePtrOutput() FastHttpsAppTlsServerProfilePtrOutput
	ToFastHttpsAppTlsServerProfilePtrOutputWithContext(context.Context) FastHttpsAppTlsServerProfilePtrOutput
}

type fastHttpsAppTlsServerProfilePtrType FastHttpsAppTlsServerProfileArgs

func FastHttpsAppTlsServerProfilePtr(v *FastHttpsAppTlsServerProfileArgs) FastHttpsAppTlsServerProfilePtrInput {
	return (*fastHttpsAppTlsServerProfilePtrType)(v)
}

func (*fastHttpsAppTlsServerProfilePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppTlsServerProfile)(nil)).Elem()
}

func (i *fastHttpsAppTlsServerProfilePtrType) ToFastHttpsAppTlsServerProfilePtrOutput() FastHttpsAppTlsServerProfilePtrOutput {
	return i.ToFastHttpsAppTlsServerProfilePtrOutputWithContext(context.Background())
}

func (i *fastHttpsAppTlsServerProfilePtrType) ToFastHttpsAppTlsServerProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsServerProfilePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppTlsServerProfilePtrOutput)
}

type FastHttpsAppTlsServerProfileOutput struct{ *pulumi.OutputState }

func (FastHttpsAppTlsServerProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppTlsServerProfile)(nil)).Elem()
}

func (o FastHttpsAppTlsServerProfileOutput) ToFastHttpsAppTlsServerProfileOutput() FastHttpsAppTlsServerProfileOutput {
	return o
}

func (o FastHttpsAppTlsServerProfileOutput) ToFastHttpsAppTlsServerProfileOutputWithContext(ctx context.Context) FastHttpsAppTlsServerProfileOutput {
	return o
}

func (o FastHttpsAppTlsServerProfileOutput) ToFastHttpsAppTlsServerProfilePtrOutput() FastHttpsAppTlsServerProfilePtrOutput {
	return o.ToFastHttpsAppTlsServerProfilePtrOutputWithContext(context.Background())
}

func (o FastHttpsAppTlsServerProfileOutput) ToFastHttpsAppTlsServerProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsServerProfilePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpsAppTlsServerProfile) *FastHttpsAppTlsServerProfile {
		return &v
	}).(FastHttpsAppTlsServerProfilePtrOutput)
}

// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsServerProfileOutput) TlsCertName() pulumi.StringOutput {
	return o.ApplyT(func(v FastHttpsAppTlsServerProfile) string { return v.TlsCertName }).(pulumi.StringOutput)
}

// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsServerProfileOutput) TlsKeyName() pulumi.StringOutput {
	return o.ApplyT(func(v FastHttpsAppTlsServerProfile) string { return v.TlsKeyName }).(pulumi.StringOutput)
}

type FastHttpsAppTlsServerProfilePtrOutput struct{ *pulumi.OutputState }

func (FastHttpsAppTlsServerProfilePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppTlsServerProfile)(nil)).Elem()
}

func (o FastHttpsAppTlsServerProfilePtrOutput) ToFastHttpsAppTlsServerProfilePtrOutput() FastHttpsAppTlsServerProfilePtrOutput {
	return o
}

func (o FastHttpsAppTlsServerProfilePtrOutput) ToFastHttpsAppTlsServerProfilePtrOutputWithContext(ctx context.Context) FastHttpsAppTlsServerProfilePtrOutput {
	return o
}

func (o FastHttpsAppTlsServerProfilePtrOutput) Elem() FastHttpsAppTlsServerProfileOutput {
	return o.ApplyT(func(v *FastHttpsAppTlsServerProfile) FastHttpsAppTlsServerProfile {
		if v != nil {
			return *v
		}
		var ret FastHttpsAppTlsServerProfile
		return ret
	}).(FastHttpsAppTlsServerProfileOutput)
}

// Name of existing BIG-IP SSL certificate to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsServerProfilePtrOutput) TlsCertName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppTlsServerProfile) *string {
		if v == nil {
			return nil
		}
		return &v.TlsCertName
	}).(pulumi.StringPtrOutput)
}

// Name of existing BIG-IP SSL Key to be used for FAST-Generated TLS Server Profile.
func (o FastHttpsAppTlsServerProfilePtrOutput) TlsKeyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppTlsServerProfile) *string {
		if v == nil {
			return nil
		}
		return &v.TlsKeyName
	}).(pulumi.StringPtrOutput)
}

type FastHttpsAppVirtualServer struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip string `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port int `pulumi:"port"`
}

// FastHttpsAppVirtualServerInput is an input type that accepts FastHttpsAppVirtualServerArgs and FastHttpsAppVirtualServerOutput values.
// You can construct a concrete instance of `FastHttpsAppVirtualServerInput` via:
//
//	FastHttpsAppVirtualServerArgs{...}
type FastHttpsAppVirtualServerInput interface {
	pulumi.Input

	ToFastHttpsAppVirtualServerOutput() FastHttpsAppVirtualServerOutput
	ToFastHttpsAppVirtualServerOutputWithContext(context.Context) FastHttpsAppVirtualServerOutput
}

type FastHttpsAppVirtualServerArgs struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip pulumi.StringInput `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port pulumi.IntInput `pulumi:"port"`
}

func (FastHttpsAppVirtualServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppVirtualServer)(nil)).Elem()
}

func (i FastHttpsAppVirtualServerArgs) ToFastHttpsAppVirtualServerOutput() FastHttpsAppVirtualServerOutput {
	return i.ToFastHttpsAppVirtualServerOutputWithContext(context.Background())
}

func (i FastHttpsAppVirtualServerArgs) ToFastHttpsAppVirtualServerOutputWithContext(ctx context.Context) FastHttpsAppVirtualServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppVirtualServerOutput)
}

func (i FastHttpsAppVirtualServerArgs) ToFastHttpsAppVirtualServerPtrOutput() FastHttpsAppVirtualServerPtrOutput {
	return i.ToFastHttpsAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i FastHttpsAppVirtualServerArgs) ToFastHttpsAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpsAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppVirtualServerOutput).ToFastHttpsAppVirtualServerPtrOutputWithContext(ctx)
}

// FastHttpsAppVirtualServerPtrInput is an input type that accepts FastHttpsAppVirtualServerArgs, FastHttpsAppVirtualServerPtr and FastHttpsAppVirtualServerPtrOutput values.
// You can construct a concrete instance of `FastHttpsAppVirtualServerPtrInput` via:
//
//	        FastHttpsAppVirtualServerArgs{...}
//
//	or:
//
//	        nil
type FastHttpsAppVirtualServerPtrInput interface {
	pulumi.Input

	ToFastHttpsAppVirtualServerPtrOutput() FastHttpsAppVirtualServerPtrOutput
	ToFastHttpsAppVirtualServerPtrOutputWithContext(context.Context) FastHttpsAppVirtualServerPtrOutput
}

type fastHttpsAppVirtualServerPtrType FastHttpsAppVirtualServerArgs

func FastHttpsAppVirtualServerPtr(v *FastHttpsAppVirtualServerArgs) FastHttpsAppVirtualServerPtrInput {
	return (*fastHttpsAppVirtualServerPtrType)(v)
}

func (*fastHttpsAppVirtualServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppVirtualServer)(nil)).Elem()
}

func (i *fastHttpsAppVirtualServerPtrType) ToFastHttpsAppVirtualServerPtrOutput() FastHttpsAppVirtualServerPtrOutput {
	return i.ToFastHttpsAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i *fastHttpsAppVirtualServerPtrType) ToFastHttpsAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpsAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppVirtualServerPtrOutput)
}

type FastHttpsAppVirtualServerOutput struct{ *pulumi.OutputState }

func (FastHttpsAppVirtualServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppVirtualServer)(nil)).Elem()
}

func (o FastHttpsAppVirtualServerOutput) ToFastHttpsAppVirtualServerOutput() FastHttpsAppVirtualServerOutput {
	return o
}

func (o FastHttpsAppVirtualServerOutput) ToFastHttpsAppVirtualServerOutputWithContext(ctx context.Context) FastHttpsAppVirtualServerOutput {
	return o
}

func (o FastHttpsAppVirtualServerOutput) ToFastHttpsAppVirtualServerPtrOutput() FastHttpsAppVirtualServerPtrOutput {
	return o.ToFastHttpsAppVirtualServerPtrOutputWithContext(context.Background())
}

func (o FastHttpsAppVirtualServerOutput) ToFastHttpsAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpsAppVirtualServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpsAppVirtualServer) *FastHttpsAppVirtualServer {
		return &v
	}).(FastHttpsAppVirtualServerPtrOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastHttpsAppVirtualServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v FastHttpsAppVirtualServer) string { return v.Ip }).(pulumi.StringOutput)
}

// Port number to used for accessing virtual server/application
func (o FastHttpsAppVirtualServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FastHttpsAppVirtualServer) int { return v.Port }).(pulumi.IntOutput)
}

type FastHttpsAppVirtualServerPtrOutput struct{ *pulumi.OutputState }

func (FastHttpsAppVirtualServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppVirtualServer)(nil)).Elem()
}

func (o FastHttpsAppVirtualServerPtrOutput) ToFastHttpsAppVirtualServerPtrOutput() FastHttpsAppVirtualServerPtrOutput {
	return o
}

func (o FastHttpsAppVirtualServerPtrOutput) ToFastHttpsAppVirtualServerPtrOutputWithContext(ctx context.Context) FastHttpsAppVirtualServerPtrOutput {
	return o
}

func (o FastHttpsAppVirtualServerPtrOutput) Elem() FastHttpsAppVirtualServerOutput {
	return o.ApplyT(func(v *FastHttpsAppVirtualServer) FastHttpsAppVirtualServer {
		if v != nil {
			return *v
		}
		var ret FastHttpsAppVirtualServer
		return ret
	}).(FastHttpsAppVirtualServerOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastHttpsAppVirtualServerPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppVirtualServer) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

// Port number to used for accessing virtual server/application
func (o FastHttpsAppVirtualServerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppVirtualServer) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type FastHttpsAppWafSecurityPolicy struct {
	// Setting `true` will enable FAST to create WAF Security Policy.
	Enable bool `pulumi:"enable"`
}

// FastHttpsAppWafSecurityPolicyInput is an input type that accepts FastHttpsAppWafSecurityPolicyArgs and FastHttpsAppWafSecurityPolicyOutput values.
// You can construct a concrete instance of `FastHttpsAppWafSecurityPolicyInput` via:
//
//	FastHttpsAppWafSecurityPolicyArgs{...}
type FastHttpsAppWafSecurityPolicyInput interface {
	pulumi.Input

	ToFastHttpsAppWafSecurityPolicyOutput() FastHttpsAppWafSecurityPolicyOutput
	ToFastHttpsAppWafSecurityPolicyOutputWithContext(context.Context) FastHttpsAppWafSecurityPolicyOutput
}

type FastHttpsAppWafSecurityPolicyArgs struct {
	// Setting `true` will enable FAST to create WAF Security Policy.
	Enable pulumi.BoolInput `pulumi:"enable"`
}

func (FastHttpsAppWafSecurityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppWafSecurityPolicy)(nil)).Elem()
}

func (i FastHttpsAppWafSecurityPolicyArgs) ToFastHttpsAppWafSecurityPolicyOutput() FastHttpsAppWafSecurityPolicyOutput {
	return i.ToFastHttpsAppWafSecurityPolicyOutputWithContext(context.Background())
}

func (i FastHttpsAppWafSecurityPolicyArgs) ToFastHttpsAppWafSecurityPolicyOutputWithContext(ctx context.Context) FastHttpsAppWafSecurityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppWafSecurityPolicyOutput)
}

func (i FastHttpsAppWafSecurityPolicyArgs) ToFastHttpsAppWafSecurityPolicyPtrOutput() FastHttpsAppWafSecurityPolicyPtrOutput {
	return i.ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i FastHttpsAppWafSecurityPolicyArgs) ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpsAppWafSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppWafSecurityPolicyOutput).ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(ctx)
}

// FastHttpsAppWafSecurityPolicyPtrInput is an input type that accepts FastHttpsAppWafSecurityPolicyArgs, FastHttpsAppWafSecurityPolicyPtr and FastHttpsAppWafSecurityPolicyPtrOutput values.
// You can construct a concrete instance of `FastHttpsAppWafSecurityPolicyPtrInput` via:
//
//	        FastHttpsAppWafSecurityPolicyArgs{...}
//
//	or:
//
//	        nil
type FastHttpsAppWafSecurityPolicyPtrInput interface {
	pulumi.Input

	ToFastHttpsAppWafSecurityPolicyPtrOutput() FastHttpsAppWafSecurityPolicyPtrOutput
	ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(context.Context) FastHttpsAppWafSecurityPolicyPtrOutput
}

type fastHttpsAppWafSecurityPolicyPtrType FastHttpsAppWafSecurityPolicyArgs

func FastHttpsAppWafSecurityPolicyPtr(v *FastHttpsAppWafSecurityPolicyArgs) FastHttpsAppWafSecurityPolicyPtrInput {
	return (*fastHttpsAppWafSecurityPolicyPtrType)(v)
}

func (*fastHttpsAppWafSecurityPolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppWafSecurityPolicy)(nil)).Elem()
}

func (i *fastHttpsAppWafSecurityPolicyPtrType) ToFastHttpsAppWafSecurityPolicyPtrOutput() FastHttpsAppWafSecurityPolicyPtrOutput {
	return i.ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(context.Background())
}

func (i *fastHttpsAppWafSecurityPolicyPtrType) ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpsAppWafSecurityPolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastHttpsAppWafSecurityPolicyPtrOutput)
}

type FastHttpsAppWafSecurityPolicyOutput struct{ *pulumi.OutputState }

func (FastHttpsAppWafSecurityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastHttpsAppWafSecurityPolicy)(nil)).Elem()
}

func (o FastHttpsAppWafSecurityPolicyOutput) ToFastHttpsAppWafSecurityPolicyOutput() FastHttpsAppWafSecurityPolicyOutput {
	return o
}

func (o FastHttpsAppWafSecurityPolicyOutput) ToFastHttpsAppWafSecurityPolicyOutputWithContext(ctx context.Context) FastHttpsAppWafSecurityPolicyOutput {
	return o
}

func (o FastHttpsAppWafSecurityPolicyOutput) ToFastHttpsAppWafSecurityPolicyPtrOutput() FastHttpsAppWafSecurityPolicyPtrOutput {
	return o.ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(context.Background())
}

func (o FastHttpsAppWafSecurityPolicyOutput) ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpsAppWafSecurityPolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastHttpsAppWafSecurityPolicy) *FastHttpsAppWafSecurityPolicy {
		return &v
	}).(FastHttpsAppWafSecurityPolicyPtrOutput)
}

// Setting `true` will enable FAST to create WAF Security Policy.
func (o FastHttpsAppWafSecurityPolicyOutput) Enable() pulumi.BoolOutput {
	return o.ApplyT(func(v FastHttpsAppWafSecurityPolicy) bool { return v.Enable }).(pulumi.BoolOutput)
}

type FastHttpsAppWafSecurityPolicyPtrOutput struct{ *pulumi.OutputState }

func (FastHttpsAppWafSecurityPolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastHttpsAppWafSecurityPolicy)(nil)).Elem()
}

func (o FastHttpsAppWafSecurityPolicyPtrOutput) ToFastHttpsAppWafSecurityPolicyPtrOutput() FastHttpsAppWafSecurityPolicyPtrOutput {
	return o
}

func (o FastHttpsAppWafSecurityPolicyPtrOutput) ToFastHttpsAppWafSecurityPolicyPtrOutputWithContext(ctx context.Context) FastHttpsAppWafSecurityPolicyPtrOutput {
	return o
}

func (o FastHttpsAppWafSecurityPolicyPtrOutput) Elem() FastHttpsAppWafSecurityPolicyOutput {
	return o.ApplyT(func(v *FastHttpsAppWafSecurityPolicy) FastHttpsAppWafSecurityPolicy {
		if v != nil {
			return *v
		}
		var ret FastHttpsAppWafSecurityPolicy
		return ret
	}).(FastHttpsAppWafSecurityPolicyOutput)
}

// Setting `true` will enable FAST to create WAF Security Policy.
func (o FastHttpsAppWafSecurityPolicyPtrOutput) Enable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *FastHttpsAppWafSecurityPolicy) *bool {
		if v == nil {
			return nil
		}
		return &v.Enable
	}).(pulumi.BoolPtrOutput)
}

type FastTcpAppMonitor struct {
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval *int `pulumi:"interval"`
}

// FastTcpAppMonitorInput is an input type that accepts FastTcpAppMonitorArgs and FastTcpAppMonitorOutput values.
// You can construct a concrete instance of `FastTcpAppMonitorInput` via:
//
//	FastTcpAppMonitorArgs{...}
type FastTcpAppMonitorInput interface {
	pulumi.Input

	ToFastTcpAppMonitorOutput() FastTcpAppMonitorOutput
	ToFastTcpAppMonitorOutputWithContext(context.Context) FastTcpAppMonitorOutput
}

type FastTcpAppMonitorArgs struct {
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
}

func (FastTcpAppMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastTcpAppMonitor)(nil)).Elem()
}

func (i FastTcpAppMonitorArgs) ToFastTcpAppMonitorOutput() FastTcpAppMonitorOutput {
	return i.ToFastTcpAppMonitorOutputWithContext(context.Background())
}

func (i FastTcpAppMonitorArgs) ToFastTcpAppMonitorOutputWithContext(ctx context.Context) FastTcpAppMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppMonitorOutput)
}

func (i FastTcpAppMonitorArgs) ToFastTcpAppMonitorPtrOutput() FastTcpAppMonitorPtrOutput {
	return i.ToFastTcpAppMonitorPtrOutputWithContext(context.Background())
}

func (i FastTcpAppMonitorArgs) ToFastTcpAppMonitorPtrOutputWithContext(ctx context.Context) FastTcpAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppMonitorOutput).ToFastTcpAppMonitorPtrOutputWithContext(ctx)
}

// FastTcpAppMonitorPtrInput is an input type that accepts FastTcpAppMonitorArgs, FastTcpAppMonitorPtr and FastTcpAppMonitorPtrOutput values.
// You can construct a concrete instance of `FastTcpAppMonitorPtrInput` via:
//
//	        FastTcpAppMonitorArgs{...}
//
//	or:
//
//	        nil
type FastTcpAppMonitorPtrInput interface {
	pulumi.Input

	ToFastTcpAppMonitorPtrOutput() FastTcpAppMonitorPtrOutput
	ToFastTcpAppMonitorPtrOutputWithContext(context.Context) FastTcpAppMonitorPtrOutput
}

type fastTcpAppMonitorPtrType FastTcpAppMonitorArgs

func FastTcpAppMonitorPtr(v *FastTcpAppMonitorArgs) FastTcpAppMonitorPtrInput {
	return (*fastTcpAppMonitorPtrType)(v)
}

func (*fastTcpAppMonitorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastTcpAppMonitor)(nil)).Elem()
}

func (i *fastTcpAppMonitorPtrType) ToFastTcpAppMonitorPtrOutput() FastTcpAppMonitorPtrOutput {
	return i.ToFastTcpAppMonitorPtrOutputWithContext(context.Background())
}

func (i *fastTcpAppMonitorPtrType) ToFastTcpAppMonitorPtrOutputWithContext(ctx context.Context) FastTcpAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppMonitorPtrOutput)
}

type FastTcpAppMonitorOutput struct{ *pulumi.OutputState }

func (FastTcpAppMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastTcpAppMonitor)(nil)).Elem()
}

func (o FastTcpAppMonitorOutput) ToFastTcpAppMonitorOutput() FastTcpAppMonitorOutput {
	return o
}

func (o FastTcpAppMonitorOutput) ToFastTcpAppMonitorOutputWithContext(ctx context.Context) FastTcpAppMonitorOutput {
	return o
}

func (o FastTcpAppMonitorOutput) ToFastTcpAppMonitorPtrOutput() FastTcpAppMonitorPtrOutput {
	return o.ToFastTcpAppMonitorPtrOutputWithContext(context.Background())
}

func (o FastTcpAppMonitorOutput) ToFastTcpAppMonitorPtrOutputWithContext(ctx context.Context) FastTcpAppMonitorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastTcpAppMonitor) *FastTcpAppMonitor {
		return &v
	}).(FastTcpAppMonitorPtrOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastTcpAppMonitorOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastTcpAppMonitor) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

type FastTcpAppMonitorPtrOutput struct{ *pulumi.OutputState }

func (FastTcpAppMonitorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastTcpAppMonitor)(nil)).Elem()
}

func (o FastTcpAppMonitorPtrOutput) ToFastTcpAppMonitorPtrOutput() FastTcpAppMonitorPtrOutput {
	return o
}

func (o FastTcpAppMonitorPtrOutput) ToFastTcpAppMonitorPtrOutputWithContext(ctx context.Context) FastTcpAppMonitorPtrOutput {
	return o
}

func (o FastTcpAppMonitorPtrOutput) Elem() FastTcpAppMonitorOutput {
	return o.ApplyT(func(v *FastTcpAppMonitor) FastTcpAppMonitor {
		if v != nil {
			return *v
		}
		var ret FastTcpAppMonitor
		return ret
	}).(FastTcpAppMonitorOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastTcpAppMonitorPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastTcpAppMonitor) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

type FastTcpAppPoolMember struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses []string `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit *int `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port *int `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup *int `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes *bool `pulumi:"shareNodes"`
}

// FastTcpAppPoolMemberInput is an input type that accepts FastTcpAppPoolMemberArgs and FastTcpAppPoolMemberOutput values.
// You can construct a concrete instance of `FastTcpAppPoolMemberInput` via:
//
//	FastTcpAppPoolMemberArgs{...}
type FastTcpAppPoolMemberInput interface {
	pulumi.Input

	ToFastTcpAppPoolMemberOutput() FastTcpAppPoolMemberOutput
	ToFastTcpAppPoolMemberOutputWithContext(context.Context) FastTcpAppPoolMemberOutput
}

type FastTcpAppPoolMemberArgs struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit pulumi.IntPtrInput `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup pulumi.IntPtrInput `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes pulumi.BoolPtrInput `pulumi:"shareNodes"`
}

func (FastTcpAppPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastTcpAppPoolMember)(nil)).Elem()
}

func (i FastTcpAppPoolMemberArgs) ToFastTcpAppPoolMemberOutput() FastTcpAppPoolMemberOutput {
	return i.ToFastTcpAppPoolMemberOutputWithContext(context.Background())
}

func (i FastTcpAppPoolMemberArgs) ToFastTcpAppPoolMemberOutputWithContext(ctx context.Context) FastTcpAppPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppPoolMemberOutput)
}

// FastTcpAppPoolMemberArrayInput is an input type that accepts FastTcpAppPoolMemberArray and FastTcpAppPoolMemberArrayOutput values.
// You can construct a concrete instance of `FastTcpAppPoolMemberArrayInput` via:
//
//	FastTcpAppPoolMemberArray{ FastTcpAppPoolMemberArgs{...} }
type FastTcpAppPoolMemberArrayInput interface {
	pulumi.Input

	ToFastTcpAppPoolMemberArrayOutput() FastTcpAppPoolMemberArrayOutput
	ToFastTcpAppPoolMemberArrayOutputWithContext(context.Context) FastTcpAppPoolMemberArrayOutput
}

type FastTcpAppPoolMemberArray []FastTcpAppPoolMemberInput

func (FastTcpAppPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastTcpAppPoolMember)(nil)).Elem()
}

func (i FastTcpAppPoolMemberArray) ToFastTcpAppPoolMemberArrayOutput() FastTcpAppPoolMemberArrayOutput {
	return i.ToFastTcpAppPoolMemberArrayOutputWithContext(context.Background())
}

func (i FastTcpAppPoolMemberArray) ToFastTcpAppPoolMemberArrayOutputWithContext(ctx context.Context) FastTcpAppPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppPoolMemberArrayOutput)
}

type FastTcpAppPoolMemberOutput struct{ *pulumi.OutputState }

func (FastTcpAppPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastTcpAppPoolMember)(nil)).Elem()
}

func (o FastTcpAppPoolMemberOutput) ToFastTcpAppPoolMemberOutput() FastTcpAppPoolMemberOutput {
	return o
}

func (o FastTcpAppPoolMemberOutput) ToFastTcpAppPoolMemberOutputWithContext(ctx context.Context) FastTcpAppPoolMemberOutput {
	return o
}

// List of server address to be used for FAST-Generated Pool.
func (o FastTcpAppPoolMemberOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FastTcpAppPoolMember) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// connectionLimit value to be used for FAST-Generated Pool.
func (o FastTcpAppPoolMemberOutput) ConnectionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastTcpAppPoolMember) *int { return v.ConnectionLimit }).(pulumi.IntPtrOutput)
}

// port number of serviceport to be used for FAST-Generated Pool.
func (o FastTcpAppPoolMemberOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastTcpAppPoolMember) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// priorityGroup value to be used for FAST-Generated Pool.
func (o FastTcpAppPoolMemberOutput) PriorityGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastTcpAppPoolMember) *int { return v.PriorityGroup }).(pulumi.IntPtrOutput)
}

// shareNodes value to be used for FAST-Generated Pool.
func (o FastTcpAppPoolMemberOutput) ShareNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FastTcpAppPoolMember) *bool { return v.ShareNodes }).(pulumi.BoolPtrOutput)
}

type FastTcpAppPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (FastTcpAppPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastTcpAppPoolMember)(nil)).Elem()
}

func (o FastTcpAppPoolMemberArrayOutput) ToFastTcpAppPoolMemberArrayOutput() FastTcpAppPoolMemberArrayOutput {
	return o
}

func (o FastTcpAppPoolMemberArrayOutput) ToFastTcpAppPoolMemberArrayOutputWithContext(ctx context.Context) FastTcpAppPoolMemberArrayOutput {
	return o
}

func (o FastTcpAppPoolMemberArrayOutput) Index(i pulumi.IntInput) FastTcpAppPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FastTcpAppPoolMember {
		return vs[0].([]FastTcpAppPoolMember)[vs[1].(int)]
	}).(FastTcpAppPoolMemberOutput)
}

type FastTcpAppVirtualServer struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip string `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port int `pulumi:"port"`
}

// FastTcpAppVirtualServerInput is an input type that accepts FastTcpAppVirtualServerArgs and FastTcpAppVirtualServerOutput values.
// You can construct a concrete instance of `FastTcpAppVirtualServerInput` via:
//
//	FastTcpAppVirtualServerArgs{...}
type FastTcpAppVirtualServerInput interface {
	pulumi.Input

	ToFastTcpAppVirtualServerOutput() FastTcpAppVirtualServerOutput
	ToFastTcpAppVirtualServerOutputWithContext(context.Context) FastTcpAppVirtualServerOutput
}

type FastTcpAppVirtualServerArgs struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip pulumi.StringInput `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port pulumi.IntInput `pulumi:"port"`
}

func (FastTcpAppVirtualServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastTcpAppVirtualServer)(nil)).Elem()
}

func (i FastTcpAppVirtualServerArgs) ToFastTcpAppVirtualServerOutput() FastTcpAppVirtualServerOutput {
	return i.ToFastTcpAppVirtualServerOutputWithContext(context.Background())
}

func (i FastTcpAppVirtualServerArgs) ToFastTcpAppVirtualServerOutputWithContext(ctx context.Context) FastTcpAppVirtualServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppVirtualServerOutput)
}

func (i FastTcpAppVirtualServerArgs) ToFastTcpAppVirtualServerPtrOutput() FastTcpAppVirtualServerPtrOutput {
	return i.ToFastTcpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i FastTcpAppVirtualServerArgs) ToFastTcpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastTcpAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppVirtualServerOutput).ToFastTcpAppVirtualServerPtrOutputWithContext(ctx)
}

// FastTcpAppVirtualServerPtrInput is an input type that accepts FastTcpAppVirtualServerArgs, FastTcpAppVirtualServerPtr and FastTcpAppVirtualServerPtrOutput values.
// You can construct a concrete instance of `FastTcpAppVirtualServerPtrInput` via:
//
//	        FastTcpAppVirtualServerArgs{...}
//
//	or:
//
//	        nil
type FastTcpAppVirtualServerPtrInput interface {
	pulumi.Input

	ToFastTcpAppVirtualServerPtrOutput() FastTcpAppVirtualServerPtrOutput
	ToFastTcpAppVirtualServerPtrOutputWithContext(context.Context) FastTcpAppVirtualServerPtrOutput
}

type fastTcpAppVirtualServerPtrType FastTcpAppVirtualServerArgs

func FastTcpAppVirtualServerPtr(v *FastTcpAppVirtualServerArgs) FastTcpAppVirtualServerPtrInput {
	return (*fastTcpAppVirtualServerPtrType)(v)
}

func (*fastTcpAppVirtualServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastTcpAppVirtualServer)(nil)).Elem()
}

func (i *fastTcpAppVirtualServerPtrType) ToFastTcpAppVirtualServerPtrOutput() FastTcpAppVirtualServerPtrOutput {
	return i.ToFastTcpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i *fastTcpAppVirtualServerPtrType) ToFastTcpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastTcpAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastTcpAppVirtualServerPtrOutput)
}

type FastTcpAppVirtualServerOutput struct{ *pulumi.OutputState }

func (FastTcpAppVirtualServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastTcpAppVirtualServer)(nil)).Elem()
}

func (o FastTcpAppVirtualServerOutput) ToFastTcpAppVirtualServerOutput() FastTcpAppVirtualServerOutput {
	return o
}

func (o FastTcpAppVirtualServerOutput) ToFastTcpAppVirtualServerOutputWithContext(ctx context.Context) FastTcpAppVirtualServerOutput {
	return o
}

func (o FastTcpAppVirtualServerOutput) ToFastTcpAppVirtualServerPtrOutput() FastTcpAppVirtualServerPtrOutput {
	return o.ToFastTcpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (o FastTcpAppVirtualServerOutput) ToFastTcpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastTcpAppVirtualServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastTcpAppVirtualServer) *FastTcpAppVirtualServer {
		return &v
	}).(FastTcpAppVirtualServerPtrOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastTcpAppVirtualServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v FastTcpAppVirtualServer) string { return v.Ip }).(pulumi.StringOutput)
}

// Port number to used for accessing virtual server/application
func (o FastTcpAppVirtualServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FastTcpAppVirtualServer) int { return v.Port }).(pulumi.IntOutput)
}

type FastTcpAppVirtualServerPtrOutput struct{ *pulumi.OutputState }

func (FastTcpAppVirtualServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastTcpAppVirtualServer)(nil)).Elem()
}

func (o FastTcpAppVirtualServerPtrOutput) ToFastTcpAppVirtualServerPtrOutput() FastTcpAppVirtualServerPtrOutput {
	return o
}

func (o FastTcpAppVirtualServerPtrOutput) ToFastTcpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastTcpAppVirtualServerPtrOutput {
	return o
}

func (o FastTcpAppVirtualServerPtrOutput) Elem() FastTcpAppVirtualServerOutput {
	return o.ApplyT(func(v *FastTcpAppVirtualServer) FastTcpAppVirtualServer {
		if v != nil {
			return *v
		}
		var ret FastTcpAppVirtualServer
		return ret
	}).(FastTcpAppVirtualServerOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastTcpAppVirtualServerPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastTcpAppVirtualServer) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

// Port number to used for accessing virtual server/application
func (o FastTcpAppVirtualServerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastTcpAppVirtualServer) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type FastUdpAppMonitor struct {
	// The presence of this optional string is required in the response, if specified it confirms availability.
	ExpectedResponse *string `pulumi:"expectedResponse"`
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval *int `pulumi:"interval"`
	// Optional data to be sent during each health check.
	SendString *string `pulumi:"sendString"`
}

// FastUdpAppMonitorInput is an input type that accepts FastUdpAppMonitorArgs and FastUdpAppMonitorOutput values.
// You can construct a concrete instance of `FastUdpAppMonitorInput` via:
//
//	FastUdpAppMonitorArgs{...}
type FastUdpAppMonitorInput interface {
	pulumi.Input

	ToFastUdpAppMonitorOutput() FastUdpAppMonitorOutput
	ToFastUdpAppMonitorOutputWithContext(context.Context) FastUdpAppMonitorOutput
}

type FastUdpAppMonitorArgs struct {
	// The presence of this optional string is required in the response, if specified it confirms availability.
	ExpectedResponse pulumi.StringPtrInput `pulumi:"expectedResponse"`
	// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
	Interval pulumi.IntPtrInput `pulumi:"interval"`
	// Optional data to be sent during each health check.
	SendString pulumi.StringPtrInput `pulumi:"sendString"`
}

func (FastUdpAppMonitorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastUdpAppMonitor)(nil)).Elem()
}

func (i FastUdpAppMonitorArgs) ToFastUdpAppMonitorOutput() FastUdpAppMonitorOutput {
	return i.ToFastUdpAppMonitorOutputWithContext(context.Background())
}

func (i FastUdpAppMonitorArgs) ToFastUdpAppMonitorOutputWithContext(ctx context.Context) FastUdpAppMonitorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppMonitorOutput)
}

func (i FastUdpAppMonitorArgs) ToFastUdpAppMonitorPtrOutput() FastUdpAppMonitorPtrOutput {
	return i.ToFastUdpAppMonitorPtrOutputWithContext(context.Background())
}

func (i FastUdpAppMonitorArgs) ToFastUdpAppMonitorPtrOutputWithContext(ctx context.Context) FastUdpAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppMonitorOutput).ToFastUdpAppMonitorPtrOutputWithContext(ctx)
}

// FastUdpAppMonitorPtrInput is an input type that accepts FastUdpAppMonitorArgs, FastUdpAppMonitorPtr and FastUdpAppMonitorPtrOutput values.
// You can construct a concrete instance of `FastUdpAppMonitorPtrInput` via:
//
//	        FastUdpAppMonitorArgs{...}
//
//	or:
//
//	        nil
type FastUdpAppMonitorPtrInput interface {
	pulumi.Input

	ToFastUdpAppMonitorPtrOutput() FastUdpAppMonitorPtrOutput
	ToFastUdpAppMonitorPtrOutputWithContext(context.Context) FastUdpAppMonitorPtrOutput
}

type fastUdpAppMonitorPtrType FastUdpAppMonitorArgs

func FastUdpAppMonitorPtr(v *FastUdpAppMonitorArgs) FastUdpAppMonitorPtrInput {
	return (*fastUdpAppMonitorPtrType)(v)
}

func (*fastUdpAppMonitorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastUdpAppMonitor)(nil)).Elem()
}

func (i *fastUdpAppMonitorPtrType) ToFastUdpAppMonitorPtrOutput() FastUdpAppMonitorPtrOutput {
	return i.ToFastUdpAppMonitorPtrOutputWithContext(context.Background())
}

func (i *fastUdpAppMonitorPtrType) ToFastUdpAppMonitorPtrOutputWithContext(ctx context.Context) FastUdpAppMonitorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppMonitorPtrOutput)
}

type FastUdpAppMonitorOutput struct{ *pulumi.OutputState }

func (FastUdpAppMonitorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastUdpAppMonitor)(nil)).Elem()
}

func (o FastUdpAppMonitorOutput) ToFastUdpAppMonitorOutput() FastUdpAppMonitorOutput {
	return o
}

func (o FastUdpAppMonitorOutput) ToFastUdpAppMonitorOutputWithContext(ctx context.Context) FastUdpAppMonitorOutput {
	return o
}

func (o FastUdpAppMonitorOutput) ToFastUdpAppMonitorPtrOutput() FastUdpAppMonitorPtrOutput {
	return o.ToFastUdpAppMonitorPtrOutputWithContext(context.Background())
}

func (o FastUdpAppMonitorOutput) ToFastUdpAppMonitorPtrOutputWithContext(ctx context.Context) FastUdpAppMonitorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastUdpAppMonitor) *FastUdpAppMonitor {
		return &v
	}).(FastUdpAppMonitorPtrOutput)
}

// The presence of this optional string is required in the response, if specified it confirms availability.
func (o FastUdpAppMonitorOutput) ExpectedResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastUdpAppMonitor) *string { return v.ExpectedResponse }).(pulumi.StringPtrOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastUdpAppMonitorOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastUdpAppMonitor) *int { return v.Interval }).(pulumi.IntPtrOutput)
}

// Optional data to be sent during each health check.
func (o FastUdpAppMonitorOutput) SendString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FastUdpAppMonitor) *string { return v.SendString }).(pulumi.StringPtrOutput)
}

type FastUdpAppMonitorPtrOutput struct{ *pulumi.OutputState }

func (FastUdpAppMonitorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastUdpAppMonitor)(nil)).Elem()
}

func (o FastUdpAppMonitorPtrOutput) ToFastUdpAppMonitorPtrOutput() FastUdpAppMonitorPtrOutput {
	return o
}

func (o FastUdpAppMonitorPtrOutput) ToFastUdpAppMonitorPtrOutputWithContext(ctx context.Context) FastUdpAppMonitorPtrOutput {
	return o
}

func (o FastUdpAppMonitorPtrOutput) Elem() FastUdpAppMonitorOutput {
	return o.ApplyT(func(v *FastUdpAppMonitor) FastUdpAppMonitor {
		if v != nil {
			return *v
		}
		var ret FastUdpAppMonitor
		return ret
	}).(FastUdpAppMonitorOutput)
}

// The presence of this optional string is required in the response, if specified it confirms availability.
func (o FastUdpAppMonitorPtrOutput) ExpectedResponse() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastUdpAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.ExpectedResponse
	}).(pulumi.StringPtrOutput)
}

// Set the time between health checks,in seconds for FAST-Generated Pool Monitor.
func (o FastUdpAppMonitorPtrOutput) Interval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastUdpAppMonitor) *int {
		if v == nil {
			return nil
		}
		return v.Interval
	}).(pulumi.IntPtrOutput)
}

// Optional data to be sent during each health check.
func (o FastUdpAppMonitorPtrOutput) SendString() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastUdpAppMonitor) *string {
		if v == nil {
			return nil
		}
		return v.SendString
	}).(pulumi.StringPtrOutput)
}

type FastUdpAppPoolMember struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses []string `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit *int `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port *int `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup *int `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes *bool `pulumi:"shareNodes"`
}

// FastUdpAppPoolMemberInput is an input type that accepts FastUdpAppPoolMemberArgs and FastUdpAppPoolMemberOutput values.
// You can construct a concrete instance of `FastUdpAppPoolMemberInput` via:
//
//	FastUdpAppPoolMemberArgs{...}
type FastUdpAppPoolMemberInput interface {
	pulumi.Input

	ToFastUdpAppPoolMemberOutput() FastUdpAppPoolMemberOutput
	ToFastUdpAppPoolMemberOutputWithContext(context.Context) FastUdpAppPoolMemberOutput
}

type FastUdpAppPoolMemberArgs struct {
	// List of server address to be used for FAST-Generated Pool.
	Addresses pulumi.StringArrayInput `pulumi:"addresses"`
	// connectionLimit value to be used for FAST-Generated Pool.
	ConnectionLimit pulumi.IntPtrInput `pulumi:"connectionLimit"`
	// port number of serviceport to be used for FAST-Generated Pool.
	Port pulumi.IntPtrInput `pulumi:"port"`
	// priorityGroup value to be used for FAST-Generated Pool.
	PriorityGroup pulumi.IntPtrInput `pulumi:"priorityGroup"`
	// shareNodes value to be used for FAST-Generated Pool.
	ShareNodes pulumi.BoolPtrInput `pulumi:"shareNodes"`
}

func (FastUdpAppPoolMemberArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastUdpAppPoolMember)(nil)).Elem()
}

func (i FastUdpAppPoolMemberArgs) ToFastUdpAppPoolMemberOutput() FastUdpAppPoolMemberOutput {
	return i.ToFastUdpAppPoolMemberOutputWithContext(context.Background())
}

func (i FastUdpAppPoolMemberArgs) ToFastUdpAppPoolMemberOutputWithContext(ctx context.Context) FastUdpAppPoolMemberOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppPoolMemberOutput)
}

// FastUdpAppPoolMemberArrayInput is an input type that accepts FastUdpAppPoolMemberArray and FastUdpAppPoolMemberArrayOutput values.
// You can construct a concrete instance of `FastUdpAppPoolMemberArrayInput` via:
//
//	FastUdpAppPoolMemberArray{ FastUdpAppPoolMemberArgs{...} }
type FastUdpAppPoolMemberArrayInput interface {
	pulumi.Input

	ToFastUdpAppPoolMemberArrayOutput() FastUdpAppPoolMemberArrayOutput
	ToFastUdpAppPoolMemberArrayOutputWithContext(context.Context) FastUdpAppPoolMemberArrayOutput
}

type FastUdpAppPoolMemberArray []FastUdpAppPoolMemberInput

func (FastUdpAppPoolMemberArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastUdpAppPoolMember)(nil)).Elem()
}

func (i FastUdpAppPoolMemberArray) ToFastUdpAppPoolMemberArrayOutput() FastUdpAppPoolMemberArrayOutput {
	return i.ToFastUdpAppPoolMemberArrayOutputWithContext(context.Background())
}

func (i FastUdpAppPoolMemberArray) ToFastUdpAppPoolMemberArrayOutputWithContext(ctx context.Context) FastUdpAppPoolMemberArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppPoolMemberArrayOutput)
}

type FastUdpAppPoolMemberOutput struct{ *pulumi.OutputState }

func (FastUdpAppPoolMemberOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastUdpAppPoolMember)(nil)).Elem()
}

func (o FastUdpAppPoolMemberOutput) ToFastUdpAppPoolMemberOutput() FastUdpAppPoolMemberOutput {
	return o
}

func (o FastUdpAppPoolMemberOutput) ToFastUdpAppPoolMemberOutputWithContext(ctx context.Context) FastUdpAppPoolMemberOutput {
	return o
}

// List of server address to be used for FAST-Generated Pool.
func (o FastUdpAppPoolMemberOutput) Addresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FastUdpAppPoolMember) []string { return v.Addresses }).(pulumi.StringArrayOutput)
}

// connectionLimit value to be used for FAST-Generated Pool.
func (o FastUdpAppPoolMemberOutput) ConnectionLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastUdpAppPoolMember) *int { return v.ConnectionLimit }).(pulumi.IntPtrOutput)
}

// port number of serviceport to be used for FAST-Generated Pool.
func (o FastUdpAppPoolMemberOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastUdpAppPoolMember) *int { return v.Port }).(pulumi.IntPtrOutput)
}

// priorityGroup value to be used for FAST-Generated Pool.
func (o FastUdpAppPoolMemberOutput) PriorityGroup() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FastUdpAppPoolMember) *int { return v.PriorityGroup }).(pulumi.IntPtrOutput)
}

// shareNodes value to be used for FAST-Generated Pool.
func (o FastUdpAppPoolMemberOutput) ShareNodes() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FastUdpAppPoolMember) *bool { return v.ShareNodes }).(pulumi.BoolPtrOutput)
}

type FastUdpAppPoolMemberArrayOutput struct{ *pulumi.OutputState }

func (FastUdpAppPoolMemberArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FastUdpAppPoolMember)(nil)).Elem()
}

func (o FastUdpAppPoolMemberArrayOutput) ToFastUdpAppPoolMemberArrayOutput() FastUdpAppPoolMemberArrayOutput {
	return o
}

func (o FastUdpAppPoolMemberArrayOutput) ToFastUdpAppPoolMemberArrayOutputWithContext(ctx context.Context) FastUdpAppPoolMemberArrayOutput {
	return o
}

func (o FastUdpAppPoolMemberArrayOutput) Index(i pulumi.IntInput) FastUdpAppPoolMemberOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FastUdpAppPoolMember {
		return vs[0].([]FastUdpAppPoolMember)[vs[1].(int)]
	}).(FastUdpAppPoolMemberOutput)
}

type FastUdpAppVirtualServer struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip string `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port int `pulumi:"port"`
}

// FastUdpAppVirtualServerInput is an input type that accepts FastUdpAppVirtualServerArgs and FastUdpAppVirtualServerOutput values.
// You can construct a concrete instance of `FastUdpAppVirtualServerInput` via:
//
//	FastUdpAppVirtualServerArgs{...}
type FastUdpAppVirtualServerInput interface {
	pulumi.Input

	ToFastUdpAppVirtualServerOutput() FastUdpAppVirtualServerOutput
	ToFastUdpAppVirtualServerOutputWithContext(context.Context) FastUdpAppVirtualServerOutput
}

type FastUdpAppVirtualServerArgs struct {
	// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
	Ip pulumi.StringInput `pulumi:"ip"`
	// Port number to used for accessing virtual server/application
	Port pulumi.IntInput `pulumi:"port"`
}

func (FastUdpAppVirtualServerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FastUdpAppVirtualServer)(nil)).Elem()
}

func (i FastUdpAppVirtualServerArgs) ToFastUdpAppVirtualServerOutput() FastUdpAppVirtualServerOutput {
	return i.ToFastUdpAppVirtualServerOutputWithContext(context.Background())
}

func (i FastUdpAppVirtualServerArgs) ToFastUdpAppVirtualServerOutputWithContext(ctx context.Context) FastUdpAppVirtualServerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppVirtualServerOutput)
}

func (i FastUdpAppVirtualServerArgs) ToFastUdpAppVirtualServerPtrOutput() FastUdpAppVirtualServerPtrOutput {
	return i.ToFastUdpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i FastUdpAppVirtualServerArgs) ToFastUdpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastUdpAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppVirtualServerOutput).ToFastUdpAppVirtualServerPtrOutputWithContext(ctx)
}

// FastUdpAppVirtualServerPtrInput is an input type that accepts FastUdpAppVirtualServerArgs, FastUdpAppVirtualServerPtr and FastUdpAppVirtualServerPtrOutput values.
// You can construct a concrete instance of `FastUdpAppVirtualServerPtrInput` via:
//
//	        FastUdpAppVirtualServerArgs{...}
//
//	or:
//
//	        nil
type FastUdpAppVirtualServerPtrInput interface {
	pulumi.Input

	ToFastUdpAppVirtualServerPtrOutput() FastUdpAppVirtualServerPtrOutput
	ToFastUdpAppVirtualServerPtrOutputWithContext(context.Context) FastUdpAppVirtualServerPtrOutput
}

type fastUdpAppVirtualServerPtrType FastUdpAppVirtualServerArgs

func FastUdpAppVirtualServerPtr(v *FastUdpAppVirtualServerArgs) FastUdpAppVirtualServerPtrInput {
	return (*fastUdpAppVirtualServerPtrType)(v)
}

func (*fastUdpAppVirtualServerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**FastUdpAppVirtualServer)(nil)).Elem()
}

func (i *fastUdpAppVirtualServerPtrType) ToFastUdpAppVirtualServerPtrOutput() FastUdpAppVirtualServerPtrOutput {
	return i.ToFastUdpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (i *fastUdpAppVirtualServerPtrType) ToFastUdpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastUdpAppVirtualServerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FastUdpAppVirtualServerPtrOutput)
}

type FastUdpAppVirtualServerOutput struct{ *pulumi.OutputState }

func (FastUdpAppVirtualServerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FastUdpAppVirtualServer)(nil)).Elem()
}

func (o FastUdpAppVirtualServerOutput) ToFastUdpAppVirtualServerOutput() FastUdpAppVirtualServerOutput {
	return o
}

func (o FastUdpAppVirtualServerOutput) ToFastUdpAppVirtualServerOutputWithContext(ctx context.Context) FastUdpAppVirtualServerOutput {
	return o
}

func (o FastUdpAppVirtualServerOutput) ToFastUdpAppVirtualServerPtrOutput() FastUdpAppVirtualServerPtrOutput {
	return o.ToFastUdpAppVirtualServerPtrOutputWithContext(context.Background())
}

func (o FastUdpAppVirtualServerOutput) ToFastUdpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastUdpAppVirtualServerPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v FastUdpAppVirtualServer) *FastUdpAppVirtualServer {
		return &v
	}).(FastUdpAppVirtualServerPtrOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastUdpAppVirtualServerOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v FastUdpAppVirtualServer) string { return v.Ip }).(pulumi.StringOutput)
}

// Port number to used for accessing virtual server/application
func (o FastUdpAppVirtualServerOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v FastUdpAppVirtualServer) int { return v.Port }).(pulumi.IntOutput)
}

type FastUdpAppVirtualServerPtrOutput struct{ *pulumi.OutputState }

func (FastUdpAppVirtualServerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**FastUdpAppVirtualServer)(nil)).Elem()
}

func (o FastUdpAppVirtualServerPtrOutput) ToFastUdpAppVirtualServerPtrOutput() FastUdpAppVirtualServerPtrOutput {
	return o
}

func (o FastUdpAppVirtualServerPtrOutput) ToFastUdpAppVirtualServerPtrOutputWithContext(ctx context.Context) FastUdpAppVirtualServerPtrOutput {
	return o
}

func (o FastUdpAppVirtualServerPtrOutput) Elem() FastUdpAppVirtualServerOutput {
	return o.ApplyT(func(v *FastUdpAppVirtualServer) FastUdpAppVirtualServer {
		if v != nil {
			return *v
		}
		var ret FastUdpAppVirtualServer
		return ret
	}).(FastUdpAppVirtualServerOutput)
}

// IP4/IPv6 address to be used for virtual server ex: `10.1.1.1`
func (o FastUdpAppVirtualServerPtrOutput) Ip() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *FastUdpAppVirtualServer) *string {
		if v == nil {
			return nil
		}
		return &v.Ip
	}).(pulumi.StringPtrOutput)
}

// Port number to used for accessing virtual server/application
func (o FastUdpAppVirtualServerPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *FastUdpAppVirtualServer) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

type WafPolicyFileType struct {
	// Determines whether the file type is allowed or disallowed. In either of these cases the VIOL_FILETYPE violation is issued (if enabled) for an incoming request-
	// * No allowed file type matched the file type of the request.
	// * The file type of the request matched a disallowed file type.
	Allowed *bool `pulumi:"allowed"`
	// Specifies the file type name as appearing in the URL extension.
	Name *string `pulumi:"name"`
	// Determines the type of the name attribute. Only when setting the type to `wildcard` will the special wildcard characters in the name be interpreted as such
	Type *string `pulumi:"type"`
}

// WafPolicyFileTypeInput is an input type that accepts WafPolicyFileTypeArgs and WafPolicyFileTypeOutput values.
// You can construct a concrete instance of `WafPolicyFileTypeInput` via:
//
//	WafPolicyFileTypeArgs{...}
type WafPolicyFileTypeInput interface {
	pulumi.Input

	ToWafPolicyFileTypeOutput() WafPolicyFileTypeOutput
	ToWafPolicyFileTypeOutputWithContext(context.Context) WafPolicyFileTypeOutput
}

type WafPolicyFileTypeArgs struct {
	// Determines whether the file type is allowed or disallowed. In either of these cases the VIOL_FILETYPE violation is issued (if enabled) for an incoming request-
	// * No allowed file type matched the file type of the request.
	// * The file type of the request matched a disallowed file type.
	Allowed pulumi.BoolPtrInput `pulumi:"allowed"`
	// Specifies the file type name as appearing in the URL extension.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Determines the type of the name attribute. Only when setting the type to `wildcard` will the special wildcard characters in the name be interpreted as such
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (WafPolicyFileTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyFileType)(nil)).Elem()
}

func (i WafPolicyFileTypeArgs) ToWafPolicyFileTypeOutput() WafPolicyFileTypeOutput {
	return i.ToWafPolicyFileTypeOutputWithContext(context.Background())
}

func (i WafPolicyFileTypeArgs) ToWafPolicyFileTypeOutputWithContext(ctx context.Context) WafPolicyFileTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyFileTypeOutput)
}

// WafPolicyFileTypeArrayInput is an input type that accepts WafPolicyFileTypeArray and WafPolicyFileTypeArrayOutput values.
// You can construct a concrete instance of `WafPolicyFileTypeArrayInput` via:
//
//	WafPolicyFileTypeArray{ WafPolicyFileTypeArgs{...} }
type WafPolicyFileTypeArrayInput interface {
	pulumi.Input

	ToWafPolicyFileTypeArrayOutput() WafPolicyFileTypeArrayOutput
	ToWafPolicyFileTypeArrayOutputWithContext(context.Context) WafPolicyFileTypeArrayOutput
}

type WafPolicyFileTypeArray []WafPolicyFileTypeInput

func (WafPolicyFileTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyFileType)(nil)).Elem()
}

func (i WafPolicyFileTypeArray) ToWafPolicyFileTypeArrayOutput() WafPolicyFileTypeArrayOutput {
	return i.ToWafPolicyFileTypeArrayOutputWithContext(context.Background())
}

func (i WafPolicyFileTypeArray) ToWafPolicyFileTypeArrayOutputWithContext(ctx context.Context) WafPolicyFileTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyFileTypeArrayOutput)
}

type WafPolicyFileTypeOutput struct{ *pulumi.OutputState }

func (WafPolicyFileTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyFileType)(nil)).Elem()
}

func (o WafPolicyFileTypeOutput) ToWafPolicyFileTypeOutput() WafPolicyFileTypeOutput {
	return o
}

func (o WafPolicyFileTypeOutput) ToWafPolicyFileTypeOutputWithContext(ctx context.Context) WafPolicyFileTypeOutput {
	return o
}

// Determines whether the file type is allowed or disallowed. In either of these cases the VIOL_FILETYPE violation is issued (if enabled) for an incoming request-
// * No allowed file type matched the file type of the request.
// * The file type of the request matched a disallowed file type.
func (o WafPolicyFileTypeOutput) Allowed() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyFileType) *bool { return v.Allowed }).(pulumi.BoolPtrOutput)
}

// Specifies the file type name as appearing in the URL extension.
func (o WafPolicyFileTypeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyFileType) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Determines the type of the name attribute. Only when setting the type to `wildcard` will the special wildcard characters in the name be interpreted as such
func (o WafPolicyFileTypeOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyFileType) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type WafPolicyFileTypeArrayOutput struct{ *pulumi.OutputState }

func (WafPolicyFileTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyFileType)(nil)).Elem()
}

func (o WafPolicyFileTypeArrayOutput) ToWafPolicyFileTypeArrayOutput() WafPolicyFileTypeArrayOutput {
	return o
}

func (o WafPolicyFileTypeArrayOutput) ToWafPolicyFileTypeArrayOutputWithContext(ctx context.Context) WafPolicyFileTypeArrayOutput {
	return o
}

func (o WafPolicyFileTypeArrayOutput) Index(i pulumi.IntInput) WafPolicyFileTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicyFileType {
		return vs[0].([]WafPolicyFileType)[vs[1].(int)]
	}).(WafPolicyFileTypeOutput)
}

type WafPolicyGraphqlProfile struct {
	// Specifies when checked (enabled) that you want attack signatures and threat campaigns to be detected on this GraphQL profile and possibly override the security policy settings of an attack signature or threat campaign specifically for this GraphQL profile. After you enable this setting, the system displays a list of attack signatures and and threat campaigns. The default is enabled
	AttackSignaturesCheck *bool `pulumi:"attackSignaturesCheck"`
	// defense_attributes settings for policy
	DefenseAttributes []WafPolicyGraphqlProfileDefenseAttribute `pulumi:"defenseAttributes"`
	// Specifies when checked (enabled) that the system enforces the security policy settings of a meta character for the GraphQL profile. After you enable this setting, the system displays a list of meta characters. The default is enabled
	MetacharElementcheck *bool `pulumi:"metacharElementcheck"`
	// The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
	Name string `pulumi:"name"`
}

// WafPolicyGraphqlProfileInput is an input type that accepts WafPolicyGraphqlProfileArgs and WafPolicyGraphqlProfileOutput values.
// You can construct a concrete instance of `WafPolicyGraphqlProfileInput` via:
//
//	WafPolicyGraphqlProfileArgs{...}
type WafPolicyGraphqlProfileInput interface {
	pulumi.Input

	ToWafPolicyGraphqlProfileOutput() WafPolicyGraphqlProfileOutput
	ToWafPolicyGraphqlProfileOutputWithContext(context.Context) WafPolicyGraphqlProfileOutput
}

type WafPolicyGraphqlProfileArgs struct {
	// Specifies when checked (enabled) that you want attack signatures and threat campaigns to be detected on this GraphQL profile and possibly override the security policy settings of an attack signature or threat campaign specifically for this GraphQL profile. After you enable this setting, the system displays a list of attack signatures and and threat campaigns. The default is enabled
	AttackSignaturesCheck pulumi.BoolPtrInput `pulumi:"attackSignaturesCheck"`
	// defense_attributes settings for policy
	DefenseAttributes WafPolicyGraphqlProfileDefenseAttributeArrayInput `pulumi:"defenseAttributes"`
	// Specifies when checked (enabled) that the system enforces the security policy settings of a meta character for the GraphQL profile. After you enable this setting, the system displays a list of meta characters. The default is enabled
	MetacharElementcheck pulumi.BoolPtrInput `pulumi:"metacharElementcheck"`
	// The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
	Name pulumi.StringInput `pulumi:"name"`
}

func (WafPolicyGraphqlProfileArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyGraphqlProfile)(nil)).Elem()
}

func (i WafPolicyGraphqlProfileArgs) ToWafPolicyGraphqlProfileOutput() WafPolicyGraphqlProfileOutput {
	return i.ToWafPolicyGraphqlProfileOutputWithContext(context.Background())
}

func (i WafPolicyGraphqlProfileArgs) ToWafPolicyGraphqlProfileOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyGraphqlProfileOutput)
}

// WafPolicyGraphqlProfileArrayInput is an input type that accepts WafPolicyGraphqlProfileArray and WafPolicyGraphqlProfileArrayOutput values.
// You can construct a concrete instance of `WafPolicyGraphqlProfileArrayInput` via:
//
//	WafPolicyGraphqlProfileArray{ WafPolicyGraphqlProfileArgs{...} }
type WafPolicyGraphqlProfileArrayInput interface {
	pulumi.Input

	ToWafPolicyGraphqlProfileArrayOutput() WafPolicyGraphqlProfileArrayOutput
	ToWafPolicyGraphqlProfileArrayOutputWithContext(context.Context) WafPolicyGraphqlProfileArrayOutput
}

type WafPolicyGraphqlProfileArray []WafPolicyGraphqlProfileInput

func (WafPolicyGraphqlProfileArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyGraphqlProfile)(nil)).Elem()
}

func (i WafPolicyGraphqlProfileArray) ToWafPolicyGraphqlProfileArrayOutput() WafPolicyGraphqlProfileArrayOutput {
	return i.ToWafPolicyGraphqlProfileArrayOutputWithContext(context.Background())
}

func (i WafPolicyGraphqlProfileArray) ToWafPolicyGraphqlProfileArrayOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyGraphqlProfileArrayOutput)
}

type WafPolicyGraphqlProfileOutput struct{ *pulumi.OutputState }

func (WafPolicyGraphqlProfileOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyGraphqlProfile)(nil)).Elem()
}

func (o WafPolicyGraphqlProfileOutput) ToWafPolicyGraphqlProfileOutput() WafPolicyGraphqlProfileOutput {
	return o
}

func (o WafPolicyGraphqlProfileOutput) ToWafPolicyGraphqlProfileOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileOutput {
	return o
}

// Specifies when checked (enabled) that you want attack signatures and threat campaigns to be detected on this GraphQL profile and possibly override the security policy settings of an attack signature or threat campaign specifically for this GraphQL profile. After you enable this setting, the system displays a list of attack signatures and and threat campaigns. The default is enabled
func (o WafPolicyGraphqlProfileOutput) AttackSignaturesCheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfile) *bool { return v.AttackSignaturesCheck }).(pulumi.BoolPtrOutput)
}

// defense_attributes settings for policy
func (o WafPolicyGraphqlProfileOutput) DefenseAttributes() WafPolicyGraphqlProfileDefenseAttributeArrayOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfile) []WafPolicyGraphqlProfileDefenseAttribute { return v.DefenseAttributes }).(WafPolicyGraphqlProfileDefenseAttributeArrayOutput)
}

// Specifies when checked (enabled) that the system enforces the security policy settings of a meta character for the GraphQL profile. After you enable this setting, the system displays a list of meta characters. The default is enabled
func (o WafPolicyGraphqlProfileOutput) MetacharElementcheck() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfile) *bool { return v.MetacharElementcheck }).(pulumi.BoolPtrOutput)
}

// The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
func (o WafPolicyGraphqlProfileOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfile) string { return v.Name }).(pulumi.StringOutput)
}

type WafPolicyGraphqlProfileArrayOutput struct{ *pulumi.OutputState }

func (WafPolicyGraphqlProfileArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyGraphqlProfile)(nil)).Elem()
}

func (o WafPolicyGraphqlProfileArrayOutput) ToWafPolicyGraphqlProfileArrayOutput() WafPolicyGraphqlProfileArrayOutput {
	return o
}

func (o WafPolicyGraphqlProfileArrayOutput) ToWafPolicyGraphqlProfileArrayOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileArrayOutput {
	return o
}

func (o WafPolicyGraphqlProfileArrayOutput) Index(i pulumi.IntInput) WafPolicyGraphqlProfileOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicyGraphqlProfile {
		return vs[0].([]WafPolicyGraphqlProfile)[vs[1].(int)]
	}).(WafPolicyGraphqlProfileOutput)
}

type WafPolicyGraphqlProfileDefenseAttribute struct {
	// Introspection queries can also be enforced to prevent attackers from using them to
	// understand the API structure and potentially breach an application.
	AllowIntrospectionQueries *bool `pulumi:"allowIntrospectionQueries"`
	// Specifies the highest number of batched queries allowed by the security policy.
	MaximumBatchedQueries *string `pulumi:"maximumBatchedQueries"`
	// Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
	MaximumStructureDepth *string `pulumi:"maximumStructureDepth"`
	// Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
	MaximumTotalLength *string `pulumi:"maximumTotalLength"`
	// Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
	MaximumValueLength *string `pulumi:"maximumValueLength"`
	// Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
	TolerateParsingWarnings *bool `pulumi:"tolerateParsingWarnings"`
}

// WafPolicyGraphqlProfileDefenseAttributeInput is an input type that accepts WafPolicyGraphqlProfileDefenseAttributeArgs and WafPolicyGraphqlProfileDefenseAttributeOutput values.
// You can construct a concrete instance of `WafPolicyGraphqlProfileDefenseAttributeInput` via:
//
//	WafPolicyGraphqlProfileDefenseAttributeArgs{...}
type WafPolicyGraphqlProfileDefenseAttributeInput interface {
	pulumi.Input

	ToWafPolicyGraphqlProfileDefenseAttributeOutput() WafPolicyGraphqlProfileDefenseAttributeOutput
	ToWafPolicyGraphqlProfileDefenseAttributeOutputWithContext(context.Context) WafPolicyGraphqlProfileDefenseAttributeOutput
}

type WafPolicyGraphqlProfileDefenseAttributeArgs struct {
	// Introspection queries can also be enforced to prevent attackers from using them to
	// understand the API structure and potentially breach an application.
	AllowIntrospectionQueries pulumi.BoolPtrInput `pulumi:"allowIntrospectionQueries"`
	// Specifies the highest number of batched queries allowed by the security policy.
	MaximumBatchedQueries pulumi.StringPtrInput `pulumi:"maximumBatchedQueries"`
	// Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
	MaximumStructureDepth pulumi.StringPtrInput `pulumi:"maximumStructureDepth"`
	// Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
	MaximumTotalLength pulumi.StringPtrInput `pulumi:"maximumTotalLength"`
	// Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
	MaximumValueLength pulumi.StringPtrInput `pulumi:"maximumValueLength"`
	// Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
	TolerateParsingWarnings pulumi.BoolPtrInput `pulumi:"tolerateParsingWarnings"`
}

func (WafPolicyGraphqlProfileDefenseAttributeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyGraphqlProfileDefenseAttribute)(nil)).Elem()
}

func (i WafPolicyGraphqlProfileDefenseAttributeArgs) ToWafPolicyGraphqlProfileDefenseAttributeOutput() WafPolicyGraphqlProfileDefenseAttributeOutput {
	return i.ToWafPolicyGraphqlProfileDefenseAttributeOutputWithContext(context.Background())
}

func (i WafPolicyGraphqlProfileDefenseAttributeArgs) ToWafPolicyGraphqlProfileDefenseAttributeOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileDefenseAttributeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyGraphqlProfileDefenseAttributeOutput)
}

// WafPolicyGraphqlProfileDefenseAttributeArrayInput is an input type that accepts WafPolicyGraphqlProfileDefenseAttributeArray and WafPolicyGraphqlProfileDefenseAttributeArrayOutput values.
// You can construct a concrete instance of `WafPolicyGraphqlProfileDefenseAttributeArrayInput` via:
//
//	WafPolicyGraphqlProfileDefenseAttributeArray{ WafPolicyGraphqlProfileDefenseAttributeArgs{...} }
type WafPolicyGraphqlProfileDefenseAttributeArrayInput interface {
	pulumi.Input

	ToWafPolicyGraphqlProfileDefenseAttributeArrayOutput() WafPolicyGraphqlProfileDefenseAttributeArrayOutput
	ToWafPolicyGraphqlProfileDefenseAttributeArrayOutputWithContext(context.Context) WafPolicyGraphqlProfileDefenseAttributeArrayOutput
}

type WafPolicyGraphqlProfileDefenseAttributeArray []WafPolicyGraphqlProfileDefenseAttributeInput

func (WafPolicyGraphqlProfileDefenseAttributeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyGraphqlProfileDefenseAttribute)(nil)).Elem()
}

func (i WafPolicyGraphqlProfileDefenseAttributeArray) ToWafPolicyGraphqlProfileDefenseAttributeArrayOutput() WafPolicyGraphqlProfileDefenseAttributeArrayOutput {
	return i.ToWafPolicyGraphqlProfileDefenseAttributeArrayOutputWithContext(context.Background())
}

func (i WafPolicyGraphqlProfileDefenseAttributeArray) ToWafPolicyGraphqlProfileDefenseAttributeArrayOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileDefenseAttributeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyGraphqlProfileDefenseAttributeArrayOutput)
}

type WafPolicyGraphqlProfileDefenseAttributeOutput struct{ *pulumi.OutputState }

func (WafPolicyGraphqlProfileDefenseAttributeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyGraphqlProfileDefenseAttribute)(nil)).Elem()
}

func (o WafPolicyGraphqlProfileDefenseAttributeOutput) ToWafPolicyGraphqlProfileDefenseAttributeOutput() WafPolicyGraphqlProfileDefenseAttributeOutput {
	return o
}

func (o WafPolicyGraphqlProfileDefenseAttributeOutput) ToWafPolicyGraphqlProfileDefenseAttributeOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileDefenseAttributeOutput {
	return o
}

// Introspection queries can also be enforced to prevent attackers from using them to
// understand the API structure and potentially breach an application.
func (o WafPolicyGraphqlProfileDefenseAttributeOutput) AllowIntrospectionQueries() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfileDefenseAttribute) *bool { return v.AllowIntrospectionQueries }).(pulumi.BoolPtrOutput)
}

// Specifies the highest number of batched queries allowed by the security policy.
func (o WafPolicyGraphqlProfileDefenseAttributeOutput) MaximumBatchedQueries() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfileDefenseAttribute) *string { return v.MaximumBatchedQueries }).(pulumi.StringPtrOutput)
}

// Specifies the greatest nesting depth found in the GraphQL structure allowed by the security policy.
func (o WafPolicyGraphqlProfileDefenseAttributeOutput) MaximumStructureDepth() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfileDefenseAttribute) *string { return v.MaximumStructureDepth }).(pulumi.StringPtrOutput)
}

// Specifies the longest length, in bytes, allowed by the security policy of the request payload, or parameter value, where the GraphQL data was found.
func (o WafPolicyGraphqlProfileDefenseAttributeOutput) MaximumTotalLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfileDefenseAttribute) *string { return v.MaximumTotalLength }).(pulumi.StringPtrOutput)
}

// Specifies the longest length (in bytes) of the longest GraphQL element value in the document allowed by the security policy.
func (o WafPolicyGraphqlProfileDefenseAttributeOutput) MaximumValueLength() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfileDefenseAttribute) *string { return v.MaximumValueLength }).(pulumi.StringPtrOutput)
}

// Specifies, when checked (enabled), that the system does not report when the security enforcer encounters warnings while parsing GraphQL content. Specifies when cleared (disabled), that the security policy reports when the security enforcer encounters warnings while parsing GraphQL content. The default setting is disabled.
func (o WafPolicyGraphqlProfileDefenseAttributeOutput) TolerateParsingWarnings() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyGraphqlProfileDefenseAttribute) *bool { return v.TolerateParsingWarnings }).(pulumi.BoolPtrOutput)
}

type WafPolicyGraphqlProfileDefenseAttributeArrayOutput struct{ *pulumi.OutputState }

func (WafPolicyGraphqlProfileDefenseAttributeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyGraphqlProfileDefenseAttribute)(nil)).Elem()
}

func (o WafPolicyGraphqlProfileDefenseAttributeArrayOutput) ToWafPolicyGraphqlProfileDefenseAttributeArrayOutput() WafPolicyGraphqlProfileDefenseAttributeArrayOutput {
	return o
}

func (o WafPolicyGraphqlProfileDefenseAttributeArrayOutput) ToWafPolicyGraphqlProfileDefenseAttributeArrayOutputWithContext(ctx context.Context) WafPolicyGraphqlProfileDefenseAttributeArrayOutput {
	return o
}

func (o WafPolicyGraphqlProfileDefenseAttributeArrayOutput) Index(i pulumi.IntInput) WafPolicyGraphqlProfileDefenseAttributeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicyGraphqlProfileDefenseAttribute {
		return vs[0].([]WafPolicyGraphqlProfileDefenseAttribute)[vs[1].(int)]
	}).(WafPolicyGraphqlProfileDefenseAttributeOutput)
}

type WafPolicyHostName struct {
	// The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
	Name *string `pulumi:"name"`
}

// WafPolicyHostNameInput is an input type that accepts WafPolicyHostNameArgs and WafPolicyHostNameOutput values.
// You can construct a concrete instance of `WafPolicyHostNameInput` via:
//
//	WafPolicyHostNameArgs{...}
type WafPolicyHostNameInput interface {
	pulumi.Input

	ToWafPolicyHostNameOutput() WafPolicyHostNameOutput
	ToWafPolicyHostNameOutputWithContext(context.Context) WafPolicyHostNameOutput
}

type WafPolicyHostNameArgs struct {
	// The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (WafPolicyHostNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyHostName)(nil)).Elem()
}

func (i WafPolicyHostNameArgs) ToWafPolicyHostNameOutput() WafPolicyHostNameOutput {
	return i.ToWafPolicyHostNameOutputWithContext(context.Background())
}

func (i WafPolicyHostNameArgs) ToWafPolicyHostNameOutputWithContext(ctx context.Context) WafPolicyHostNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyHostNameOutput)
}

// WafPolicyHostNameArrayInput is an input type that accepts WafPolicyHostNameArray and WafPolicyHostNameArrayOutput values.
// You can construct a concrete instance of `WafPolicyHostNameArrayInput` via:
//
//	WafPolicyHostNameArray{ WafPolicyHostNameArgs{...} }
type WafPolicyHostNameArrayInput interface {
	pulumi.Input

	ToWafPolicyHostNameArrayOutput() WafPolicyHostNameArrayOutput
	ToWafPolicyHostNameArrayOutputWithContext(context.Context) WafPolicyHostNameArrayOutput
}

type WafPolicyHostNameArray []WafPolicyHostNameInput

func (WafPolicyHostNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyHostName)(nil)).Elem()
}

func (i WafPolicyHostNameArray) ToWafPolicyHostNameArrayOutput() WafPolicyHostNameArrayOutput {
	return i.ToWafPolicyHostNameArrayOutputWithContext(context.Background())
}

func (i WafPolicyHostNameArray) ToWafPolicyHostNameArrayOutputWithContext(ctx context.Context) WafPolicyHostNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyHostNameArrayOutput)
}

type WafPolicyHostNameOutput struct{ *pulumi.OutputState }

func (WafPolicyHostNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyHostName)(nil)).Elem()
}

func (o WafPolicyHostNameOutput) ToWafPolicyHostNameOutput() WafPolicyHostNameOutput {
	return o
}

func (o WafPolicyHostNameOutput) ToWafPolicyHostNameOutputWithContext(ctx context.Context) WafPolicyHostNameOutput {
	return o
}

// The unique user-given name of the policy. Policy names cannot contain spaces or special characters. Allowed characters are a-z, A-Z, 0-9, dot, dash (-), colon (:) and underscore (_).
func (o WafPolicyHostNameOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyHostName) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type WafPolicyHostNameArrayOutput struct{ *pulumi.OutputState }

func (WafPolicyHostNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyHostName)(nil)).Elem()
}

func (o WafPolicyHostNameArrayOutput) ToWafPolicyHostNameArrayOutput() WafPolicyHostNameArrayOutput {
	return o
}

func (o WafPolicyHostNameArrayOutput) ToWafPolicyHostNameArrayOutputWithContext(ctx context.Context) WafPolicyHostNameArrayOutput {
	return o
}

func (o WafPolicyHostNameArrayOutput) Index(i pulumi.IntInput) WafPolicyHostNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicyHostName {
		return vs[0].([]WafPolicyHostName)[vs[1].(int)]
	}).(WafPolicyHostNameOutput)
}

type WafPolicyIpException struct {
	// Specifies how the system responds to blocking requests sent from this IP address. Possible options [`always`, `never`, `policy-default`].
	BlockRequests *string `pulumi:"blockRequests"`
	// Specifies the description of the policy.
	Description *string `pulumi:"description"`
	// Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.
	IgnoreAnomalies *bool `pulumi:"ignoreAnomalies"`
	// Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).
	IgnoreIpreputation *bool `pulumi:"ignoreIpreputation"`
	// Specifies the IP address that you want the system to trust.
	IpAddress string `pulumi:"ipAddress"`
	// Specifies the netmask of the exceptional IP address. This is an optional field.
	IpMask string `pulumi:"ipMask"`
	// Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.
	TrustedbyPolicybuilder *bool `pulumi:"trustedbyPolicybuilder"`
}

// WafPolicyIpExceptionInput is an input type that accepts WafPolicyIpExceptionArgs and WafPolicyIpExceptionOutput values.
// You can construct a concrete instance of `WafPolicyIpExceptionInput` via:
//
//	WafPolicyIpExceptionArgs{...}
type WafPolicyIpExceptionInput interface {
	pulumi.Input

	ToWafPolicyIpExceptionOutput() WafPolicyIpExceptionOutput
	ToWafPolicyIpExceptionOutputWithContext(context.Context) WafPolicyIpExceptionOutput
}

type WafPolicyIpExceptionArgs struct {
	// Specifies how the system responds to blocking requests sent from this IP address. Possible options [`always`, `never`, `policy-default`].
	BlockRequests pulumi.StringPtrInput `pulumi:"blockRequests"`
	// Specifies the description of the policy.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.
	IgnoreAnomalies pulumi.BoolPtrInput `pulumi:"ignoreAnomalies"`
	// Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).
	IgnoreIpreputation pulumi.BoolPtrInput `pulumi:"ignoreIpreputation"`
	// Specifies the IP address that you want the system to trust.
	IpAddress pulumi.StringInput `pulumi:"ipAddress"`
	// Specifies the netmask of the exceptional IP address. This is an optional field.
	IpMask pulumi.StringInput `pulumi:"ipMask"`
	// Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.
	TrustedbyPolicybuilder pulumi.BoolPtrInput `pulumi:"trustedbyPolicybuilder"`
}

func (WafPolicyIpExceptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyIpException)(nil)).Elem()
}

func (i WafPolicyIpExceptionArgs) ToWafPolicyIpExceptionOutput() WafPolicyIpExceptionOutput {
	return i.ToWafPolicyIpExceptionOutputWithContext(context.Background())
}

func (i WafPolicyIpExceptionArgs) ToWafPolicyIpExceptionOutputWithContext(ctx context.Context) WafPolicyIpExceptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyIpExceptionOutput)
}

// WafPolicyIpExceptionArrayInput is an input type that accepts WafPolicyIpExceptionArray and WafPolicyIpExceptionArrayOutput values.
// You can construct a concrete instance of `WafPolicyIpExceptionArrayInput` via:
//
//	WafPolicyIpExceptionArray{ WafPolicyIpExceptionArgs{...} }
type WafPolicyIpExceptionArrayInput interface {
	pulumi.Input

	ToWafPolicyIpExceptionArrayOutput() WafPolicyIpExceptionArrayOutput
	ToWafPolicyIpExceptionArrayOutputWithContext(context.Context) WafPolicyIpExceptionArrayOutput
}

type WafPolicyIpExceptionArray []WafPolicyIpExceptionInput

func (WafPolicyIpExceptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyIpException)(nil)).Elem()
}

func (i WafPolicyIpExceptionArray) ToWafPolicyIpExceptionArrayOutput() WafPolicyIpExceptionArrayOutput {
	return i.ToWafPolicyIpExceptionArrayOutputWithContext(context.Background())
}

func (i WafPolicyIpExceptionArray) ToWafPolicyIpExceptionArrayOutputWithContext(ctx context.Context) WafPolicyIpExceptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyIpExceptionArrayOutput)
}

type WafPolicyIpExceptionOutput struct{ *pulumi.OutputState }

func (WafPolicyIpExceptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyIpException)(nil)).Elem()
}

func (o WafPolicyIpExceptionOutput) ToWafPolicyIpExceptionOutput() WafPolicyIpExceptionOutput {
	return o
}

func (o WafPolicyIpExceptionOutput) ToWafPolicyIpExceptionOutputWithContext(ctx context.Context) WafPolicyIpExceptionOutput {
	return o
}

// Specifies how the system responds to blocking requests sent from this IP address. Possible options [`always`, `never`, `policy-default`].
func (o WafPolicyIpExceptionOutput) BlockRequests() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyIpException) *string { return v.BlockRequests }).(pulumi.StringPtrOutput)
}

// Specifies the description of the policy.
func (o WafPolicyIpExceptionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyIpException) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Specifies when enabled that the system considers this IP address legitimate and does not take it into account when performing brute force prevention.
func (o WafPolicyIpExceptionOutput) IgnoreAnomalies() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyIpException) *bool { return v.IgnoreAnomalies }).(pulumi.BoolPtrOutput)
}

// Specifies when enabled that the system considers this IP address legitimate even if it is found in the IP Intelligence database (a database of questionable IP addresses).
func (o WafPolicyIpExceptionOutput) IgnoreIpreputation() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyIpException) *bool { return v.IgnoreIpreputation }).(pulumi.BoolPtrOutput)
}

// Specifies the IP address that you want the system to trust.
func (o WafPolicyIpExceptionOutput) IpAddress() pulumi.StringOutput {
	return o.ApplyT(func(v WafPolicyIpException) string { return v.IpAddress }).(pulumi.StringOutput)
}

// Specifies the netmask of the exceptional IP address. This is an optional field.
func (o WafPolicyIpExceptionOutput) IpMask() pulumi.StringOutput {
	return o.ApplyT(func(v WafPolicyIpException) string { return v.IpMask }).(pulumi.StringOutput)
}

// Specifies when enabled the Policy Builder considers traffic from this IP address as being safe.
func (o WafPolicyIpExceptionOutput) TrustedbyPolicybuilder() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicyIpException) *bool { return v.TrustedbyPolicybuilder }).(pulumi.BoolPtrOutput)
}

type WafPolicyIpExceptionArrayOutput struct{ *pulumi.OutputState }

func (WafPolicyIpExceptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyIpException)(nil)).Elem()
}

func (o WafPolicyIpExceptionArrayOutput) ToWafPolicyIpExceptionArrayOutput() WafPolicyIpExceptionArrayOutput {
	return o
}

func (o WafPolicyIpExceptionArrayOutput) ToWafPolicyIpExceptionArrayOutputWithContext(ctx context.Context) WafPolicyIpExceptionArrayOutput {
	return o
}

func (o WafPolicyIpExceptionArrayOutput) Index(i pulumi.IntInput) WafPolicyIpExceptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicyIpException {
		return vs[0].([]WafPolicyIpException)[vs[1].(int)]
	}).(WafPolicyIpExceptionOutput)
}

type WafPolicyPolicyBuilder struct {
	// learning mode setting for policy-builder, possible options: [`automatic`,`disabled`, `manual`]
	LearningMode *string `pulumi:"learningMode"`
}

// WafPolicyPolicyBuilderInput is an input type that accepts WafPolicyPolicyBuilderArgs and WafPolicyPolicyBuilderOutput values.
// You can construct a concrete instance of `WafPolicyPolicyBuilderInput` via:
//
//	WafPolicyPolicyBuilderArgs{...}
type WafPolicyPolicyBuilderInput interface {
	pulumi.Input

	ToWafPolicyPolicyBuilderOutput() WafPolicyPolicyBuilderOutput
	ToWafPolicyPolicyBuilderOutputWithContext(context.Context) WafPolicyPolicyBuilderOutput
}

type WafPolicyPolicyBuilderArgs struct {
	// learning mode setting for policy-builder, possible options: [`automatic`,`disabled`, `manual`]
	LearningMode pulumi.StringPtrInput `pulumi:"learningMode"`
}

func (WafPolicyPolicyBuilderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyPolicyBuilder)(nil)).Elem()
}

func (i WafPolicyPolicyBuilderArgs) ToWafPolicyPolicyBuilderOutput() WafPolicyPolicyBuilderOutput {
	return i.ToWafPolicyPolicyBuilderOutputWithContext(context.Background())
}

func (i WafPolicyPolicyBuilderArgs) ToWafPolicyPolicyBuilderOutputWithContext(ctx context.Context) WafPolicyPolicyBuilderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyPolicyBuilderOutput)
}

// WafPolicyPolicyBuilderArrayInput is an input type that accepts WafPolicyPolicyBuilderArray and WafPolicyPolicyBuilderArrayOutput values.
// You can construct a concrete instance of `WafPolicyPolicyBuilderArrayInput` via:
//
//	WafPolicyPolicyBuilderArray{ WafPolicyPolicyBuilderArgs{...} }
type WafPolicyPolicyBuilderArrayInput interface {
	pulumi.Input

	ToWafPolicyPolicyBuilderArrayOutput() WafPolicyPolicyBuilderArrayOutput
	ToWafPolicyPolicyBuilderArrayOutputWithContext(context.Context) WafPolicyPolicyBuilderArrayOutput
}

type WafPolicyPolicyBuilderArray []WafPolicyPolicyBuilderInput

func (WafPolicyPolicyBuilderArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyPolicyBuilder)(nil)).Elem()
}

func (i WafPolicyPolicyBuilderArray) ToWafPolicyPolicyBuilderArrayOutput() WafPolicyPolicyBuilderArrayOutput {
	return i.ToWafPolicyPolicyBuilderArrayOutputWithContext(context.Background())
}

func (i WafPolicyPolicyBuilderArray) ToWafPolicyPolicyBuilderArrayOutputWithContext(ctx context.Context) WafPolicyPolicyBuilderArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicyPolicyBuilderArrayOutput)
}

type WafPolicyPolicyBuilderOutput struct{ *pulumi.OutputState }

func (WafPolicyPolicyBuilderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicyPolicyBuilder)(nil)).Elem()
}

func (o WafPolicyPolicyBuilderOutput) ToWafPolicyPolicyBuilderOutput() WafPolicyPolicyBuilderOutput {
	return o
}

func (o WafPolicyPolicyBuilderOutput) ToWafPolicyPolicyBuilderOutputWithContext(ctx context.Context) WafPolicyPolicyBuilderOutput {
	return o
}

// learning mode setting for policy-builder, possible options: [`automatic`,`disabled`, `manual`]
func (o WafPolicyPolicyBuilderOutput) LearningMode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WafPolicyPolicyBuilder) *string { return v.LearningMode }).(pulumi.StringPtrOutput)
}

type WafPolicyPolicyBuilderArrayOutput struct{ *pulumi.OutputState }

func (WafPolicyPolicyBuilderArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicyPolicyBuilder)(nil)).Elem()
}

func (o WafPolicyPolicyBuilderArrayOutput) ToWafPolicyPolicyBuilderArrayOutput() WafPolicyPolicyBuilderArrayOutput {
	return o
}

func (o WafPolicyPolicyBuilderArrayOutput) ToWafPolicyPolicyBuilderArrayOutputWithContext(ctx context.Context) WafPolicyPolicyBuilderArrayOutput {
	return o
}

func (o WafPolicyPolicyBuilderArrayOutput) Index(i pulumi.IntInput) WafPolicyPolicyBuilderOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicyPolicyBuilder {
		return vs[0].([]WafPolicyPolicyBuilder)[vs[1].(int)]
	}).(WafPolicyPolicyBuilderOutput)
}

type WafPolicySignaturesSetting struct {
	PlacesignaturesInStaging *bool `pulumi:"placesignaturesInStaging"`
	// setting true will enforce all signature from staging
	SignatureStaging *bool `pulumi:"signatureStaging"`
}

// WafPolicySignaturesSettingInput is an input type that accepts WafPolicySignaturesSettingArgs and WafPolicySignaturesSettingOutput values.
// You can construct a concrete instance of `WafPolicySignaturesSettingInput` via:
//
//	WafPolicySignaturesSettingArgs{...}
type WafPolicySignaturesSettingInput interface {
	pulumi.Input

	ToWafPolicySignaturesSettingOutput() WafPolicySignaturesSettingOutput
	ToWafPolicySignaturesSettingOutputWithContext(context.Context) WafPolicySignaturesSettingOutput
}

type WafPolicySignaturesSettingArgs struct {
	PlacesignaturesInStaging pulumi.BoolPtrInput `pulumi:"placesignaturesInStaging"`
	// setting true will enforce all signature from staging
	SignatureStaging pulumi.BoolPtrInput `pulumi:"signatureStaging"`
}

func (WafPolicySignaturesSettingArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicySignaturesSetting)(nil)).Elem()
}

func (i WafPolicySignaturesSettingArgs) ToWafPolicySignaturesSettingOutput() WafPolicySignaturesSettingOutput {
	return i.ToWafPolicySignaturesSettingOutputWithContext(context.Background())
}

func (i WafPolicySignaturesSettingArgs) ToWafPolicySignaturesSettingOutputWithContext(ctx context.Context) WafPolicySignaturesSettingOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicySignaturesSettingOutput)
}

// WafPolicySignaturesSettingArrayInput is an input type that accepts WafPolicySignaturesSettingArray and WafPolicySignaturesSettingArrayOutput values.
// You can construct a concrete instance of `WafPolicySignaturesSettingArrayInput` via:
//
//	WafPolicySignaturesSettingArray{ WafPolicySignaturesSettingArgs{...} }
type WafPolicySignaturesSettingArrayInput interface {
	pulumi.Input

	ToWafPolicySignaturesSettingArrayOutput() WafPolicySignaturesSettingArrayOutput
	ToWafPolicySignaturesSettingArrayOutputWithContext(context.Context) WafPolicySignaturesSettingArrayOutput
}

type WafPolicySignaturesSettingArray []WafPolicySignaturesSettingInput

func (WafPolicySignaturesSettingArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicySignaturesSetting)(nil)).Elem()
}

func (i WafPolicySignaturesSettingArray) ToWafPolicySignaturesSettingArrayOutput() WafPolicySignaturesSettingArrayOutput {
	return i.ToWafPolicySignaturesSettingArrayOutputWithContext(context.Background())
}

func (i WafPolicySignaturesSettingArray) ToWafPolicySignaturesSettingArrayOutputWithContext(ctx context.Context) WafPolicySignaturesSettingArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WafPolicySignaturesSettingArrayOutput)
}

type WafPolicySignaturesSettingOutput struct{ *pulumi.OutputState }

func (WafPolicySignaturesSettingOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WafPolicySignaturesSetting)(nil)).Elem()
}

func (o WafPolicySignaturesSettingOutput) ToWafPolicySignaturesSettingOutput() WafPolicySignaturesSettingOutput {
	return o
}

func (o WafPolicySignaturesSettingOutput) ToWafPolicySignaturesSettingOutputWithContext(ctx context.Context) WafPolicySignaturesSettingOutput {
	return o
}

func (o WafPolicySignaturesSettingOutput) PlacesignaturesInStaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicySignaturesSetting) *bool { return v.PlacesignaturesInStaging }).(pulumi.BoolPtrOutput)
}

// setting true will enforce all signature from staging
func (o WafPolicySignaturesSettingOutput) SignatureStaging() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WafPolicySignaturesSetting) *bool { return v.SignatureStaging }).(pulumi.BoolPtrOutput)
}

type WafPolicySignaturesSettingArrayOutput struct{ *pulumi.OutputState }

func (WafPolicySignaturesSettingArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]WafPolicySignaturesSetting)(nil)).Elem()
}

func (o WafPolicySignaturesSettingArrayOutput) ToWafPolicySignaturesSettingArrayOutput() WafPolicySignaturesSettingArrayOutput {
	return o
}

func (o WafPolicySignaturesSettingArrayOutput) ToWafPolicySignaturesSettingArrayOutputWithContext(ctx context.Context) WafPolicySignaturesSettingArrayOutput {
	return o
}

func (o WafPolicySignaturesSettingArrayOutput) Index(i pulumi.IntInput) WafPolicySignaturesSettingOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) WafPolicySignaturesSetting {
		return vs[0].([]WafPolicySignaturesSetting)[vs[1].(int)]
	}).(WafPolicySignaturesSettingOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EventServiceDiscoveryNodeInput)(nil)).Elem(), EventServiceDiscoveryNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*EventServiceDiscoveryNodeArrayInput)(nil)).Elem(), EventServiceDiscoveryNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppMonitorInput)(nil)).Elem(), FastHttpAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppMonitorPtrInput)(nil)).Elem(), FastHttpAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppPoolMemberInput)(nil)).Elem(), FastHttpAppPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppPoolMemberArrayInput)(nil)).Elem(), FastHttpAppPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppVirtualServerInput)(nil)).Elem(), FastHttpAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppVirtualServerPtrInput)(nil)).Elem(), FastHttpAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppWafSecurityPolicyInput)(nil)).Elem(), FastHttpAppWafSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpAppWafSecurityPolicyPtrInput)(nil)).Elem(), FastHttpAppWafSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppMonitorInput)(nil)).Elem(), FastHttpsAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppMonitorPtrInput)(nil)).Elem(), FastHttpsAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppPoolMemberInput)(nil)).Elem(), FastHttpsAppPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppPoolMemberArrayInput)(nil)).Elem(), FastHttpsAppPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppTlsClientProfileInput)(nil)).Elem(), FastHttpsAppTlsClientProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppTlsClientProfilePtrInput)(nil)).Elem(), FastHttpsAppTlsClientProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppTlsServerProfileInput)(nil)).Elem(), FastHttpsAppTlsServerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppTlsServerProfilePtrInput)(nil)).Elem(), FastHttpsAppTlsServerProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppVirtualServerInput)(nil)).Elem(), FastHttpsAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppVirtualServerPtrInput)(nil)).Elem(), FastHttpsAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppWafSecurityPolicyInput)(nil)).Elem(), FastHttpsAppWafSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastHttpsAppWafSecurityPolicyPtrInput)(nil)).Elem(), FastHttpsAppWafSecurityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastTcpAppMonitorInput)(nil)).Elem(), FastTcpAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastTcpAppMonitorPtrInput)(nil)).Elem(), FastTcpAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastTcpAppPoolMemberInput)(nil)).Elem(), FastTcpAppPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastTcpAppPoolMemberArrayInput)(nil)).Elem(), FastTcpAppPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastTcpAppVirtualServerInput)(nil)).Elem(), FastTcpAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastTcpAppVirtualServerPtrInput)(nil)).Elem(), FastTcpAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastUdpAppMonitorInput)(nil)).Elem(), FastUdpAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastUdpAppMonitorPtrInput)(nil)).Elem(), FastUdpAppMonitorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastUdpAppPoolMemberInput)(nil)).Elem(), FastUdpAppPoolMemberArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastUdpAppPoolMemberArrayInput)(nil)).Elem(), FastUdpAppPoolMemberArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastUdpAppVirtualServerInput)(nil)).Elem(), FastUdpAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FastUdpAppVirtualServerPtrInput)(nil)).Elem(), FastUdpAppVirtualServerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyFileTypeInput)(nil)).Elem(), WafPolicyFileTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyFileTypeArrayInput)(nil)).Elem(), WafPolicyFileTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyGraphqlProfileInput)(nil)).Elem(), WafPolicyGraphqlProfileArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyGraphqlProfileArrayInput)(nil)).Elem(), WafPolicyGraphqlProfileArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyGraphqlProfileDefenseAttributeInput)(nil)).Elem(), WafPolicyGraphqlProfileDefenseAttributeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyGraphqlProfileDefenseAttributeArrayInput)(nil)).Elem(), WafPolicyGraphqlProfileDefenseAttributeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyHostNameInput)(nil)).Elem(), WafPolicyHostNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyHostNameArrayInput)(nil)).Elem(), WafPolicyHostNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyIpExceptionInput)(nil)).Elem(), WafPolicyIpExceptionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyIpExceptionArrayInput)(nil)).Elem(), WafPolicyIpExceptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyPolicyBuilderInput)(nil)).Elem(), WafPolicyPolicyBuilderArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicyPolicyBuilderArrayInput)(nil)).Elem(), WafPolicyPolicyBuilderArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicySignaturesSettingInput)(nil)).Elem(), WafPolicySignaturesSettingArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WafPolicySignaturesSettingArrayInput)(nil)).Elem(), WafPolicySignaturesSettingArray{})
	pulumi.RegisterOutputType(EventServiceDiscoveryNodeOutput{})
	pulumi.RegisterOutputType(EventServiceDiscoveryNodeArrayOutput{})
	pulumi.RegisterOutputType(FastHttpAppMonitorOutput{})
	pulumi.RegisterOutputType(FastHttpAppMonitorPtrOutput{})
	pulumi.RegisterOutputType(FastHttpAppPoolMemberOutput{})
	pulumi.RegisterOutputType(FastHttpAppPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(FastHttpAppVirtualServerOutput{})
	pulumi.RegisterOutputType(FastHttpAppVirtualServerPtrOutput{})
	pulumi.RegisterOutputType(FastHttpAppWafSecurityPolicyOutput{})
	pulumi.RegisterOutputType(FastHttpAppWafSecurityPolicyPtrOutput{})
	pulumi.RegisterOutputType(FastHttpsAppMonitorOutput{})
	pulumi.RegisterOutputType(FastHttpsAppMonitorPtrOutput{})
	pulumi.RegisterOutputType(FastHttpsAppPoolMemberOutput{})
	pulumi.RegisterOutputType(FastHttpsAppPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(FastHttpsAppTlsClientProfileOutput{})
	pulumi.RegisterOutputType(FastHttpsAppTlsClientProfilePtrOutput{})
	pulumi.RegisterOutputType(FastHttpsAppTlsServerProfileOutput{})
	pulumi.RegisterOutputType(FastHttpsAppTlsServerProfilePtrOutput{})
	pulumi.RegisterOutputType(FastHttpsAppVirtualServerOutput{})
	pulumi.RegisterOutputType(FastHttpsAppVirtualServerPtrOutput{})
	pulumi.RegisterOutputType(FastHttpsAppWafSecurityPolicyOutput{})
	pulumi.RegisterOutputType(FastHttpsAppWafSecurityPolicyPtrOutput{})
	pulumi.RegisterOutputType(FastTcpAppMonitorOutput{})
	pulumi.RegisterOutputType(FastTcpAppMonitorPtrOutput{})
	pulumi.RegisterOutputType(FastTcpAppPoolMemberOutput{})
	pulumi.RegisterOutputType(FastTcpAppPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(FastTcpAppVirtualServerOutput{})
	pulumi.RegisterOutputType(FastTcpAppVirtualServerPtrOutput{})
	pulumi.RegisterOutputType(FastUdpAppMonitorOutput{})
	pulumi.RegisterOutputType(FastUdpAppMonitorPtrOutput{})
	pulumi.RegisterOutputType(FastUdpAppPoolMemberOutput{})
	pulumi.RegisterOutputType(FastUdpAppPoolMemberArrayOutput{})
	pulumi.RegisterOutputType(FastUdpAppVirtualServerOutput{})
	pulumi.RegisterOutputType(FastUdpAppVirtualServerPtrOutput{})
	pulumi.RegisterOutputType(WafPolicyFileTypeOutput{})
	pulumi.RegisterOutputType(WafPolicyFileTypeArrayOutput{})
	pulumi.RegisterOutputType(WafPolicyGraphqlProfileOutput{})
	pulumi.RegisterOutputType(WafPolicyGraphqlProfileArrayOutput{})
	pulumi.RegisterOutputType(WafPolicyGraphqlProfileDefenseAttributeOutput{})
	pulumi.RegisterOutputType(WafPolicyGraphqlProfileDefenseAttributeArrayOutput{})
	pulumi.RegisterOutputType(WafPolicyHostNameOutput{})
	pulumi.RegisterOutputType(WafPolicyHostNameArrayOutput{})
	pulumi.RegisterOutputType(WafPolicyIpExceptionOutput{})
	pulumi.RegisterOutputType(WafPolicyIpExceptionArrayOutput{})
	pulumi.RegisterOutputType(WafPolicyPolicyBuilderOutput{})
	pulumi.RegisterOutputType(WafPolicyPolicyBuilderArrayOutput{})
	pulumi.RegisterOutputType(WafPolicySignaturesSettingOutput{})
	pulumi.RegisterOutputType(WafPolicySignaturesSettingArrayOutput{})
}
