// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ltm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `bigip_ltm_snat` Manages a snat configuration
// 
// For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-bigip/blob/master/website/docs/r/ltm_snat.html.markdown.
type Snat struct {
	s *pulumi.ResourceState
}

// NewSnat registers a new resource with the given unique name, arguments, and options.
func NewSnat(ctx *pulumi.Context,
	name string, args *SnatArgs, opts ...pulumi.ResourceOpt) (*Snat, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Origins == nil {
		return nil, errors.New("missing required argument 'Origins'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["autolasthop"] = nil
		inputs["fullPath"] = nil
		inputs["mirror"] = nil
		inputs["name"] = nil
		inputs["origins"] = nil
		inputs["partition"] = nil
		inputs["snatpool"] = nil
		inputs["sourceport"] = nil
		inputs["translation"] = nil
		inputs["vlans"] = nil
		inputs["vlansdisabled"] = nil
	} else {
		inputs["autolasthop"] = args.Autolasthop
		inputs["fullPath"] = args.FullPath
		inputs["mirror"] = args.Mirror
		inputs["name"] = args.Name
		inputs["origins"] = args.Origins
		inputs["partition"] = args.Partition
		inputs["snatpool"] = args.Snatpool
		inputs["sourceport"] = args.Sourceport
		inputs["translation"] = args.Translation
		inputs["vlans"] = args.Vlans
		inputs["vlansdisabled"] = args.Vlansdisabled
	}
	s, err := ctx.RegisterResource("f5bigip:ltm/snat:Snat", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Snat{s: s}, nil
}

// GetSnat gets an existing Snat resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSnat(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SnatState, opts ...pulumi.ResourceOpt) (*Snat, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["autolasthop"] = state.Autolasthop
		inputs["fullPath"] = state.FullPath
		inputs["mirror"] = state.Mirror
		inputs["name"] = state.Name
		inputs["origins"] = state.Origins
		inputs["partition"] = state.Partition
		inputs["snatpool"] = state.Snatpool
		inputs["sourceport"] = state.Sourceport
		inputs["translation"] = state.Translation
		inputs["vlans"] = state.Vlans
		inputs["vlansdisabled"] = state.Vlansdisabled
	}
	s, err := ctx.ReadResource("f5bigip:ltm/snat:Snat", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Snat{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Snat) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Snat) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// Specifies whether to automatically map last hop for pools or not. The default is to use next level's defaul
func (r *Snat) Autolasthop() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["autolasthop"])
}

// Fullpath
func (r *Snat) FullPath() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["fullPath"])
}

// Enables or disables mirroring of SNAT connections.
func (r *Snat) Mirror() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["mirror"])
}

// Name of the snat
func (r *Snat) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// IP or hostname of the snat
func (r *Snat) Origins() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["origins"])
}

// Displays the administrative partition within which this profile resides
func (r *Snat) Partition() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["partition"])
}

// Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used.
func (r *Snat) Snatpool() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["snatpool"])
}

// Specifies whether the system preserves the source port of the connection. The default is preserve. Use of the preserve-strict setting should be restricted to UDP only under very special circumstances such as nPath or transparent (that is, no translation of any other L3/L4 field), where there is a 1:1 relationship between virtual IP addresses and node addresses, or when clustered multi-processing (CMP) is disabled. The change setting is useful for obfuscating internal network addresses.
func (r *Snat) Sourceport() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["sourceport"])
}

// Specifies the name of a translated IP address. Note that translated addresses are outside the traffic management system. You can only use this option when automap and snatpool are not used.
func (r *Snat) Translation() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["translation"])
}

// Specifies the name of the VLAN to which you want to assign the SNAT. The default is vlans-enabled.
func (r *Snat) Vlans() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["vlans"])
}

// Disables the SNAT on all VLANs.
func (r *Snat) Vlansdisabled() *pulumi.BoolOutput {
	return (*pulumi.BoolOutput)(r.s.State["vlansdisabled"])
}

// Input properties used for looking up and filtering Snat resources.
type SnatState struct {
	// Specifies whether to automatically map last hop for pools or not. The default is to use next level's defaul
	Autolasthop interface{}
	// Fullpath
	FullPath interface{}
	// Enables or disables mirroring of SNAT connections.
	Mirror interface{}
	// Name of the snat
	Name interface{}
	// IP or hostname of the snat
	Origins interface{}
	// Displays the administrative partition within which this profile resides
	Partition interface{}
	// Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used.
	Snatpool interface{}
	// Specifies whether the system preserves the source port of the connection. The default is preserve. Use of the preserve-strict setting should be restricted to UDP only under very special circumstances such as nPath or transparent (that is, no translation of any other L3/L4 field), where there is a 1:1 relationship between virtual IP addresses and node addresses, or when clustered multi-processing (CMP) is disabled. The change setting is useful for obfuscating internal network addresses.
	Sourceport interface{}
	// Specifies the name of a translated IP address. Note that translated addresses are outside the traffic management system. You can only use this option when automap and snatpool are not used.
	Translation interface{}
	// Specifies the name of the VLAN to which you want to assign the SNAT. The default is vlans-enabled.
	Vlans interface{}
	// Disables the SNAT on all VLANs.
	Vlansdisabled interface{}
}

// The set of arguments for constructing a Snat resource.
type SnatArgs struct {
	// Specifies whether to automatically map last hop for pools or not. The default is to use next level's defaul
	Autolasthop interface{}
	// Fullpath
	FullPath interface{}
	// Enables or disables mirroring of SNAT connections.
	Mirror interface{}
	// Name of the snat
	Name interface{}
	// IP or hostname of the snat
	Origins interface{}
	// Displays the administrative partition within which this profile resides
	Partition interface{}
	// Specifies the name of a SNAT pool. You can only use this option when automap and translation are not used.
	Snatpool interface{}
	// Specifies whether the system preserves the source port of the connection. The default is preserve. Use of the preserve-strict setting should be restricted to UDP only under very special circumstances such as nPath or transparent (that is, no translation of any other L3/L4 field), where there is a 1:1 relationship between virtual IP addresses and node addresses, or when clustered multi-processing (CMP) is disabled. The change setting is useful for obfuscating internal network addresses.
	Sourceport interface{}
	// Specifies the name of a translated IP address. Note that translated addresses are outside the traffic management system. You can only use this option when automap and snatpool are not used.
	Translation interface{}
	// Specifies the name of the VLAN to which you want to assign the SNAT. The default is vlans-enabled.
	Vlans interface{}
	// Disables the SNAT on all VLANs.
	Vlansdisabled interface{}
}
