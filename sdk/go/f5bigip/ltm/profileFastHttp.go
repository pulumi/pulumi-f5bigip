// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ltm

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

type ProfileFastHttp struct {
	s *pulumi.ResourceState
}

// NewProfileFastHttp registers a new resource with the given unique name, arguments, and options.
func NewProfileFastHttp(ctx *pulumi.Context,
	name string, args *ProfileFastHttpArgs, opts ...pulumi.ResourceOpt) (*ProfileFastHttp, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["connpoolMaxreuse"] = nil
		inputs["connpoolMaxsize"] = nil
		inputs["connpoolMinsize"] = nil
		inputs["connpoolReplenish"] = nil
		inputs["connpoolStep"] = nil
		inputs["connpoolidleTimeoutoverride"] = nil
		inputs["defaultsFrom"] = nil
		inputs["forcehttp10response"] = nil
		inputs["idleTimeout"] = nil
		inputs["maxheaderSize"] = nil
		inputs["name"] = nil
	} else {
		inputs["connpoolMaxreuse"] = args.ConnpoolMaxreuse
		inputs["connpoolMaxsize"] = args.ConnpoolMaxsize
		inputs["connpoolMinsize"] = args.ConnpoolMinsize
		inputs["connpoolReplenish"] = args.ConnpoolReplenish
		inputs["connpoolStep"] = args.ConnpoolStep
		inputs["connpoolidleTimeoutoverride"] = args.ConnpoolidleTimeoutoverride
		inputs["defaultsFrom"] = args.DefaultsFrom
		inputs["forcehttp10response"] = args.Forcehttp10response
		inputs["idleTimeout"] = args.IdleTimeout
		inputs["maxheaderSize"] = args.MaxheaderSize
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("f5bigip:ltm/profileFastHttp:ProfileFastHttp", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ProfileFastHttp{s: s}, nil
}

// GetProfileFastHttp gets an existing ProfileFastHttp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfileFastHttp(ctx *pulumi.Context,
	name string, id pulumi.ID, state *ProfileFastHttpState, opts ...pulumi.ResourceOpt) (*ProfileFastHttp, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["connpoolMaxreuse"] = state.ConnpoolMaxreuse
		inputs["connpoolMaxsize"] = state.ConnpoolMaxsize
		inputs["connpoolMinsize"] = state.ConnpoolMinsize
		inputs["connpoolReplenish"] = state.ConnpoolReplenish
		inputs["connpoolStep"] = state.ConnpoolStep
		inputs["connpoolidleTimeoutoverride"] = state.ConnpoolidleTimeoutoverride
		inputs["defaultsFrom"] = state.DefaultsFrom
		inputs["forcehttp10response"] = state.Forcehttp10response
		inputs["idleTimeout"] = state.IdleTimeout
		inputs["maxheaderSize"] = state.MaxheaderSize
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("f5bigip:ltm/profileFastHttp:ProfileFastHttp", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &ProfileFastHttp{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *ProfileFastHttp) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *ProfileFastHttp) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// connpool_maxreuse timer
func (r *ProfileFastHttp) ConnpoolMaxreuse() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["connpoolMaxreuse"])
}

// timer integer
func (r *ProfileFastHttp) ConnpoolMaxsize() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["connpoolMaxsize"])
}

// Pool min size
func (r *ProfileFastHttp) ConnpoolMinsize() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["connpoolMinsize"])
}

// enabled or disabled
func (r *ProfileFastHttp) ConnpoolReplenish() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["connpoolReplenish"])
}

// integer value
func (r *ProfileFastHttp) ConnpoolStep() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["connpoolStep"])
}

// idle_timeout can be given value
func (r *ProfileFastHttp) ConnpoolidleTimeoutoverride() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["connpoolidleTimeoutoverride"])
}

// Use the parent Fasthttp profile
func (r *ProfileFastHttp) DefaultsFrom() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["defaultsFrom"])
}

// disabled or enabled
func (r *ProfileFastHttp) Forcehttp10response() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["forcehttp10response"])
}

// integer value
func (r *ProfileFastHttp) IdleTimeout() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["idleTimeout"])
}

// integer value
func (r *ProfileFastHttp) MaxheaderSize() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["maxheaderSize"])
}

// Name of the Fasthttp Profile
func (r *ProfileFastHttp) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering ProfileFastHttp resources.
type ProfileFastHttpState struct {
	// connpool_maxreuse timer
	ConnpoolMaxreuse interface{}
	// timer integer
	ConnpoolMaxsize interface{}
	// Pool min size
	ConnpoolMinsize interface{}
	// enabled or disabled
	ConnpoolReplenish interface{}
	// integer value
	ConnpoolStep interface{}
	// idle_timeout can be given value
	ConnpoolidleTimeoutoverride interface{}
	// Use the parent Fasthttp profile
	DefaultsFrom interface{}
	// disabled or enabled
	Forcehttp10response interface{}
	// integer value
	IdleTimeout interface{}
	// integer value
	MaxheaderSize interface{}
	// Name of the Fasthttp Profile
	Name interface{}
}

// The set of arguments for constructing a ProfileFastHttp resource.
type ProfileFastHttpArgs struct {
	// connpool_maxreuse timer
	ConnpoolMaxreuse interface{}
	// timer integer
	ConnpoolMaxsize interface{}
	// Pool min size
	ConnpoolMinsize interface{}
	// enabled or disabled
	ConnpoolReplenish interface{}
	// integer value
	ConnpoolStep interface{}
	// idle_timeout can be given value
	ConnpoolidleTimeoutoverride interface{}
	// Use the parent Fasthttp profile
	DefaultsFrom interface{}
	// disabled or enabled
	Forcehttp10response interface{}
	// integer value
	IdleTimeout interface{}
	// integer value
	MaxheaderSize interface{}
	// Name of the Fasthttp Profile
	Name interface{}
}
