// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package ltm

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `ltm.Pool` Manages a pool configuration.
//
// Resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/my-pool.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-f5bigip/sdk/v2/go/f5bigip/ltm"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		monitor, err := ltm.NewMonitor(ctx, "monitor", &ltm.MonitorArgs{
// 			Name:   pulumi.String("/Common/terraform_monitor"),
// 			Parent: pulumi.String("/Common/http"),
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		_, err = ltm.NewPool(ctx, "pool", &ltm.PoolArgs{
// 			Name:                 pulumi.String("/Common/Axiom_Environment_APP1_Pool"),
// 			LoadBalancingMode:    pulumi.String("round-robin"),
// 			MinimumActiveMembers: pulumi.Int(1),
// 			Monitors: pulumi.StringArray{
// 				monitor.Name,
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
type Pool struct {
	pulumi.CustomResourceState

	// Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].
	AllowNat pulumi.StringOutput `pulumi:"allowNat"`
	// Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].
	AllowSnat pulumi.StringOutput `pulumi:"allowSnat"`
	// Specifies descriptive text that identifies the pool.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Specifies the load balancing method. The default is Round Robin.
	LoadBalancingMode pulumi.StringOutput `pulumi:"loadBalancingMode"`
	// Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.
	MinimumActiveMembers pulumi.IntOutput `pulumi:"minimumActiveMembers"`
	// List of monitor names to associate with the pool
	Monitors pulumi.StringArrayOutput `pulumi:"monitors"`
	// Name of the pool,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
	Name pulumi.StringOutput `pulumi:"name"`
	// Specifies the number of times the system tries to contact a new pool member after a passive failure.
	ReselectTries pulumi.IntOutput `pulumi:"reselectTries"`
	// Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.
	ServiceDownAction pulumi.StringOutput `pulumi:"serviceDownAction"`
	// Specifies the duration during which the system sends less traffic to a newly-enabled pool member.
	SlowRampTime pulumi.IntOutput `pulumi:"slowRampTime"`
}

// NewPool registers a new resource with the given unique name, arguments, and options.
func NewPool(ctx *pulumi.Context,
	name string, args *PoolArgs, opts ...pulumi.ResourceOption) (*Pool, error) {
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil {
		args = &PoolArgs{}
	}
	var resource Pool
	err := ctx.RegisterResource("f5bigip:ltm/pool:Pool", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPool gets an existing Pool resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPool(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PoolState, opts ...pulumi.ResourceOption) (*Pool, error) {
	var resource Pool
	err := ctx.ReadResource("f5bigip:ltm/pool:Pool", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Pool resources.
type poolState struct {
	// Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].
	AllowNat *string `pulumi:"allowNat"`
	// Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].
	AllowSnat *string `pulumi:"allowSnat"`
	// Specifies descriptive text that identifies the pool.
	Description *string `pulumi:"description"`
	// Specifies the load balancing method. The default is Round Robin.
	LoadBalancingMode *string `pulumi:"loadBalancingMode"`
	// Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.
	MinimumActiveMembers *int `pulumi:"minimumActiveMembers"`
	// List of monitor names to associate with the pool
	Monitors []string `pulumi:"monitors"`
	// Name of the pool,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
	Name *string `pulumi:"name"`
	// Specifies the number of times the system tries to contact a new pool member after a passive failure.
	ReselectTries *int `pulumi:"reselectTries"`
	// Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.
	ServiceDownAction *string `pulumi:"serviceDownAction"`
	// Specifies the duration during which the system sends less traffic to a newly-enabled pool member.
	SlowRampTime *int `pulumi:"slowRampTime"`
}

type PoolState struct {
	// Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].
	AllowNat pulumi.StringPtrInput
	// Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].
	AllowSnat pulumi.StringPtrInput
	// Specifies descriptive text that identifies the pool.
	Description pulumi.StringPtrInput
	// Specifies the load balancing method. The default is Round Robin.
	LoadBalancingMode pulumi.StringPtrInput
	// Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.
	MinimumActiveMembers pulumi.IntPtrInput
	// List of monitor names to associate with the pool
	Monitors pulumi.StringArrayInput
	// Name of the pool,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
	Name pulumi.StringPtrInput
	// Specifies the number of times the system tries to contact a new pool member after a passive failure.
	ReselectTries pulumi.IntPtrInput
	// Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.
	ServiceDownAction pulumi.StringPtrInput
	// Specifies the duration during which the system sends less traffic to a newly-enabled pool member.
	SlowRampTime pulumi.IntPtrInput
}

func (PoolState) ElementType() reflect.Type {
	return reflect.TypeOf((*poolState)(nil)).Elem()
}

type poolArgs struct {
	// Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].
	AllowNat *string `pulumi:"allowNat"`
	// Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].
	AllowSnat *string `pulumi:"allowSnat"`
	// Specifies descriptive text that identifies the pool.
	Description *string `pulumi:"description"`
	// Specifies the load balancing method. The default is Round Robin.
	LoadBalancingMode *string `pulumi:"loadBalancingMode"`
	// Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.
	MinimumActiveMembers *int `pulumi:"minimumActiveMembers"`
	// List of monitor names to associate with the pool
	Monitors []string `pulumi:"monitors"`
	// Name of the pool,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
	Name string `pulumi:"name"`
	// Specifies the number of times the system tries to contact a new pool member after a passive failure.
	ReselectTries *int `pulumi:"reselectTries"`
	// Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.
	ServiceDownAction *string `pulumi:"serviceDownAction"`
	// Specifies the duration during which the system sends less traffic to a newly-enabled pool member.
	SlowRampTime *int `pulumi:"slowRampTime"`
}

// The set of arguments for constructing a Pool resource.
type PoolArgs struct {
	// Specifies whether NATs are automatically enabled or disabled for any connections using this pool, [ Default : `yes`, Possible Values `yes` or `no`].
	AllowNat pulumi.StringPtrInput
	// Specifies whether SNATs are automatically enabled or disabled for any connections using this pool,[ Default : `yes`, Possible Values `yes` or `no`].
	AllowSnat pulumi.StringPtrInput
	// Specifies descriptive text that identifies the pool.
	Description pulumi.StringPtrInput
	// Specifies the load balancing method. The default is Round Robin.
	LoadBalancingMode pulumi.StringPtrInput
	// Specifies whether the system load balances traffic according to the priority number assigned to the pool member,Default Value is `0` meaning `disabled`.
	MinimumActiveMembers pulumi.IntPtrInput
	// List of monitor names to associate with the pool
	Monitors pulumi.StringArrayInput
	// Name of the pool,it should be "full path".The full path is the combination of the partition + name of the pool.(For example `/Common/my-pool`)
	Name pulumi.StringInput
	// Specifies the number of times the system tries to contact a new pool member after a passive failure.
	ReselectTries pulumi.IntPtrInput
	// Specifies how the system should respond when the target pool member becomes unavailable. The default is `None`, Possible values: `[none, reset, reselect, drop]`.
	ServiceDownAction pulumi.StringPtrInput
	// Specifies the duration during which the system sends less traffic to a newly-enabled pool member.
	SlowRampTime pulumi.IntPtrInput
}

func (PoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*poolArgs)(nil)).Elem()
}

type PoolInput interface {
	pulumi.Input

	ToPoolOutput() PoolOutput
	ToPoolOutputWithContext(ctx context.Context) PoolOutput
}

func (Pool) ElementType() reflect.Type {
	return reflect.TypeOf((*Pool)(nil)).Elem()
}

func (i Pool) ToPoolOutput() PoolOutput {
	return i.ToPoolOutputWithContext(context.Background())
}

func (i Pool) ToPoolOutputWithContext(ctx context.Context) PoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PoolOutput)
}

type PoolOutput struct {
	*pulumi.OutputState
}

func (PoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PoolOutput)(nil)).Elem()
}

func (o PoolOutput) ToPoolOutput() PoolOutput {
	return o
}

func (o PoolOutput) ToPoolOutputWithContext(ctx context.Context) PoolOutput {
	return o
}

func init() {
	pulumi.RegisterOutputType(PoolOutput{})
}
