// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ltm

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// `ltm.ProfileWebAcceleration` Configures a custom web-acceleration profile for use.
//
// For resources should be named with their "full path". The full path is the combination of the partition + name of the resource. For example /Common/sample-resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := ltm.NewProfileWebAcceleration(ctx, "sample-resource", &ltm.ProfileWebAccelerationArgs{
//				CacheMaxEntries: pulumi.Int(201),
//				CacheSize:       pulumi.Int(101),
//				DefaultsFrom:    pulumi.String("/Common/test2"),
//				Name:            pulumi.String("/Common/sample-resource"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ProfileWebAcceleration struct {
	pulumi.CustomResourceState

	// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
	CacheAgingRate pulumi.IntOutput `pulumi:"cacheAgingRate"`
	// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
	CacheClientCacheControlMode pulumi.StringOutput `pulumi:"cacheClientCacheControlMode"`
	// Inserts Age and Date headers in the response. The default value is `enabled`.
	CacheInsertAgeHeader pulumi.StringOutput `pulumi:"cacheInsertAgeHeader"`
	// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
	CacheMaxAge pulumi.IntOutput `pulumi:"cacheMaxAge"`
	// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
	CacheMaxEntries pulumi.IntOutput `pulumi:"cacheMaxEntries"`
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMaxSize pulumi.IntOutput `pulumi:"cacheObjectMaxSize"`
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMinSize pulumi.IntOutput `pulumi:"cacheObjectMinSize"`
	// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
	CacheSize pulumi.IntOutput `pulumi:"cacheSize"`
	// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
	CacheUriExcludes pulumi.StringArrayOutput `pulumi:"cacheUriExcludes"`
	// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
	CacheUriIncludeOverrides pulumi.StringArrayOutput `pulumi:"cacheUriIncludeOverrides"`
	// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
	CacheUriIncludes pulumi.StringArrayOutput `pulumi:"cacheUriIncludes"`
	// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
	CacheUriPinneds pulumi.StringArrayOutput `pulumi:"cacheUriPinneds"`
	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom pulumi.StringOutput `pulumi:"defaultsFrom"`
	// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewProfileWebAcceleration registers a new resource with the given unique name, arguments, and options.
func NewProfileWebAcceleration(ctx *pulumi.Context,
	name string, args *ProfileWebAccelerationArgs, opts ...pulumi.ResourceOption) (*ProfileWebAcceleration, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Name == nil {
		return nil, errors.New("invalid value for required argument 'Name'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ProfileWebAcceleration
	err := ctx.RegisterResource("f5bigip:ltm/profileWebAcceleration:ProfileWebAcceleration", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetProfileWebAcceleration gets an existing ProfileWebAcceleration resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetProfileWebAcceleration(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ProfileWebAccelerationState, opts ...pulumi.ResourceOption) (*ProfileWebAcceleration, error) {
	var resource ProfileWebAcceleration
	err := ctx.ReadResource("f5bigip:ltm/profileWebAcceleration:ProfileWebAcceleration", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ProfileWebAcceleration resources.
type profileWebAccelerationState struct {
	// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
	CacheAgingRate *int `pulumi:"cacheAgingRate"`
	// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
	CacheClientCacheControlMode *string `pulumi:"cacheClientCacheControlMode"`
	// Inserts Age and Date headers in the response. The default value is `enabled`.
	CacheInsertAgeHeader *string `pulumi:"cacheInsertAgeHeader"`
	// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
	CacheMaxAge *int `pulumi:"cacheMaxAge"`
	// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
	CacheMaxEntries *int `pulumi:"cacheMaxEntries"`
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMaxSize *int `pulumi:"cacheObjectMaxSize"`
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMinSize *int `pulumi:"cacheObjectMinSize"`
	// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
	CacheSize *int `pulumi:"cacheSize"`
	// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
	CacheUriExcludes []string `pulumi:"cacheUriExcludes"`
	// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
	CacheUriIncludeOverrides []string `pulumi:"cacheUriIncludeOverrides"`
	// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
	CacheUriIncludes []string `pulumi:"cacheUriIncludes"`
	// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
	CacheUriPinneds []string `pulumi:"cacheUriPinneds"`
	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom *string `pulumi:"defaultsFrom"`
	// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
	Name *string `pulumi:"name"`
}

type ProfileWebAccelerationState struct {
	// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
	CacheAgingRate pulumi.IntPtrInput
	// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
	CacheClientCacheControlMode pulumi.StringPtrInput
	// Inserts Age and Date headers in the response. The default value is `enabled`.
	CacheInsertAgeHeader pulumi.StringPtrInput
	// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
	CacheMaxAge pulumi.IntPtrInput
	// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
	CacheMaxEntries pulumi.IntPtrInput
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMaxSize pulumi.IntPtrInput
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMinSize pulumi.IntPtrInput
	// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
	CacheSize pulumi.IntPtrInput
	// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
	CacheUriExcludes pulumi.StringArrayInput
	// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
	CacheUriIncludeOverrides pulumi.StringArrayInput
	// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
	CacheUriIncludes pulumi.StringArrayInput
	// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
	CacheUriPinneds pulumi.StringArrayInput
	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom pulumi.StringPtrInput
	// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
	Name pulumi.StringPtrInput
}

func (ProfileWebAccelerationState) ElementType() reflect.Type {
	return reflect.TypeOf((*profileWebAccelerationState)(nil)).Elem()
}

type profileWebAccelerationArgs struct {
	// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
	CacheAgingRate *int `pulumi:"cacheAgingRate"`
	// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
	CacheClientCacheControlMode *string `pulumi:"cacheClientCacheControlMode"`
	// Inserts Age and Date headers in the response. The default value is `enabled`.
	CacheInsertAgeHeader *string `pulumi:"cacheInsertAgeHeader"`
	// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
	CacheMaxAge *int `pulumi:"cacheMaxAge"`
	// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
	CacheMaxEntries *int `pulumi:"cacheMaxEntries"`
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMaxSize *int `pulumi:"cacheObjectMaxSize"`
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMinSize *int `pulumi:"cacheObjectMinSize"`
	// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
	CacheSize *int `pulumi:"cacheSize"`
	// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
	CacheUriExcludes []string `pulumi:"cacheUriExcludes"`
	// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
	CacheUriIncludeOverrides []string `pulumi:"cacheUriIncludeOverrides"`
	// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
	CacheUriIncludes []string `pulumi:"cacheUriIncludes"`
	// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
	CacheUriPinneds []string `pulumi:"cacheUriPinneds"`
	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom *string `pulumi:"defaultsFrom"`
	// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
	Name string `pulumi:"name"`
}

// The set of arguments for constructing a ProfileWebAcceleration resource.
type ProfileWebAccelerationArgs struct {
	// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
	CacheAgingRate pulumi.IntPtrInput
	// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
	CacheClientCacheControlMode pulumi.StringPtrInput
	// Inserts Age and Date headers in the response. The default value is `enabled`.
	CacheInsertAgeHeader pulumi.StringPtrInput
	// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
	CacheMaxAge pulumi.IntPtrInput
	// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
	CacheMaxEntries pulumi.IntPtrInput
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMaxSize pulumi.IntPtrInput
	// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
	CacheObjectMinSize pulumi.IntPtrInput
	// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
	CacheSize pulumi.IntPtrInput
	// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
	CacheUriExcludes pulumi.StringArrayInput
	// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
	CacheUriIncludeOverrides pulumi.StringArrayInput
	// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
	CacheUriIncludes pulumi.StringArrayInput
	// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
	CacheUriPinneds pulumi.StringArrayInput
	// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
	DefaultsFrom pulumi.StringPtrInput
	// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
	Name pulumi.StringInput
}

func (ProfileWebAccelerationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*profileWebAccelerationArgs)(nil)).Elem()
}

type ProfileWebAccelerationInput interface {
	pulumi.Input

	ToProfileWebAccelerationOutput() ProfileWebAccelerationOutput
	ToProfileWebAccelerationOutputWithContext(ctx context.Context) ProfileWebAccelerationOutput
}

func (*ProfileWebAcceleration) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileWebAcceleration)(nil)).Elem()
}

func (i *ProfileWebAcceleration) ToProfileWebAccelerationOutput() ProfileWebAccelerationOutput {
	return i.ToProfileWebAccelerationOutputWithContext(context.Background())
}

func (i *ProfileWebAcceleration) ToProfileWebAccelerationOutputWithContext(ctx context.Context) ProfileWebAccelerationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebAccelerationOutput)
}

// ProfileWebAccelerationArrayInput is an input type that accepts ProfileWebAccelerationArray and ProfileWebAccelerationArrayOutput values.
// You can construct a concrete instance of `ProfileWebAccelerationArrayInput` via:
//
//	ProfileWebAccelerationArray{ ProfileWebAccelerationArgs{...} }
type ProfileWebAccelerationArrayInput interface {
	pulumi.Input

	ToProfileWebAccelerationArrayOutput() ProfileWebAccelerationArrayOutput
	ToProfileWebAccelerationArrayOutputWithContext(context.Context) ProfileWebAccelerationArrayOutput
}

type ProfileWebAccelerationArray []ProfileWebAccelerationInput

func (ProfileWebAccelerationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfileWebAcceleration)(nil)).Elem()
}

func (i ProfileWebAccelerationArray) ToProfileWebAccelerationArrayOutput() ProfileWebAccelerationArrayOutput {
	return i.ToProfileWebAccelerationArrayOutputWithContext(context.Background())
}

func (i ProfileWebAccelerationArray) ToProfileWebAccelerationArrayOutputWithContext(ctx context.Context) ProfileWebAccelerationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebAccelerationArrayOutput)
}

// ProfileWebAccelerationMapInput is an input type that accepts ProfileWebAccelerationMap and ProfileWebAccelerationMapOutput values.
// You can construct a concrete instance of `ProfileWebAccelerationMapInput` via:
//
//	ProfileWebAccelerationMap{ "key": ProfileWebAccelerationArgs{...} }
type ProfileWebAccelerationMapInput interface {
	pulumi.Input

	ToProfileWebAccelerationMapOutput() ProfileWebAccelerationMapOutput
	ToProfileWebAccelerationMapOutputWithContext(context.Context) ProfileWebAccelerationMapOutput
}

type ProfileWebAccelerationMap map[string]ProfileWebAccelerationInput

func (ProfileWebAccelerationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfileWebAcceleration)(nil)).Elem()
}

func (i ProfileWebAccelerationMap) ToProfileWebAccelerationMapOutput() ProfileWebAccelerationMapOutput {
	return i.ToProfileWebAccelerationMapOutputWithContext(context.Background())
}

func (i ProfileWebAccelerationMap) ToProfileWebAccelerationMapOutputWithContext(ctx context.Context) ProfileWebAccelerationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProfileWebAccelerationMapOutput)
}

type ProfileWebAccelerationOutput struct{ *pulumi.OutputState }

func (ProfileWebAccelerationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProfileWebAcceleration)(nil)).Elem()
}

func (o ProfileWebAccelerationOutput) ToProfileWebAccelerationOutput() ProfileWebAccelerationOutput {
	return o
}

func (o ProfileWebAccelerationOutput) ToProfileWebAccelerationOutputWithContext(ctx context.Context) ProfileWebAccelerationOutput {
	return o
}

// Specifies how quickly the system ages a cache entry. The aging rate ranges from 0 (slowest aging) to 10 (fastest aging). The default value is `9`.
func (o ProfileWebAccelerationOutput) CacheAgingRate() pulumi.IntOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.IntOutput { return v.CacheAgingRate }).(pulumi.IntOutput)
}

// Specifies which cache disabling headers sent by clients the system ignores. The default value is `all`.
func (o ProfileWebAccelerationOutput) CacheClientCacheControlMode() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringOutput { return v.CacheClientCacheControlMode }).(pulumi.StringOutput)
}

// Inserts Age and Date headers in the response. The default value is `enabled`.
func (o ProfileWebAccelerationOutput) CacheInsertAgeHeader() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringOutput { return v.CacheInsertAgeHeader }).(pulumi.StringOutput)
}

// Specifies how long the system considers the cached content to be valid. The default value is `3600 seconds`.
func (o ProfileWebAccelerationOutput) CacheMaxAge() pulumi.IntOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.IntOutput { return v.CacheMaxAge }).(pulumi.IntOutput)
}

// Specifies the maximum number of entries that can be in the cache. The default value is `0` (zero), which means that the system does not limit the maximum entries.
func (o ProfileWebAccelerationOutput) CacheMaxEntries() pulumi.IntOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.IntOutput { return v.CacheMaxEntries }).(pulumi.IntOutput)
}

// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
func (o ProfileWebAccelerationOutput) CacheObjectMaxSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.IntOutput { return v.CacheObjectMaxSize }).(pulumi.IntOutput)
}

// Specifies the smallest object that the system considers eligible for caching. The default value is `500 bytes`.
func (o ProfileWebAccelerationOutput) CacheObjectMinSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.IntOutput { return v.CacheObjectMinSize }).(pulumi.IntOutput)
}

// Specifies the maximum size for the cache. When the cache reaches the maximum size, the system starts removing the oldest entries. The default value is `100 megabytes`.
func (o ProfileWebAccelerationOutput) CacheSize() pulumi.IntOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.IntOutput { return v.CacheSize }).(pulumi.IntOutput)
}

// Configures a list of URIs to exclude from the cache. The default value of `none` specifies no URIs are excluded.
func (o ProfileWebAccelerationOutput) CacheUriExcludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringArrayOutput { return v.CacheUriExcludes }).(pulumi.StringArrayOutput)
}

// Configures a list of URIs to include in the cache even if they would normally be excluded due to factors like object size or HTTP request type. The default value of none specifies no URIs are to be forced into the cache.
func (o ProfileWebAccelerationOutput) CacheUriIncludeOverrides() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringArrayOutput { return v.CacheUriIncludeOverrides }).(pulumi.StringArrayOutput)
}

// Configures a list of URIs to include in the cache. The default value of `.*` specifies that all URIs are cacheable.
func (o ProfileWebAccelerationOutput) CacheUriIncludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringArrayOutput { return v.CacheUriIncludes }).(pulumi.StringArrayOutput)
}

// Configures a list of URIs to keep in the cache. The pinning process keeps URIs in cache when they would normally be evicted to make room for more active URIs.
func (o ProfileWebAccelerationOutput) CacheUriPinneds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringArrayOutput { return v.CacheUriPinneds }).(pulumi.StringArrayOutput)
}

// Specifies the profile that you want to use as the parent profile. Your new profile inherits all settings and values from the parent profile specified.
func (o ProfileWebAccelerationOutput) DefaultsFrom() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringOutput { return v.DefaultsFrom }).(pulumi.StringOutput)
}

// Specifies the name of the web acceleration profile service ,name of Profile should be full path. Full path is the combination of the `partition + web acceleration profile name`,For example `/Common/sample-resource`.
func (o ProfileWebAccelerationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ProfileWebAcceleration) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ProfileWebAccelerationArrayOutput struct{ *pulumi.OutputState }

func (ProfileWebAccelerationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ProfileWebAcceleration)(nil)).Elem()
}

func (o ProfileWebAccelerationArrayOutput) ToProfileWebAccelerationArrayOutput() ProfileWebAccelerationArrayOutput {
	return o
}

func (o ProfileWebAccelerationArrayOutput) ToProfileWebAccelerationArrayOutputWithContext(ctx context.Context) ProfileWebAccelerationArrayOutput {
	return o
}

func (o ProfileWebAccelerationArrayOutput) Index(i pulumi.IntInput) ProfileWebAccelerationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ProfileWebAcceleration {
		return vs[0].([]*ProfileWebAcceleration)[vs[1].(int)]
	}).(ProfileWebAccelerationOutput)
}

type ProfileWebAccelerationMapOutput struct{ *pulumi.OutputState }

func (ProfileWebAccelerationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ProfileWebAcceleration)(nil)).Elem()
}

func (o ProfileWebAccelerationMapOutput) ToProfileWebAccelerationMapOutput() ProfileWebAccelerationMapOutput {
	return o
}

func (o ProfileWebAccelerationMapOutput) ToProfileWebAccelerationMapOutputWithContext(ctx context.Context) ProfileWebAccelerationMapOutput {
	return o
}

func (o ProfileWebAccelerationMapOutput) MapIndex(k pulumi.StringInput) ProfileWebAccelerationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ProfileWebAcceleration {
		return vs[0].(map[string]*ProfileWebAcceleration)[vs[1].(string)]
	}).(ProfileWebAccelerationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebAccelerationInput)(nil)).Elem(), &ProfileWebAcceleration{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebAccelerationArrayInput)(nil)).Elem(), ProfileWebAccelerationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProfileWebAccelerationMapInput)(nil)).Elem(), ProfileWebAccelerationMap{})
	pulumi.RegisterOutputType(ProfileWebAccelerationOutput{})
	pulumi.RegisterOutputType(ProfileWebAccelerationArrayOutput{})
	pulumi.RegisterOutputType(ProfileWebAccelerationMapOutput{})
}
