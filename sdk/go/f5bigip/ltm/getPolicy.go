// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ltm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source (`ltm.Policy`) to get the ltm policy details available on BIG-IP
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/ltm"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			test, err := ltm.LookupPolicy(ctx, &ltm.LookupPolicyArgs{
//				Name: "/Common/test-policy",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("bigipPolicy", test.Rules)
//			return nil
//		})
//	}
//
// ```
func LookupPolicy(ctx *pulumi.Context, args *LookupPolicyArgs, opts ...pulumi.InvokeOption) (*LookupPolicyResult, error) {
	var rv LookupPolicyResult
	err := ctx.Invoke("f5bigip:ltm/getPolicy:getPolicy", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPolicy.
type LookupPolicyArgs struct {
	// Specifies the controls.
	Controls []string `pulumi:"controls"`
	// Name of the policy which includes partion ( /partition/policy-name )
	Name          string  `pulumi:"name"`
	PublishedCopy *string `pulumi:"publishedCopy"`
	// Specifies the protocol.
	Requires []string `pulumi:"requires"`
	// Rules defined in the policy.
	Rules []GetPolicyRule `pulumi:"rules"`
	// Specifies the match strategy.
	Strategy *string `pulumi:"strategy"`
}

// A collection of values returned by getPolicy.
type LookupPolicyResult struct {
	// Specifies the controls.
	Controls []string `pulumi:"controls"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the policy.
	Name          string  `pulumi:"name"`
	PublishedCopy *string `pulumi:"publishedCopy"`
	// Specifies the protocol.
	Requires []string `pulumi:"requires"`
	// Rules defined in the policy.
	Rules []GetPolicyRule `pulumi:"rules"`
	// Specifies the match strategy.
	Strategy *string `pulumi:"strategy"`
}

func LookupPolicyOutput(ctx *pulumi.Context, args LookupPolicyOutputArgs, opts ...pulumi.InvokeOption) LookupPolicyResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupPolicyResult, error) {
			args := v.(LookupPolicyArgs)
			r, err := LookupPolicy(ctx, &args, opts...)
			var s LookupPolicyResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupPolicyResultOutput)
}

// A collection of arguments for invoking getPolicy.
type LookupPolicyOutputArgs struct {
	// Specifies the controls.
	Controls pulumi.StringArrayInput `pulumi:"controls"`
	// Name of the policy which includes partion ( /partition/policy-name )
	Name          pulumi.StringInput    `pulumi:"name"`
	PublishedCopy pulumi.StringPtrInput `pulumi:"publishedCopy"`
	// Specifies the protocol.
	Requires pulumi.StringArrayInput `pulumi:"requires"`
	// Rules defined in the policy.
	Rules GetPolicyRuleArrayInput `pulumi:"rules"`
	// Specifies the match strategy.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
}

func (LookupPolicyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyArgs)(nil)).Elem()
}

// A collection of values returned by getPolicy.
type LookupPolicyResultOutput struct{ *pulumi.OutputState }

func (LookupPolicyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupPolicyResult)(nil)).Elem()
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutput() LookupPolicyResultOutput {
	return o
}

func (o LookupPolicyResultOutput) ToLookupPolicyResultOutputWithContext(ctx context.Context) LookupPolicyResultOutput {
	return o
}

// Specifies the controls.
func (o LookupPolicyResultOutput) Controls() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []string { return v.Controls }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupPolicyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the policy.
func (o LookupPolicyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupPolicyResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o LookupPolicyResultOutput) PublishedCopy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyResult) *string { return v.PublishedCopy }).(pulumi.StringPtrOutput)
}

// Specifies the protocol.
func (o LookupPolicyResultOutput) Requires() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []string { return v.Requires }).(pulumi.StringArrayOutput)
}

// Rules defined in the policy.
func (o LookupPolicyResultOutput) Rules() GetPolicyRuleArrayOutput {
	return o.ApplyT(func(v LookupPolicyResult) []GetPolicyRule { return v.Rules }).(GetPolicyRuleArrayOutput)
}

// Specifies the match strategy.
func (o LookupPolicyResultOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupPolicyResult) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupPolicyResultOutput{})
}
