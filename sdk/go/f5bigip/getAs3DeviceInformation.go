// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package f5bigip

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetAs3DeviceInformation(ctx *pulumi.Context, args *GetAs3DeviceInformationArgs, opts ...pulumi.InvokeOption) (*GetAs3DeviceInformationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAs3DeviceInformationResult
	err := ctx.Invoke("f5bigip:index/getAs3DeviceInformation:getAs3DeviceInformation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAs3DeviceInformation.
type GetAs3DeviceInformationArgs struct {
	Applications []string `pulumi:"applications"`
	Tenant       string   `pulumi:"tenant"`
}

// A collection of values returned by getAs3DeviceInformation.
type GetAs3DeviceInformationResult struct {
	Applications []string `pulumi:"applications"`
	As3Json      string   `pulumi:"as3Json"`
	// The provider-assigned unique ID for this managed resource.
	Id     string `pulumi:"id"`
	Tenant string `pulumi:"tenant"`
}

func GetAs3DeviceInformationOutput(ctx *pulumi.Context, args GetAs3DeviceInformationOutputArgs, opts ...pulumi.InvokeOption) GetAs3DeviceInformationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetAs3DeviceInformationResultOutput, error) {
			args := v.(GetAs3DeviceInformationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("f5bigip:index/getAs3DeviceInformation:getAs3DeviceInformation", args, GetAs3DeviceInformationResultOutput{}, options).(GetAs3DeviceInformationResultOutput), nil
		}).(GetAs3DeviceInformationResultOutput)
}

// A collection of arguments for invoking getAs3DeviceInformation.
type GetAs3DeviceInformationOutputArgs struct {
	Applications pulumi.StringArrayInput `pulumi:"applications"`
	Tenant       pulumi.StringInput      `pulumi:"tenant"`
}

func (GetAs3DeviceInformationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAs3DeviceInformationArgs)(nil)).Elem()
}

// A collection of values returned by getAs3DeviceInformation.
type GetAs3DeviceInformationResultOutput struct{ *pulumi.OutputState }

func (GetAs3DeviceInformationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAs3DeviceInformationResult)(nil)).Elem()
}

func (o GetAs3DeviceInformationResultOutput) ToGetAs3DeviceInformationResultOutput() GetAs3DeviceInformationResultOutput {
	return o
}

func (o GetAs3DeviceInformationResultOutput) ToGetAs3DeviceInformationResultOutputWithContext(ctx context.Context) GetAs3DeviceInformationResultOutput {
	return o
}

func (o GetAs3DeviceInformationResultOutput) Applications() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAs3DeviceInformationResult) []string { return v.Applications }).(pulumi.StringArrayOutput)
}

func (o GetAs3DeviceInformationResultOutput) As3Json() pulumi.StringOutput {
	return o.ApplyT(func(v GetAs3DeviceInformationResult) string { return v.As3Json }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetAs3DeviceInformationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAs3DeviceInformationResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAs3DeviceInformationResultOutput) Tenant() pulumi.StringOutput {
	return o.ApplyT(func(v GetAs3DeviceInformationResult) string { return v.Tenant }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAs3DeviceInformationResultOutput{})
}
