// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package net

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// `bigip_net_selfip` Manages a selfip configuration
// 
// Resource should be named with their "full path". The full path is the combination of the partition + name of the resource, for example /Common/my-selfip.
type SelfIp struct {
	s *pulumi.ResourceState
}

// NewSelfIp registers a new resource with the given unique name, arguments, and options.
func NewSelfIp(ctx *pulumi.Context,
	name string, args *SelfIpArgs, opts ...pulumi.ResourceOpt) (*SelfIp, error) {
	if args == nil || args.Ip == nil {
		return nil, errors.New("missing required argument 'Ip'")
	}
	if args == nil || args.Name == nil {
		return nil, errors.New("missing required argument 'Name'")
	}
	if args == nil || args.Vlan == nil {
		return nil, errors.New("missing required argument 'Vlan'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["ip"] = nil
		inputs["name"] = nil
		inputs["trafficGroup"] = nil
		inputs["vlan"] = nil
	} else {
		inputs["ip"] = args.Ip
		inputs["name"] = args.Name
		inputs["trafficGroup"] = args.TrafficGroup
		inputs["vlan"] = args.Vlan
	}
	s, err := ctx.RegisterResource("f5bigip:net/selfIp:SelfIp", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SelfIp{s: s}, nil
}

// GetSelfIp gets an existing SelfIp resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetSelfIp(ctx *pulumi.Context,
	name string, id pulumi.ID, state *SelfIpState, opts ...pulumi.ResourceOpt) (*SelfIp, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["ip"] = state.Ip
		inputs["name"] = state.Name
		inputs["trafficGroup"] = state.TrafficGroup
		inputs["vlan"] = state.Vlan
	}
	s, err := ctx.ReadResource("f5bigip:net/selfIp:SelfIp", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &SelfIp{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *SelfIp) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *SelfIp) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The Self IP's address and netmask.
func (r *SelfIp) Ip() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["ip"])
}

// Name of the selfip
func (r *SelfIp) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.
func (r *SelfIp) TrafficGroup() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["trafficGroup"])
}

// Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.
func (r *SelfIp) Vlan() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["vlan"])
}

// Input properties used for looking up and filtering SelfIp resources.
type SelfIpState struct {
	// The Self IP's address and netmask.
	Ip interface{}
	// Name of the selfip
	Name interface{}
	// Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.
	TrafficGroup interface{}
	// Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.
	Vlan interface{}
}

// The set of arguments for constructing a SelfIp resource.
type SelfIpArgs struct {
	// The Self IP's address and netmask.
	Ip interface{}
	// Name of the selfip
	Name interface{}
	// Specifies the traffic group, defaults to `traffic-group-local-only` if not specified.
	TrafficGroup interface{}
	// Specifies the VLAN for which you are setting a self IP address. This setting must be provided when a self IP is created.
	Vlan interface{}
}
