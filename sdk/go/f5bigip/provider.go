// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package f5bigip

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// The provider type for the bigip package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}
	if args.Address == nil {
		args.Address = pulumi.StringPtr(getEnvOrDefault("", nil, "BIGIP_HOST").(string))
	}
	if args.LoginRef == nil {
		args.LoginRef = pulumi.StringPtr(getEnvOrDefault("", nil, "BIGIP_LOGIN_REF").(string))
	}
	if args.Password == nil {
		args.Password = pulumi.StringPtr(getEnvOrDefault("", nil, "BIGIP_PASSWORD").(string))
	}
	if args.TokenAuth == nil {
		args.TokenAuth = pulumi.BoolPtr(getEnvOrDefault(false, parseEnvBool, "BIGIP_TOKEN_AUTH").(bool))
	}
	if args.Username == nil {
		args.Username = pulumi.StringPtr(getEnvOrDefault("", nil, "BIGIP_USER").(string))
	}
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:f5bigip", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// Domain name/IP of the BigIP
	Address *string `pulumi:"address"`
	// Login reference for token authentication (see BIG-IP REST docs for details)
	LoginRef *string `pulumi:"loginRef"`
	// The user's password
	Password *string `pulumi:"password"`
	// Management Port to connect to Bigip
	Port *string `pulumi:"port"`
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	TokenAuth *bool `pulumi:"tokenAuth"`
	// Username with API access to the BigIP
	Username *string `pulumi:"username"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// Domain name/IP of the BigIP
	Address pulumi.StringPtrInput
	// Login reference for token authentication (see BIG-IP REST docs for details)
	LoginRef pulumi.StringPtrInput
	// The user's password
	Password pulumi.StringPtrInput
	// Management Port to connect to Bigip
	Port pulumi.StringPtrInput
	// Enable to use an external authentication source (LDAP, TACACS, etc)
	TokenAuth pulumi.BoolPtrInput
	// Username with API access to the BigIP
	Username pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}
