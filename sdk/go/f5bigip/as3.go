// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package f5bigip

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// `.As3` provides details about bigip as3 resource
//
// This resource is helpful to configure as3 declarative JSON on BIG-IP.
type As3 struct {
	pulumi.CustomResourceState

	// Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function
	As3Json pulumi.StringOutput `pulumi:"as3Json"`
	// If there are muntiple tenants in a json this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified
	TenantFilter pulumi.StringPtrOutput `pulumi:"tenantFilter"`
	// Name of Tenant
	TenantList pulumi.StringOutput `pulumi:"tenantList"`
	// Name of Tenant
	TenantName pulumi.StringPtrOutput `pulumi:"tenantName"`
}

// NewAs3 registers a new resource with the given unique name, arguments, and options.
func NewAs3(ctx *pulumi.Context,
	name string, args *As3Args, opts ...pulumi.ResourceOption) (*As3, error) {
	if args == nil || args.As3Json == nil {
		return nil, errors.New("missing required argument 'As3Json'")
	}
	if args == nil {
		args = &As3Args{}
	}
	var resource As3
	err := ctx.RegisterResource("f5bigip:index/as3:As3", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetAs3 gets an existing As3 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetAs3(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *As3State, opts ...pulumi.ResourceOption) (*As3, error) {
	var resource As3
	err := ctx.ReadResource("f5bigip:index/as3:As3", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering As3 resources.
type as3State struct {
	// Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function
	As3Json *string `pulumi:"as3Json"`
	// If there are muntiple tenants in a json this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified
	TenantFilter *string `pulumi:"tenantFilter"`
	// Name of Tenant
	TenantList *string `pulumi:"tenantList"`
	// Name of Tenant
	TenantName *string `pulumi:"tenantName"`
}

type As3State struct {
	// Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function
	As3Json pulumi.StringPtrInput
	// If there are muntiple tenants in a json this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified
	TenantFilter pulumi.StringPtrInput
	// Name of Tenant
	TenantList pulumi.StringPtrInput
	// Name of Tenant
	TenantName pulumi.StringPtrInput
}

func (As3State) ElementType() reflect.Type {
	return reflect.TypeOf((*as3State)(nil)).Elem()
}

type as3Args struct {
	// Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function
	As3Json string `pulumi:"as3Json"`
	// If there are muntiple tenants in a json this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified
	TenantFilter *string `pulumi:"tenantFilter"`
	// Name of Tenant
	TenantList *string `pulumi:"tenantList"`
	// Name of Tenant
	TenantName *string `pulumi:"tenantName"`
}

// The set of arguments for constructing a As3 resource.
type As3Args struct {
	// Path/Filename of Declarative AS3 JSON which is a json file used with builtin ```file``` function
	As3Json pulumi.StringInput
	// If there are muntiple tenants in a json this attribute helps the user to set a particular tenant to which he want to reflect the changes. Other tenants will neither be created nor be modified
	TenantFilter pulumi.StringPtrInput
	// Name of Tenant
	TenantList pulumi.StringPtrInput
	// Name of Tenant
	TenantName pulumi.StringPtrInput
}

func (As3Args) ElementType() reflect.Type {
	return reflect.TypeOf((*as3Args)(nil)).Elem()
}
