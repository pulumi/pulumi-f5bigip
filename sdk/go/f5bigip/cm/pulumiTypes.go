// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cm

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-f5bigip/sdk/v3/go/f5bigip/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type DeviceGroupDevice struct {
	// Is the name of the device Group
	Name          *string `pulumi:"name"`
	SetSyncLeader *bool   `pulumi:"setSyncLeader"`
}

// DeviceGroupDeviceInput is an input type that accepts DeviceGroupDeviceArgs and DeviceGroupDeviceOutput values.
// You can construct a concrete instance of `DeviceGroupDeviceInput` via:
//
//	DeviceGroupDeviceArgs{...}
type DeviceGroupDeviceInput interface {
	pulumi.Input

	ToDeviceGroupDeviceOutput() DeviceGroupDeviceOutput
	ToDeviceGroupDeviceOutputWithContext(context.Context) DeviceGroupDeviceOutput
}

type DeviceGroupDeviceArgs struct {
	// Is the name of the device Group
	Name          pulumi.StringPtrInput `pulumi:"name"`
	SetSyncLeader pulumi.BoolPtrInput   `pulumi:"setSyncLeader"`
}

func (DeviceGroupDeviceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceGroupDevice)(nil)).Elem()
}

func (i DeviceGroupDeviceArgs) ToDeviceGroupDeviceOutput() DeviceGroupDeviceOutput {
	return i.ToDeviceGroupDeviceOutputWithContext(context.Background())
}

func (i DeviceGroupDeviceArgs) ToDeviceGroupDeviceOutputWithContext(ctx context.Context) DeviceGroupDeviceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceGroupDeviceOutput)
}

// DeviceGroupDeviceArrayInput is an input type that accepts DeviceGroupDeviceArray and DeviceGroupDeviceArrayOutput values.
// You can construct a concrete instance of `DeviceGroupDeviceArrayInput` via:
//
//	DeviceGroupDeviceArray{ DeviceGroupDeviceArgs{...} }
type DeviceGroupDeviceArrayInput interface {
	pulumi.Input

	ToDeviceGroupDeviceArrayOutput() DeviceGroupDeviceArrayOutput
	ToDeviceGroupDeviceArrayOutputWithContext(context.Context) DeviceGroupDeviceArrayOutput
}

type DeviceGroupDeviceArray []DeviceGroupDeviceInput

func (DeviceGroupDeviceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceGroupDevice)(nil)).Elem()
}

func (i DeviceGroupDeviceArray) ToDeviceGroupDeviceArrayOutput() DeviceGroupDeviceArrayOutput {
	return i.ToDeviceGroupDeviceArrayOutputWithContext(context.Background())
}

func (i DeviceGroupDeviceArray) ToDeviceGroupDeviceArrayOutputWithContext(ctx context.Context) DeviceGroupDeviceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceGroupDeviceArrayOutput)
}

type DeviceGroupDeviceOutput struct{ *pulumi.OutputState }

func (DeviceGroupDeviceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceGroupDevice)(nil)).Elem()
}

func (o DeviceGroupDeviceOutput) ToDeviceGroupDeviceOutput() DeviceGroupDeviceOutput {
	return o
}

func (o DeviceGroupDeviceOutput) ToDeviceGroupDeviceOutputWithContext(ctx context.Context) DeviceGroupDeviceOutput {
	return o
}

// Is the name of the device Group
func (o DeviceGroupDeviceOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceGroupDevice) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o DeviceGroupDeviceOutput) SetSyncLeader() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceGroupDevice) *bool { return v.SetSyncLeader }).(pulumi.BoolPtrOutput)
}

type DeviceGroupDeviceArrayOutput struct{ *pulumi.OutputState }

func (DeviceGroupDeviceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceGroupDevice)(nil)).Elem()
}

func (o DeviceGroupDeviceArrayOutput) ToDeviceGroupDeviceArrayOutput() DeviceGroupDeviceArrayOutput {
	return o
}

func (o DeviceGroupDeviceArrayOutput) ToDeviceGroupDeviceArrayOutputWithContext(ctx context.Context) DeviceGroupDeviceArrayOutput {
	return o
}

func (o DeviceGroupDeviceArrayOutput) Index(i pulumi.IntInput) DeviceGroupDeviceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceGroupDevice {
		return vs[0].([]DeviceGroupDevice)[vs[1].(int)]
	}).(DeviceGroupDeviceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceGroupDeviceInput)(nil)).Elem(), DeviceGroupDeviceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceGroupDeviceArrayInput)(nil)).Elem(), DeviceGroupDeviceArray{})
	pulumi.RegisterOutputType(DeviceGroupDeviceOutput{})
	pulumi.RegisterOutputType(DeviceGroupDeviceArrayOutput{})
}
